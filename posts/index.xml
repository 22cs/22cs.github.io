<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 我的博客</title><link>https://example.com/posts/</link><description>Recent content in Posts on 我的博客</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sun, 16 Mar 2025 20:37:22 +0800</lastBuildDate><atom:link href="https://example.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>25-03-16</title><link>https://example.com/post/250316-2lu4u4.html</link><pubDate>Sun, 16 Mar 2025 13:02:08 +0800</pubDate><guid>https://example.com/post/250316-2lu4u4.html</guid><description>&lt;p>测试第二弹&lt;/p></description></item><item><title>Beyond the 70%: Maximizing the human 30% of AI-assisted coding</title><link>https://example.com/post/beyond-the-70-maximizing-the-human-30-of-aiassisted-coding-zuyie4.html</link><pubDate>Sun, 16 Mar 2025 12:19:51 +0800</pubDate><guid>https://example.com/post/beyond-the-70-maximizing-the-human-30-of-aiassisted-coding-zuyie4.html</guid><description>&lt;p>*This is a follow-up to my article “&lt;em>​&lt;/em>&lt;a href="https://addyo.substack.com/p/the-70-problem-hard-truths-about">The 70% problem: Hard truths about AI-assisted coding&lt;/a>*​ &lt;em>”这是我的文章“&lt;/em> *&lt;a href="https://addyo.substack.com/p/the-70-problem-hard-truths-about">70% 的问题：关于人工智能辅助编码的残酷事实&lt;/a>*​ &lt;em>”的后续&lt;/em>&lt;/p>
&lt;p>AI coding assistants like Cursor, Cline, Copilot and WindSurf have transformed how software is built, shouldering much of the grunt work and boilerplate. Yet, as experienced developers and industry leaders note, there &lt;a href="https://addyo.substack.com/p/the-70-problem-hard-truths-about">remains&lt;/a> a crucial portion of software engineering that AI &lt;strong>does not&lt;/strong> handle well – roughly that last “30%” of the job that separates a toy solution from a production-ready system. This gap includes the hard parts: understanding complex requirements, architecting maintainable systems, handling edge cases, and ensuring code correctness. In other words, while AI can generate &lt;em>code&lt;/em>, it often struggles with &lt;em>engineering&lt;/em>.&lt;br>
Cursor、Cline、Copilot 和 WindSurf 等 AI 编码助手已经改变了软件的构建方式，承担了大部分繁重的工作和样板。然而，正如经验丰富的开发人员和行业领导者所指出的那样，软件工程中&lt;a href="https://addyo.substack.com/p/the-70-problem-hard-truths-about">仍有&lt;/a>一部分关键部分是 AI&lt;strong>无法&lt;/strong>处理的——大约是将玩具解决方案与可用于生产的系统区分开来的最后“30%”的工作。这一差距包括困难的部分：理解复杂的需求、构建可维护的系统、处理极端情况以及确保代码的正确性。换句话说，虽然 AI 可以生成&lt;em>代码&lt;/em>，但它在&lt;em>工程方面&lt;/em>往往举步维艰。&lt;/p></description></item></channel></rss>