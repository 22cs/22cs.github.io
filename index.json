[{"content":"日常表 项目 是否完成(0/1) 备注 喝八杯水 吃早餐 0 没吃 吃午餐 吃晚餐 正念练习 运动 阅读 睡眠 1 睡了 6 小时 37分，1:13入睡 代码训练 写一个博客 练字 英语阅读 英语口语 英语听力 日志 09:35:18\n心情还是很差。\n","date":"2025-03-30","permalink":"https://22cs.github.io/post/20250330-z1fapni.html","title":"2025-03-30"},{"content":"日常表 项目 是否完成(0/1) 备注 喝八杯水 也许喝够了 吃早餐 0 起床晚了，算了 吃午餐 1 吃了 吃晚餐 0 没吃 正念练习 0 没做 运动 阅读 睡眠 1 睡了 7 小时 11 分，0:16入睡 代码训练 写一个博客 练字 英语阅读 英语口语 英语听力 日志 00:20:45\n哈哈，抑郁一整天\n10:04:51\n先从哪个事情开始做呢？\n离吃饭还有一个小时。\n09:29:17\n肩膀疼\n昨天的正念练习也没做\n今天要做了\nFormal Practice Read The Body Scan Meditation. On the first day, do the Raisin Meditation (have two raisins and a glass of water handy). For the next five days, do the Body Scan. Don’t expect to feel anything in particular from these practices. In fact, give up all expectations about it. Just let your experience be your experience.\nAudio guidance for the practices can be found through the top menu on any of the Palouse pages. NOTE: One of your six formal practices can be one of the live meditations from a meeting listed on the Zoom Meeting page.\nRecord on this form each time you do a practice. In the comment field, put just a few words to remind you of your impressions of that particular practice: what came up, how it felt, what you noticed in terms of physical sensations, emotions, thoughts, etc. It’s important to write the comments immediately after the practice because it will be hard to reconstruct later.\nOnce you have done at least six days of practice and feel that you’ve gotten the essence of this “Week”, you may go to the next week, although you can stay here longer if that feels right.\nInformal Practice Each day this week, see if you can bring mindful awareness to some otherwise routine activity and record it on the Informal Practice Log (Simple Awareness) .\nSeven-Day Practice Table (2025-03-26 — 2025-04-01) Date Formal Practice Comments (Impressions) Comments (Awareness) 2025-03-26 Body Scan 还行，十分钟，还可以 慢慢来吧 2025-03-27 Body Scan 还行，8分钟，还可以 稍微平静一下 2025-03-28 Body Scan 2025-03-29 Body Scan 2025-03-30 Body Scan 2025-03-31 Body Scan 2025-04-01 (Optional: Live or Body Scan) Fill in the “Comments” fields after each practice with a few words about your experience, as described above. Adjust the final day based on whether you choose a live meditation or continue with the Body Scan.\n","date":"2025-03-29","permalink":"https://22cs.github.io/post/20250329-1pfh3a.html","title":"2025-03-29"},{"content":"日常表 项目 是否完成(0/1) 备注 喝八杯水 0 喝了两杯了 吃早餐 0 没吃，有点懒了，不想出去 吃午餐 1 吃了 吃晚餐 1 吃了，臭豆腐 正念练习 0 睡觉再做吧 运动 0 阅读 0 睡眠 1 睡了 7 小时多，舒服了 代码训练 0 写一个博客 1 练字 0 英语阅读 0 英语口语 0 英语听力 0 日志 23:39:09\n该睡觉了\n22:39:47\n和大炮商量了一下\n感觉自己还是要想好\n关关难过关关过\n17:44:26\n想做个图片时刻提醒自己考差了，但是找不到什么。\n然后一个下午就感觉过去的很快，今天的时间感丢失很多。\n[“初试专业”, “(081200)计算机科学与技术”],\n[\"(101)思想政治理论\", “54”],\n[\"(201)英语（一）\", “66”],\n[\"(301)数学（一）\", “105”],\n[\"(408)计算机学科专业基础\", “101”],\n[“总分”, “326”]\n就先在这里记录一下吧。\n唉\n他妈的，为什么\n复试线331。\n算了\n10:48:57\n一上午都在折腾啥，感觉坐电脑一上午，却想不起来干了什么\n需要保暖了，冷\n今天TODO：\n晚上和大炮商量调剂的，看看 今天学习一下 继续写代码 正念练习需要继续 需要学数据库了，感觉3NF和BCNF都忘了 编译原理也需要再看看 Formal Practice Read The Body Scan Meditation. On the first day, do the Raisin Meditation (have two raisins and a glass of water handy). For the next five days, do the Body Scan. Don’t expect to feel anything in particular from these practices. In fact, give up all expectations about it. Just let your experience be your experience.\nAudio guidance for the practices can be found through the top menu on any of the Palouse pages. NOTE: One of your six formal practices can be one of the live meditations from a meeting listed on the Zoom Meeting page.\nRecord on this form each time you do a practice. In the comment field, put just a few words to remind you of your impressions of that particular practice: what came up, how it felt, what you noticed in terms of physical sensations, emotions, thoughts, etc. It’s important to write the comments immediately after the practice because it will be hard to reconstruct later.\nOnce you have done at least six days of practice and feel that you’ve gotten the essence of this “Week”, you may go to the next week, although you can stay here longer if that feels right.\nInformal Practice Each day this week, see if you can bring mindful awareness to some otherwise routine activity and record it on the Informal Practice Log (Simple Awareness) .\nSeven-Day Practice Table (2025-03-26 — 2025-04-01) Date Formal Practice Comments (Impressions) Comments (Awareness) 2025-03-26 Body Scan 还行，十分钟，还可以 慢慢来吧 2025-03-27 Body Scan 还行，8分钟，还可以 稍微平静一下 2025-03-28 Body Scan 2025-03-29 Body Scan 2025-03-30 Body Scan 2025-03-31 Body Scan 2025-04-01 (Optional: Live or Body Scan) Fill in the “Comments” fields after each practice with a few words about your experience, as described above. Adjust the final day based on whether you choose a live meditation or continue with the Body Scan.\n‍\n","date":"2025-03-28","permalink":"https://22cs.github.io/post/20250328-2kjens.html","title":"2025-03-28"},{"content":"日常表 项目 是否完成(0/1) 备注 喝八杯水 1 喝了 吃早餐 0 没吃，起来太晚了 吃午餐 1 吃了 吃晚餐 1 吃了 正念练习 1 做了 运动 0 阅读 0 睡眠 1 睡了 7 小时，02:13-9:22，睡的太晚了。应该没有到10:22，我应该是九点半醒的，估计是手环搞错了 代码训练 0 写一个博客 1 练字 0 英语阅读 0 英语口语 0 英语听力 0 日志 23:34:17\n刚刚和同学打游戏。今天该早点睡了。\n明天就是28号，调剂意向。\n16:04:13\n做了正念练习，还是身体扫描，但是感觉这个不如昨天的那个。但昨天的是英语，英语的我还需要去分辨。\n15:25:53\n昨天睡得太晚了，今天一直感觉头疼。昨天的TODO没怎么做，今天的还是没怎么做。\n13:06:16\nscreen不知道为什么一直卡死，换成tmux了\n11:35:18\n吃完午饭了\n10:58:09\n今天的TODO：\n408学习，再怎么说，都是必须要做的 C++代码 编译原理和数据库 写个博客 正念练习 刚刚把两个项目的代码修了一下，gemini似乎八国联军了。\nFormal Practice Read The Body Scan Meditation. On the first day, do the Raisin Meditation (have two raisins and a glass of water handy). For the next five days, do the Body Scan. Don’t expect to feel anything in particular from these practices. In fact, give up all expectations about it. Just let your experience be your experience.\nAudio guidance for the practices can be found through the top menu on any of the Palouse pages. NOTE: One of your six formal practices can be one of the live meditations from a meeting listed on the Zoom Meeting page.\nRecord on this form each time you do a practice. In the comment field, put just a few words to remind you of your impressions of that particular practice: what came up, how it felt, what you noticed in terms of physical sensations, emotions, thoughts, etc. It’s important to write the comments immediately after the practice because it will be hard to reconstruct later.\nOnce you have done at least six days of practice and feel that you’ve gotten the essence of this “Week”, you may go to the next week, although you can stay here longer if that feels right.\nInformal Practice Each day this week, see if you can bring mindful awareness to some otherwise routine activity and record it on the Informal Practice Log (Simple Awareness) .\nSeven-Day Practice Table (2025-03-26 — 2025-04-01) Date Formal Practice Comments (Impressions) Comments (Awareness) 2025-03-26 Body Scan 还行，十分钟，还可以 慢慢来吧 2025-03-27 Body Scan 还行，8分钟，还可以 稍微平静一下 2025-03-28 Body Scan 2025-03-29 Body Scan 2025-03-30 Body Scan 2025-03-31 Body Scan 2025-04-01 (Optional: Live or Body Scan) Fill in the “Comments” fields after each practice with a few words about your experience, as described above. Adjust the final day based on whether you choose a live meditation or continue with the Body Scan.\n‍\n","date":"2025-03-27","permalink":"https://22cs.github.io/post/20250327-1hqkbc.html","title":"2025-03-27"},{"content":"Failure is essential to career success.\n失败对于事业的成功至关重要。\ngetty\n盖蒂\nIn a world obsessed with career success stories, we rarely hear about the stumbles, setbacks, and outright failures that precede them. From Thomas Edison’s 10,000 unsuccessful attempts before inventing the light bulb to Steve Jobs being fired from Apple, history shows us that failure isn’t the opposite of success. It’s an essential part of the journey.\n在这个沉迷于事业成功故事的世界里，我们很少听说事业成功之前所遭遇的挫折、挫折和彻底的失败。从托马斯·爱迪生发明灯泡前的 10,000 次失败，到史蒂夫·乔布斯被苹果解雇，历史告诉我们，失败并不是成功的反面。它是人生旅程中必不可少的一部分。\nFailure, particularly early in your career, can foster greater long-term career success. Let’s examine what research reveals about this relationship and how embracing setbacks can actually accelerate your professional development.\n失败，尤其是在职业生涯早期的失败，可以促进长期的职业成功。让我们来看看研究揭示了这种关系，以及如何接受挫折实际上可以加速你的职业发展。\nA groundbreaking study from Northwestern University’s Kellogg School of Management provides compelling evidence that early career setbacks can lead to more incredible long-term achievement. Researchers analyzed data from scientists who had applied for grants from the National Institutes of Health (NIH) early in their careers. They compared those who narrowly missed receiving funding with those who just managed to qualify. Over the next decade, scientists in the near-miss group were 6.1% more likely to publish studies in the top 5% of citations in their field than those who received the initial grants. Despite facing an early disappointment that could have derailed their careers, these scientists ultimately produced more influential work than those who experienced early career success.\n西北大学凯洛格管理学院的一项开创性研究提供了令人信服的证据，表明早期的职业挫折可以带来更令人难以置信的长期成就。研究人员分析了职业生涯早期向美国国立卫生研究院 (NIH) 申请资助的科学家的数据。他们将那些差点获得资助的人与那些勉强获得资助的人进行了比较。在接下来的十年里，与最初获得资助的科学家相比，差点获得资助的科学家发表研究成果进入其领域引用率前 5% 的可能性高出 6.1%。尽管早期的失望可能会毁掉他们的职业生涯，但这些科学家最终创作出了比早期事业成功的人更有影响力的作品。\nFailure isn’t just a setback—it can be a powerful force that propels your career forward. Here’s how.\n失败不仅仅是一种挫折——它还可以成为推动你事业前进的强大力量。原因如下。\nProfessional success can sometimes lead to overconfidence and complacency, while failure serves as a powerful antidote to an inflated ego. When we experience career setbacks, we’re reminded of our limitations and the continuous work required for improvement. This humility becomes an advantage in several ways:\n职业上的成功有时会导致过度自信和自满，而失败则是消除自我膨胀的良药。当我们遭遇职业挫折时，我们会意识到自己的局限性，并意识到需要不断努力才能取得进步。这种谦逊在以下几个方面成为一种优势：\nYou become more open to feedback and constructive criticism\n你会更加乐于接受反馈和建设性的批评 You’re less likely to overestimate your abilities or take on projects beyond your capacity\n你不太可能高估自己的能力或承担超出你能力的项目 You develop greater empathy for others facing challenges\n你会对面临挑战的其他人产生更大的同理心 You maintain a learner’s mindset rather than assuming you have all the answers\n你保持学习者的心态，而不是假设自己知道所有答案 You collaborate more effectively by recognizing and valuing others’ strengths\n通过认可和重视他人的优势，您可以更有效地进行合作 The most successful professionals often maintain this balance of confidence and humility by believing in their abilities while remaining acutely aware of their room for growth.\n最成功的专业人士往往通过相信自己的能力并敏锐地意识到自己的成长空间来保持自信与谦逊的平衡。\n2.) Failure Inspires Positive Change 2.）失败激发积极的改变\nFailure often serves as the catalyst for meaningful transformation. When our current approaches don’t yield the career success we want, we’re forced to innovate and evolve. These moments of disruption create hidden opportunities:\n失败往往是重大转变的催化剂。当我们目前的方法无法带来我们想要的职业成功时，我们就不得不创新和发展。这些颠覆时刻创造了隐藏的机会：\nFailure highlights ineffective strategies that need adjustment\n失败凸显了需要调整的无效策略 It pushes you to develop new skills that expand your professional toolkit\n它促使你发展新技能，扩展你的专业工具包 Failed projects reveal valuable insights about process improvements\n失败的项目揭示了有关流程改进的宝贵见解 Setbacks often lead to unexpected pivots that open new career opportunities\n挫折往往会导致意想不到的转变，从而带来新的职业机会 The urgency created by failure can break through procrastination and resistance to change\n失败产生的紧迫感可以突破拖延和对改变的抵制 Rather than viewing failure as a roadblock, successful professionals recognize it as a signpost pointing toward necessary improvements and unexplored possibilities.\n成功的专业人士不会将失败视为障碍，而是将其视为指向必要的改进和尚未探索的可能性的路标。\nWhen you embrace failure, you’ll discover it offers unique insights that career success alone can’t provide. The perspective gained through failure creates several distinct advantages in your professional journey:\n当你接受失败时，你会发现它提供了职业成功本身无法提供的独特见解。通过失败获得的视角会为你的职业生涯带来几个明显的优势：\nFailure helps you distinguish between genuine obstacles and self-imposed limitations\n失败可以帮助你区分真正的障碍和自我强加的限制 It reveals blind spots in your thinking that career success might have concealed\n它揭示了你的思维盲点，而这些盲点可能被职业成功所掩盖 You gain clarity about which problems deserve your energy and which aren’t worth the struggle\n你会清楚哪些问题值得你付出精力，哪些问题不值得你努力 Setbacks often illuminate alternative paths that may better align with your strengths\n挫折往往会照亮可能更能发挥你优势的其他道路 You develop the ability to see opportunities within challenges rather than just the challenges themselves\n你将培养出在挑战中发现机遇的能力，而不仅仅是挑战本身 This perspective shift transforms how you approach your entire career, enabling you to navigate complexity with greater wisdom and foresight.\n这种视角的转变会彻底改变您对待整个职业生涯的方式，使您能够以更大的智慧和远见来应对复杂情况。\n4.) Failure Strengthens Your Resilience Muscle 4.）失败会增强你的韧性\nResilience—the ability to bounce back from setbacks—is perhaps the most valuable career skill you can develop. You strengthen this mental muscle each time you face failure and continue forward. The resilience developed through failure manifests in several concrete ways that enhance your professional capabilities:\n韧性——从挫折中恢复的能力——可能是你能培养的最有价值的职业技能。每次面对失败并继续前进时，你都会增强这种心理力量。通过失败培养出来的韧性体现在几个具体方面，可以提高你的专业能力：\nFailure builds emotional stamina that helps you weather future professional storms\n失败可以增强情感耐力，帮助你渡过未来的职业风暴 You develop confidence in your ability to survive worst-case scenarios\n你对自己在最坏情况下生存的能力有了信心 The recovery process teaches practical coping strategies for managing stress\n康复过程教会了人们应对压力的实用策略 Overcoming setbacks proves your capability to persist when others might quit\n克服挫折证明你有能力在别人可能放弃的时候坚持下去 Each recovery reinforces that failure is an event, not an identity or final destination\n每次恢复都进一步证明，失败只是一次事件，而不是一种身份或最终目的地 This resilience doesn’t just help you survive professional challenges. It positions you to achieve long-term career success because you’ve developed the capacity to withstand pressures that derail others.\n这种韧性不仅能帮助你应对职业挑战，还能让你获得长期的职业成功，因为你已经培养了承受压力的能力，而这些压力会阻碍他人的进步。\n5.) Failure Teaches You What You Want (and Don’t Want) 5.）失败让你知道你想要什么（和不想要什么）\nThe process of recovering from failure naturally leads to important self-discoveries about your professional preferences and priorities. Consider how failure illuminates your career path in these specific ways:\n从失败中恢复的过程自然会让你对自己的职业偏好和优先事项有重要的自我发现。想想失败如何以这些具体的方式照亮你的职业道路：\nFailed experiences highlight which aspects of work drain your energy versus what energizes you\n失败的经历凸显了工作中哪些方面会消耗你的精力，哪些方面会给你带来活力 Setbacks create natural decision points that prompt reevaluation of your career direction\n挫折会自然而然地让你做出决定，促使你重新评估自己的职业方向 Disappointments often reveal misalignments between your values and your current path\n失望往往表明你的价值观和你当前的道路不一致 The emotional response to specific failures provides clear signals about what matters most to you\n对特定失败的情绪反应提供了明确的信号，告诉你什么对你最重要 Recovery periods offer rare space for contemplation about your authentic professional desires\n恢复期为你提供了难得的时间来思考你真正的职业愿望 This clarity about your preferences becomes increasingly valuable as you progress, helping you make decisions that align with your genuine interests rather than simply following conventional paths to career success.\n随着你的进步，明确自己的偏好会变得越来越有价值，它可以帮助你做出符合你真正兴趣的决定，而不是简单地遵循传统的职业成功道路。\n6.) Failure Enhances Your Problem-Solving Abilities 6.）失败增强了你解决问题的能力\nWhen plans fall apart, you must analyze what went wrong, identify alternative approaches, and implement solutions under pressure. This challenging situation develops valuable capabilities that enhance your professional effectiveness:\n当计划失败时，你必须分析问题所在，找出替代方法，并在压力下实施解决方案。这种具有挑战性的情况可以培养出宝贵的能力，从而提高你的专业效率：\nYou learn to dissect complex situations to identify root causes rather than just symptoms\n你将学会剖析复杂情况，找出根本原因，而不仅仅是症状 You become adept at generating multiple solutions rather than fixating on a single approach\n您将能够善于提出多种解决方案，而不是只专注于单一方法 You develop the ability to pivot quickly when initial efforts prove ineffective\n当最初的努力被证明无效时，你会培养出快速转变的能力 Your critical thinking improves as you distinguish between flawed execution and flawed strategy\n当你区分有缺陷的执行和有缺陷的策略时，你的批判性思维就会提高 You gain practical experience with systems thinking by understanding how variables interact\n通过了解变量如何相互作用，您可以获得系统思维的实践经验 These advanced problem-solving skills become increasingly valuable as you advance in your career, particularly when facing unique situations requiring a fresh approach.\n这些高级的解决问题的技能会随着您职业生涯的进步而变得越来越有价值，特别是在面对需要新方法的独特情况时。\n7.) Failure Builds Authentic Leadership Credibility 7.）失败可以建立真正的领导力信誉\nLeaders who have experienced and overcome failures bring a depth of experience that resonates powerfully with others. This hard-won wisdom yields important leadership advantages leading to career success:\n经历过失败并克服失败的领导者拥有丰富的经验，能够与他人产生强烈共鸣。这种来之不易的智慧带来了重要的领导优势，从而带来职业成功：\nYou can provide genuine guidance to team members facing similar challenges\n您可以为面临类似挑战的团队成员提供真正的指导 Your vulnerability about past failures creates psychological safety for innovation and risk-taking\n过去失败的脆弱性为创新和冒险创造了心理安全 You develop nuanced judgments about which risks are worth taking and which to avoid\n你会对哪些风险值得承担、哪些风险应该避免做出细致的判断 Your personal resilience story inspires others facing professional adversity\n你的个人坚韧故事激励了其他面临职业逆境的人 You establish deeper trust with teams who recognize your experience-based wisdom\n你与认可你基于经验的智慧的团队建立了更深的信任 This credibility becomes a powerful professional asset, particularly in challenging environments where teams need leaders who understand struggle from firsthand experience.\n这种信誉成为了一种强大的专业资产，特别是在充满挑战的环境中，团队需要那些从第一手经验中了解困难的领导者。\nThe Unexpected Path to Career Success 意想不到的职业成功之路\nAs you navigate your career, keep in mind that failure isn’t the opposite of success but an integral part of it. By embracing failures as opportunities for growth, you transform potential career-enders into career-builders. So, the next time you face a professional disappointment—whether it’s a rejected application, a poor performance review, or even job loss—remember that your current setback may be laying the foundation for your greatest career success.\n在你规划自己的职业生涯时，请记住，失败不是成功的反面，而是成功不可或缺的一部分。通过将失败视为成长的机会，你可以将潜在的职业生涯终结者转变为职业生涯建设者。因此，下次你面对职业上的失望时——无论是申请被拒绝、绩效评估不佳，甚至是失业——请记住，你当前的挫折可能正在为你最大的职业成功奠定基础。\n","date":"2025-03-26","permalink":"https://22cs.github.io/post/why-career-success-depends-on-embracing-failure-forbes-22ndif.html","title":"Why Career Success Depends On Embracing Failure - Forbes为什么事业成功取决于接受失败 - 福布斯"},{"content":"身体扫描冥想（Body Scan Meditation） 身体扫描已被证明是一种极其强大且具有疗愈效果的冥想形式。它构成了正念减压疗法（Mindfulness-Based Stress Reduction）中躺姿练习的核心。身体扫描涉及用意识系统地扫过身体，以一种亲切、开放且感兴趣的注意力关注身体的各个区域，通常从左脚脚趾开始，然后逐步移动到整个脚部——脚底、脚跟、脚背——再沿着左腿向上，包括踝关节、小腿、膝盖、膝盖骨、大腿的表面与深处、腹股沟和左髋部；然后转向右脚脚趾，依次扫过右脚的其他区域，再以同样的方式沿右腿向上移动。接着，注意力逐渐且缓慢地移向骨盆区域，包括髋部、臀部、生殖器、下背部、腹部，然后是上半身——上背部、胸部、肋骨、乳房、心脏、肺部以及肋骨笼内的大血管、背部的肩胛骨，一直到锁骨和肩膀。从肩膀开始，我们转向手臂，通常双手同时进行，从指尖和拇指开始，逐步经过手指、手掌、手背、手腕、前臂、肘部、上臂、腋窝，再回到肩膀。然后进入颈部和喉咙，最后是脸部和头部……\n在练习身体扫描时，我们系统地、有意地让注意力穿越身体，关注不同区域的各种感觉。能够感知这些身体感觉本身就非常了不起，而我们还能随意地、无论是即兴还是以更系统的方式做到这一点，更是令人惊叹。不需移动任何肌肉，我们就能将意识放置在身体的任何部位，感受并觉知那一刻存在的任何感觉。\n从体验上来说，我们可以将身体扫描描述为“调入”或“敞开”这些感觉，让自己觉知那些早已存在但通常被我们忽略的事物——因为它们太明显、太平凡、太熟悉，以至于我们几乎不知道它们就在这里。当然，同样的道理，我们可以说生活中大部分时间，我们几乎不知道自己“在这里”，体验身体、在身体中、属于身体……语言实际上无法完全表达这种体验的本质。正如我们已经观察到的，当我们谈论它时，语言本身迫使我们提及一个似乎拥有身体的独立“我”，这让我们听起来无可避免地陷入二元对立。\n然而，在某种程度上，确实存在一个拥有身体的独立“我”，或者至少表面上看起来是这样。我们将此称为常规现实的层面，即相对层面、表象层面。在相对现实的领域中，有身体及其感觉（客体），以及感知这些感觉的主体，它们看似分离且不同。然而，在冥想练习中，或生活中某些非常特殊的时刻，有时会出现纯粹感知的瞬间。这种时刻其实随时都可能发生，因为它们是觉知本身的属性。感知将表面上的主体与客体在体验中统一起来，主体与客体融入觉知之中。觉知比感觉更为广阔，它拥有独立于身体生命的存在，却又与身体密切相关。\n然而，当身体因疾病或神经系统损伤而无法完整运作时，觉知会深深感到缺失。完整的神经系统为我们提供了通向感觉世界的各种奇妙入口。然而，就像其他事物一样，我们常常将这些能力视为理所当然，以至于几乎不会注意到，我们与内在和外在世界的每一刻精妙联系都依赖于它们。我们不仅可以通过觉知回归感官，甚至可能意识到，我们只能通过感官了解世界——如果你将心智或觉知本身也视为一种感官，可以说是终极感官……\n在练习身体扫描时，身体的感觉可能会变得更敏锐，甚至某些区域的疼痛或感觉强度会增加。同时，在正念练习的背景下，这些感觉——无论是什么、强度如何——也能被更准确地感知，减少了过多的解释、评判和反应，包括厌恶或逃避的冲动。在身体扫描中，我们与纯粹的感觉建立更亲密的联系，敞开接受感觉本身与我们对它们的觉知之间的相互作用。因此，即使感觉很强烈，我们也不太容易被它们困扰，或者以一种更明智的方式被困扰。觉知学会让它们如其所是地存在，并包容它们，而不触发过多的情绪反应或关于它们的激烈思考。我们有时会说，觉知与洞察力自然地将疼痛体验的感官维度与情绪和认知维度“解耦”。在这个过程中，感觉的强度有时会减弱。无论如何，它们可能不再被视为那么沉重或令人衰弱。\n觉知本身似乎通过不评判或反应地包容这些感觉，疗愈了我们对身体的看法，使我们在某种程度上能够接受当下身体的状况，而不再让这些状况压倒性地侵蚀我们的生活质量，即便面对疼痛或疾病。觉知疼痛的境界，与陷入疼痛并与之抗争是完全不同的领域。踏入这个境界，我们会发现一些安慰与喘息。这本身就是一种解放的体验，至少在那一刻，是一种深刻的自由，从狭隘地看待疼痛的方式中解脱出来——当它不被视为纯粹的感觉时。身体扫描并非治愈的方法，但它是一种学习、一种敞开、一种接纳，以及一种应对之前看似无法穿透和无法处理的高低起伏的方式……\n借用詹姆斯·乔伊斯在《都柏林人》中一篇短篇小说的改述：“达菲先生住在离他的身体不远的地方。”这可能是我们许多人共有的地址。把身体的奇迹视为理所当然是一种可怕的损失。重新与身体建立联系将是对我们生活的深刻疗愈。所需的一切只是练习回归我们的感官——所有感官。\n以及……一点冒险精神……\n……身体扫描并不适合所有人，即便是热爱它的人，也不总是首选的冥想方式。但了解并偶尔练习它非常有用，无论你的处境或状况如何。如果你把身体想象成一件乐器，身体扫描就是调音的方式；如果你把它看作一个宇宙，身体扫描是认识它的途径；如果你认为身体是一栋房子，身体扫描就是打开所有门窗，让觉知的新鲜空气清扫其中的方法。\n你也可以根据时间限制和具体情境更快地扫描身体。你可以用一次吸气或呼气完成身体扫描，或者进行一分钟、两分钟、五分钟、十分钟甚至二十分钟的扫描。当然，扫描的精确度和细节会因速度不同而变化，但每种速度都有其价值。最终，它关乎以任何方式、超越时间地与你的整体存在和身体保持联系。\n你可以在夜间或早晨躺在床上练习长短不一的身体扫描，也可以在坐着甚至站立时练习。有无数创意的方式将身体扫描或其他躺姿冥想融入你的生活。如果你运用其中任何一种，很可能会发现它们会为你的生活注入新的活力，让你重新欣赏身体，以及它如何成为当下体现你最深刻、最美好特质的载体——包括你的尊严、美丽、活力，以及你那开放而平静的心智。\n© 2005 Jon Kabat-Zinn，《回归感官》（Coming to Our Senses），Hyperion Press，纽约\n附录：身体扫描中可能注意到的现象 身体感觉（Physical Sensations）\n刺痛（tingly） 灼热（burning） 跳动（pounding） 悸动（throbbing） 颤抖（trembling） 轻/重（light/heavy） 紧/松（tight/loose） 刺射（shooting） 刺痛（stinging） 轻盈（airy） 切割感（cutting） 紧张/放松（tense/relaxed） 柔软/粗糙（soft/rough） 针刺感（prickly） 拉扯感（pulling） 钝/锐（dull/sharp） 震动（vibrating） 凉/暖（cool/warm） 僵硬/灵活（stiff/flexible） 麻木（numb） 脉动（pulsing） 酸痛（achy） 下沉感（sinking） 湿冷/干燥（clammy/dry） 轻盈/厚重（airy/dense） 颤抖（shaky） 瘙痒（itchy） 情绪反应（Emotional Reactions）\n不耐烦/想停止（impatience/wanting to stop） 愉悦（enjoyment） 无聊（boredom） 释放（release） 喜悦（joy） 悲伤（sadness） 恐惧（fear） 悲痛（grief） 骄傲（pride） 厌恶（disgust） 惊讶（surprise） 愤怒（anger） 挫败（frustration） 期待（anticipation） 羞耻（shame） 可能出现的想法（Thoughts）\n回顾过去（reviewing the past） 想象未来（imagining the future） 想到他人（thinking about others） 计划（planning） 评估/分析（evaluating/analyzing） 循环思维（circular thinking） 愿望/希望/比较（wishing/hoping/comparing） 标记/分类（labeling/cataloguing） 判断体验（judging your experience） 注意事项 如果在任何时候你感到过多不适、恐慌或害怕，请专注于你的呼吸，直到感觉好转。如果情况仍然难以承受，可以睁开眼睛，环顾房间以让自己重新定位，或许看看一些让你感到安慰或舒缓的事物（例如喜欢的艺术品或亲人、宠物的照片）。你甚至可以联系朋友、散步或喝杯茶。照顾自己——即使这意味着中断练习——本身就是正念的体现。如果这种练习的净效应是你感到情绪过于强烈，请参考“我有强烈的情绪（或身体）反应”部分。\n冥想的七大误解 作者：迪帕克·乔普拉（Deepak Chopra）\n在过去40年中，冥想已进入现代西方文化的主流，被医生开具“处方”，并被从企业高管、艺术家、科学家到学生、教师、军人，甚至令人振奋的是——政治家——广泛实践。俄亥俄州国会议员蒂姆·瑞安（Tim Ryan）每天早晨都会冥想，并成为正念和冥想的主要倡导者，正如他在其著作《正念国家：一个简单的练习如何帮助我们减轻压力、提升表现并重拾美国精神》中所述。\n尽管冥想的普及程度日益增加，但关于这一实践的普遍误解仍是许多人尝试冥想并从中获得身心灵深远益处的障碍。以下是七个最常见的冥想误解及其真相。\n误解1：冥想很难 真相：这个误解源于冥想被视为一种只有圣人、修行者或灵性大师才能从事的深奥实践。事实上，当你从一位经验丰富且知识渊博的老师那里学习时，冥想是简单且有趣的。技巧可以像专注于呼吸或默默重复一个咒语这样简单。冥想看似困难的一个原因是，我们往往过于努力地集中注意力，太执着于结果，或者不确定自己是否做得正确。根据我们在乔普拉中心的经验，从合格的老师那里学习冥想是确保过程愉快并最大化实践效果的最佳方式。老师会帮助你理解自己的体验，克服常见的障碍，并建立一个滋养的日常练习。\n误解2：必须让大脑安静下来才能成功冥想 真相：这可能是关于冥想的最大误解，也是许多人因挫败感而放弃的原因。冥想并不是要停止思维或试图清空大脑——这两种方法只会带来压力和更多的内心喧嚣。我们无法停止或控制自己的想法，但可以决定给予它们多少关注。虽然我们无法强迫大脑安静，但通过冥想，我们可以在思维之间的空隙中找到早已存在的宁静。这个“空隙”有时被称为纯粹意识、纯粹寂静和纯粹平和的空间。\n在冥想时，我们使用一个注意力对象（如呼吸、图像或咒语），让大脑放松并进入这种无声的意识流。当想法不可避免地浮现时，我们无需评判或试图驱逐它们，而是轻轻地将注意力重新放回焦点上。每次冥想中，即使只有微秒的时间，大脑也会沉入空隙，体验纯粹意识的清新。随着你定期练习，你会在这种扩展的意识和寂静状态中停留越来越长时间。\n请放心，即使你感觉整个冥想过程都在胡思乱想，你仍然在从中受益。你并未失败，也未浪费时间。我的朋友兼同事大卫·西蒙（David Simon）在教授冥想时常对学生说：“‘我在思考’这个想法可能是你有过的最重要的想法，因为在此之前，你可能甚至不知道自己在思考，你可能以为自己就是你的想法。”简单地注意到你在思考就是一个突破，因为它开始将你的内在参照点从自我思维转向见证意识。当你不再过度认同自己的想法和故事时，你会体验到更大的平和并开启新的可能性。\n误解3：需要多年专注练习才能从冥想中获益 真相：冥想的好处既有即时的，也有长期的。你第一次坐下冥想时就能开始体验益处，而在每天练习的头几天内也会有所感受。许多科学研究证明，冥想在几周内就能对身心生理产生深远影响。例如，哈佛大学和马萨诸塞州总医院的一项里程碑式研究发现，仅八周的冥想不仅能帮助人们减少焦虑、增加平静感，还能促进大脑与记忆、同理心、自我意识和压力调节相关的区域生长。\n在乔普拉中心，我们常听到新冥想者反馈，他们在几天日常冥想后就能多年首次安然入睡。冥想的其他常见好处包括注意力提升、血压降低、压力和焦虑减少以及免疫功能增强。你可以在乔普拉中心博客的近期文章《为什么要冥想？》中了解更多关于冥想益处的信息。\n误解4：冥想是逃避现实 真相：冥想的真正目的不是逃避一切，而是深入内心，接触你真实的自我——那个超越生活中不断变化的外在环境的永恒自我。在冥想中，你潜入大脑喧嚣的表面之下（那里通常充满关于过去的重复想法和对未来的担忧），进入纯粹意识的静止点。在这种超然意识状态中，你放下所有关于自己是谁、什么限制了你、哪里不足的故事，体验到你最深层的自我是无限且无界的真相。\n通过定期练习，你净化感知之窗，你的清晰度得以扩展。虽然有些人确实试图将冥想作为逃避未解决情感问题的方式，但这种做法与冥想和正念的所有智慧教导背道而驰。事实上，有多种冥想技术专门用于识别、调动和释放积压的情感毒素。如果你在应对情感困扰或创伤，我建议你与一位治疗师合作，他们能帮助你安全地探索并治愈过去的痛苦，让你回归到完整与爱的自然状态。\n误解5：我没有时间冥想 真相：有些忙碌且高效的高管25年来从未错过一次冥想，如果你将冥想视为优先事项，你就会去做。如果你觉得日程太满，请记住，即使几分钟的冥想也比完全不做要好。我们鼓励你不要因为时间晚了或感觉太困而放弃冥想。\n生活中有一种悖论：当我们定期花时间冥想时，我们实际上拥有了更多时间。冥想让我们出入于无时间、无空间的意识领域……那是宇宙万物显现源头的纯粹意识状态。我们的呼吸和心率减慢，血压降低，身体减少压力激素和其他加速衰老化学物质的产生，这些物质让我们主观上感觉“时间不够”。\n在冥想中，我们处于一种休息性警觉状态，这对身心极为清新。随着人们坚持冥想习惯，他们注意到自己能以更少的努力完成更多。不是拼命追求目标，他们越来越多地处于“流动”状态——与协调一切的宇宙智慧保持一致。\n误解6：冥想需要灵性或宗教信仰 真相：冥想是一种让我们超越大脑嘈杂思维、进入寂静与平和的实践。它不需要特定的灵性信仰，许多不同宗教的人都能在不与其现有信仰冲突的情况下练习冥想。有些冥想者没有特定宗教信仰，或者是无神论者或不可知论者。他们冥想是为了体验内在平静以及实践带来的诸多身心健康益处——包括降低血压、减轻压力和安稳睡眠。我最初开始冥想是为了帮助自己戒烟。冥想帮助我们丰富生活，让我们在体育运动、照顾孩子或职业发展等活动中更充分、更快乐地享受。\n误解7：冥想时我应该有超然的体验 真相：有些人在冥想时没有看到幻象、色彩、漂浮、听到天使合唱或瞥见启迪时会感到失望。虽然我们在冥想中可能会有各种美妙体验，包括幸福感和一体感，但这些并不是实践的目的。冥想的真正益处体现在我们日常生活的其他时间里。当我们从冥想中出来时，我们带走了一些练习中的寂静与平和，这让我们对自己和遇到的每个人更具创造力、同情心、专注和爱。\n开始或继续冥想之旅的建议 没有期待：有时大脑太活跃而无法平静，有时它立刻平静，有时它安静了但你没注意到。任何情况都可能发生。 对自己宽容：冥想不是关于对错，而是让大脑找到其真实本质。 不要固守无效的技术：如果某种技术无法带你进入内在寂静，找到适合你的方法。咒语冥想有多种形式，如乔普拉中心教授的原始声音冥想。或者简单地跟随呼吸的进出，不关注想法。大脑渴望在寂静中找到源头，放下执着给它机会。 确保安静独处：拔掉电话，确保无人打扰。 全心投入：如果你的注意力在别处，想着下一个约会、任务或饭菜，你当然找不到寂静。冥想需要清晰的意图，不受其他义务干扰。 作者简介：迪帕克·乔普拉是《超级大脑：释放你大脑的爆炸性能量以最大化健康、幸福和精神福祉》的合著者，也是乔普拉基金会的创始人。 来源：http://www.huffingtonpost.com/deepak-chopra/meditation-myths_b_2823629.html\n整理并翻译：冥想的七大障碍 作者：Ed 和 Deb Shapiro\n当我们生病时，观察自己的呼吸可能会引发恐慌、恐惧甚至敌意。无论有多少报告证明安静对心理、情感和身体的价值，似乎总有更多的人拒绝尝试冥想。冥想确实可能具有挑战性，尤其是当我们不确定为什么要这样做时。静静地坐在那里，聆听脑海中无休止的喋喋不休，可能会让人觉得很奇怪。如果我们长时间什么也不做，即使只有10分钟，也很容易感到无聊。\n多年来，我们听到了无数人觉得冥想困难的理由，最终将其归纳为以下几个常见障碍：\n1. 我太忙了，没时间 真相：如果你有年幼的孩子和一份全职工作，以及随之而来的所有责任，这确实可能是真的。然而，我们讨论的只是每天大约10分钟的时间。大多数人花在读报纸或漫无目的上网上的时间都比这多。之所以感觉没时间，只是因为我们通常把每一刻都填满活动，从未按下暂停键。\n2. 我觉得长时间静坐很不舒服 真相：如果你试图盘腿坐在地板上，确实会感到不适。但你可以选择坐在一个坚实且舒适的椅子上保持直立。或者，你可以尝试行走冥想、瑜伽或太极。动态冥想与静坐冥想同样有益。\n3. 我的大脑停不下来：我无法放松，也无法冥想 真相：我就是做不到！我的大脑不会安静，它到处乱飞！我的想法让我发疯！我想逃离自己，而不是向内看。听起来耳熟吗？ 令人惊讶的是，试图阻止大脑思考就像试图阻止风吹一样——这是不可能的。东方教义中将大脑比喻为被蝎子咬过的醉猴，因为就像猴子从一根树枝跳到另一根树枝，大脑也从一件事跳到另一件事，总是分心且忙碌。因此，当你静坐下来试图让大脑安静时，你会发现所有这些疯狂的活动，感觉喧闹得不可思议。其实这没什么新鲜的，只是现在你开始意识到它，而之前你沉浸其中，并未察觉这种喋喋不休是如此持续。\n大脑如此忙碌的体验非常正常。有人曾估计，在30分钟的冥想中，我们可能会有超过300个念头。多年的忙碌思维，多年创造和维持戏剧性事件，多年的压力、困惑和自我中心，大脑根本不知道如何安静。相反，它渴望娱乐。你无法在冥想时突然关闭它，这只是说明你和大家一样。\n4. 干扰太多，太吵了 真相：我们早已告别了可以隐居山洞、不受打扰直到完全开悟的日子。如今，我们都必须面对周围世界的噪音和干扰。但——这是一个重要的“但”——我们不必让这些干扰强加于我们。外面有车经过？没问题。让它们经过，但不要跟着它们走。你寻找的安静在内心，而非外部。寂静的体验是累积的：你坐得越多，大脑就会慢慢地、慢慢地变得更安静、更愉悦，无论外界有什么干扰。\n5. 我看不到好处 真相：遗憾的是，在这一点上你只能相信我们的话。有些人在一次冥想后就能体会到它的益处，但对大多数人来说需要更长时间——你可能在一周或两周的日常练习后才会注意到变化。这意味着你需要足够信任这个过程，坚持下去，即使你还未感受到益处。\n记住，演奏音乐需要数小时才能弹对音符，而在日本，学习插花可能需要12年。静止可能在一瞬间发生，但这一刻到来之前可能需要一些时间——因此需要耐心。\n6. 我不擅长这个，总是做不好 真相：实际上，冥想不可能失败。即使你坐了20分钟，满脑子都是毫无意义的念头，也没关系。没有对错，也没有特定的技巧。Deb 的冥想老师曾告诉她，冥想的形式和练习它的人一样多。所以，你只需找到适合自己的方式（即使你喜欢倒立着做），然后坚持下去。\n重要的是，你要与冥想成为朋友。如果你觉得自己必须冥想，然后因为错过规定时间或只做了10分钟而非承诺的30分钟而感到内疚，那一点帮助也没有。短时间练习并享受过程，远比咬紧牙关坐着好得多——后者只是因为有人告诉你只有30分钟甚至40分钟才有效果。冥想是贯穿一生的伴侣，就像一位老朋友，在你需要支持、灵感或清晰时可以依靠。它是用来享受的！\n7. 这只是怪异的新时代炒作 真相：确实很容易迷失在新一代关于永恒幸福的承诺中，但冥想本身却古老如山丘。2500多年前，佛陀是一位专注的冥想者，他尝试并测试了许多让大脑安静的不同方法。这只是一个例子。每种宗教都有自己对这一主题的变体，历史都可追溯到几个世纪之前。所以，这里没有新鲜事，也没有怪异之处。\n换句话说，冥想不是强迫大脑完全静止，而是放下对任何浮现事物的抗拒：怀疑、担忧、不确定感、觉得自己不够好、无尽的戏剧、恐惧和欲望。每当你发现大脑在飘忽、做白日梦、回忆过去或计划未来时，只需回到现在，回到这一刻。你只需关注并与当下同在。仅此而已。\n作者简介：Ed 和 Deb Shapiro 是 Oprah.com 和 HuffingtonPost.com 的特邀博主。他们的获奖书籍《做改变：冥想如何改变你和世界》由达赖喇嘛和罗伯特·瑟曼作序，贡献者包括杰克·康菲尔德、乔·卡巴金、简·方达、拉姆·达斯、拜伦·凯蒂等人。他们还有三张冥想CD：《慈悲——爱与宽恕》、《三摩地——呼吸觉知与洞察》和《瑜伽休息术——内在意识放松》，可在 EdandDebShapiro.com 获得。\n整理并翻译：正念饮食 作者：Jan Chozen Bays（简·乔森·贝斯）\n你是否吃得过多、吃得过少，或是对自己的饮食方式感到矛盾？医生简·乔森·贝斯表示，正念练习可以帮助你与食物建立健康且愉悦的关系。\n正念饮食不受图表、金字塔或秤的指导，也不由专家来决定。它是由你自己每时每刻的内在体验引导的。你的体验是独一无二的，因此你才是专家。在学习正念饮食的过程中，我们用自我滋养取代自我批评，用好奇心取代焦虑，用对自身内在智慧的尊重取代羞耻。\n一个典型的例子 莎莉（Sally）下班回家的路上，满心担忧地想着她需要为一个大型会议准备的演讲。然而，在开始工作之前，她决定先放松一下，看几分钟电视。她拿着一袋薯片坐下。起初，她只吃了几片，但随着节目变得越来越戏剧化，她吃得越来越快。节目结束时，她低头一看，发现自己吃掉了整整一袋。她责备自己浪费了时间，还吃了垃圾食品：“盐和脂肪太多了！今晚没晚餐给你吃！”她沉浸在屏幕上的剧情中，掩盖了自己对拖延的焦虑，完全忽略了她的内心、情感、口腔和胃。她无意识地吃着，吃是为了让自己失去意识。她上床睡觉时，身心未得到滋养，脑海中依然焦虑着演讲的事。\n下一次这种情况发生时，她决定吃薯片，但尝试以正念的方式吃。首先，她检查自己的内心，发现她担心一篇承诺要写的文章。她的内心告诉她，今晚需要开始动笔。她再检查自己的情感，发现因为丈夫出差，她感到有点孤独。她检查胃和身体，发现自己既饿又累。她需要一些滋养，而家里只有她自己能做到。\n开一个小派对 她决定给自己举办一个小型薯片派对。（记住，正念饮食允许我们与食物玩耍。）她从袋子里拿出20片薯片，摆在一个盘子上。她观察它们的颜色和形状。她吃了一片，细细品味它的味道。她停顿一下，然后再吃一片。没有评判，没有对错。她只是单纯地观察每片薯片上棕褐色的色调，品尝盐的刺激，听到每咬一口的脆响，感受脆感融化成柔软。她思考这些薯片是如何来到她盘子里的，意识到阳光、土壤、雨水、马铃薯农民、薯片工厂的工人、送货司机以及摆上货架卖给她的杂货店员的贡献。\n每片薯片之间稍作停顿，这个薯片派对花了十分钟。吃完后，她再次检查身体，看看是否还有哪部分感到饥饿。她发现口腔和细胞感到口渴，于是喝了一杯橙汁。身体还表示需要一些蛋白质和绿色食物，于是她做了一个奶酪煎蛋卷和菠菜沙拉。吃完后，她再次检查内心、身体和情感。心和身体感到滋养，但大脑仍感疲惫。她决定上床睡觉，第二天早上精神和身体恢复后再处理演讲。她仍然感到一丝孤独，但通过意识到所有为她带来薯片、鸡蛋、奶酪和绿叶蔬菜的生命能量，这种感觉减轻了。她决定给丈夫打个电话说晚安。她上床时，身心平静，睡得很香。\n正念饮食的意义 正念饮食是一种重新发现人类最愉悦活动之一的方式。它还能揭示发生在我们眼皮底下和身体内部的许多奇妙活动。正念饮食的意外好处是帮助我们挖掘身体的自然智慧和内心的开放与感恩能力。我们会问自己一些问题：\n我饿了吗？ 饥饿感在哪里？ 我的哪部分饿了？ 我真正渴望的是什么？ 我现在尝到的是什么？ 这些问题很简单，但我们很少提出它们。\n正念是最好的调味料 我在写这篇文章时，正在吃一个朋友给我的柠檬挞。写了几个小时后，我准备用挞来奖励自己。第一口很美味。奶油般顺滑，甜中带酸，入口即化。第二口时，我开始思考接下来写什么，口中的味道减弱了。我又咬了一口，起身去削铅笔。走路时，我注意到自己在咀嚼，但第三口的柠檬味几乎消失了。我坐下，继续工作，等了几分钟。\n然后，我第四次咬下去，全神贯注于口腔中的气味、味道和触感。又变得美味了！我再次发现（我学得很慢），要保持“第一口”的体验，尊重朋友给我的礼物，唯一的方法是慢慢吃，每口之间停顿很久。如果我在吃东西时做其他事——说话、走路、写作，甚至思考——味道就会减弱或消失。我美丽的挞就失去了生命力，我仿佛在吃纸板盒。\n有趣的是，我停止品尝柠檬挞是因为我在思考。思考什么？正念饮食！发现这一点，我不禁笑了。做人既可怜又好笑。\n为什么我不能一边思考、走路，一边感受挞的味道？因为大脑有两种不同的功能：思考和觉知。当思考功能增强时，觉知功能就减弱。当思考全速运转时，我们可以吃完一顿饭、一整个蛋糕、一整盒冰淇淋，却只尝到一两口的味道。如果我们不品尝，就会吃到撑却仍感到不满足。这是因为在吃的时候，大脑和口腔没有在场，没有品尝或享受。胃饱了，但大脑和口腔未得到满足，继续催促我们吃更多。\n如果我们不满足，就会开始四处寻找更多或不同的食物。每个人都有过在厨房里徘徊、打开橱柜和冰箱门、徒劳地寻找能满足的东西的经历。唯一能治愈这种基本饥饿感的，是坐下来，哪怕只有几分钟，全然地存在。\n如果我们在吃东西时保持与体验的连接，与种植、烹饪、端上食物的人，以及与我们一起用餐的人保持联系，即使是简单的饭菜，我们也会感到最满足。这是正念饮食的礼物，无论我们吃什么或不吃什么，它都能恢复我们的满足感。\n作者简介：简·乔森·贝斯是一名儿科医生、母亲、妻子和长期冥想教师。她是《正念饮食：重新发现与食物健康快乐关系指南》的作者。\n整理并翻译：正念冥想之旅 作者：Catherine Price\n当我决定开始尝试冥想时，它看起来很简单——穿上瑜伽裤，强迫双腿摆成半莲花坐姿，然后通过“唵”的声音进入平静与幸福。别管我的臀部太紧，连四分之一莲花坐都做不到，也别提我上一次真正感到平静还是靠处方药的时候。我必须试一试——我需要找到一种方法来放慢生活节奏。最近，我感觉生活像开了加速器，周末模糊成月份，月份模糊成季节。我吃得快、说得快、走得快——我发誓连睡觉都很快。我几乎无法让自己静下来。研究表明坐立不安能燃烧大量卡路里，这对我来说是好消息。我可能完成很多事，但闻闻玫瑰花香？我连一丝气味都闻不到。\n我们都体验过时间自然减慢的感觉，尤其是在我们不喜欢做的事情时（想想痛苦的动感单车课或办公室一小时的“协同工作坊”）。正如我亲爱的祖母可能会说的，一次结肠镜检查就足以证明时间是相对的。但生活中那些更愉快的时光呢？我希望通过练习一种广受欢迎且被证明有效的冥想方式——正念（专注于将注意力带到当下），也能让那些时光慢下来。\n准备开始时，我直接找到了源头：乔恩·卡巴金（Jon Kabat-Zinn）博士，马萨诸塞大学医学院压力减轻诊所的创始人。卡巴金在1979年创建了一个为期八周的课程，名为“正念减压疗法”（MBSR），如今它是全球最大、最古老的基于冥想的临床项目。（卡巴金的课程在马萨诸塞大学教授，但你也可以在全国其他地方找到MBSR课程。）冥想有很多种类型，为什么我选择了MBSR？有两个原因。首先，我喜欢它是在世俗背景下教授的；尽管它基于佛教的一些核心原则，但我无需任何背景知识即可开始。其次，作为一个想知道自己为什么要做事的人——尤其当这件事有挑战性时——我喜欢它有科学证据支持其有效性。（由于其课程内容一致，它是世界上研究最多的冥想形式之一。）\n卡巴金建议我在家开始练习，每周六天进行一到两次20至45分钟的引导练习（是的，即使是冥想者也需要一天休息）。在我们讨论了我想要冥想的理由后——卡巴金说在开始前明确动机很重要，否则你容易放弃——他推荐我以他认为的简单起点开始：一种叫做“山岳冥想”的可视化练习。我在iPod上加载了这个20分钟的练习，要求你笔直地坐在地板或椅子上，闭上眼睛，观察呼吸，同时想象一座山。先注意小细节——山坡上的树木，山顶上的一抹雪——然后尝试想象自己成为这座山，感受它的力量和坚实，注意到即使被风吹袭或被雨淋湿，它的岩石核心依然稳定平静。（冥想老师喜欢用隐喻。）\n山岳冥想的目标与所有正念技巧相同——无论你关注的是图像、呼吸还是身体感觉，你都在试图让大脑进入卡巴金所说的“无为”状态。这不同于什么都不做，而是意味着你不去想购物清单、昨晚与朋友的对话，或办公桌上未完成的工作报告。你也不会试图让大脑一片空白或强迫产生特殊感觉。你专注于单一事物，体验当下的每一刻，试图做到——借用范·海伦的话——“此时此地”。\n体验当下与想象自己是一座山有什么关系？这就像力量训练。通过学会平息大脑的杂念，只专注于你的内心“落基山脉”，你培养了在不主动冥想时保持当下的专注力。目的是避免在自动驾驶模式下度过人生，过于沉浸在日常琐事中而忽视周围的世界。卡巴金说：“正念是让你像生活真的很重要一样生活。如果你在小 순간（瞬间）中精神不在场，你可能会错过一半人生。”\n如果这种“无为”听起来很简单，拿出20分钟试试山岳练习吧。没多久，你的山——对我来说与其说是珠穆朗玛峰，不如说是依云水瓶上的标签——就会飘走，取而代之的是一场自由联想游戏：山让你想到滑雪，滑雪让你想到家庭度假，度假让你想到周末，周末让你想到朋友邀请你周六共进晚餐，这让你想到你还没回复她，也许你应该写邮件而不是坐在地板上假装自己是座山——这又提醒你，你应该坐在地板上假装是座山，这让你为自己走神而生气。然后——砰！你不仅不再与当下建立亲密联系，还犯了正念的大忌：因分心而责备自己。（一旦你开始评判，就脱离了当下。）卡巴金没明说，但我很确定正念练习不该包含脏话。\n在假装做山（以及另一个练习中的湖）几天后，我发现自己不是视觉化的人。无法想象一座山，更别提专注20分钟，我通过想象呼吸流遍身体并从头顶冲出进行补偿——这效果更好，直到我意识到我把平静的雪峰变成了火山。在卡巴金的许可下，我转而尝试一种可能更适合我的冥想：身体扫描。这是MBSR课程的关键练习之一，45分钟内仔细引导你的注意力上下扫过身体，试图聚焦于每个独立部位的感觉。练习从左脚大拇指开始，但对我来说不幸的是，它常常在那儿就结束了——正如卡巴金喜欢指出的，学会“醒着”（连接当下）很难，但在冥想时睡着却很容易。\n尽管如此，我坚持了下来。我喜欢尝试驾驭大脑的挑战，也对研究结果感到好奇，这些研究表明MBSR不仅限于此。例如，2003年，威斯康星-麦迪逊大学的科学家研究了一组包括卡巴金八周课程校友的人，发现冥想者在接种流感疫苗后免疫系统产生的抗体比非冥想者多。1998年马萨诸塞大学的一项研究显示，接受紫外线治疗的银屑病患者若同时冥想，皮肤愈合速度比对照组快四倍——无论他们之前是否有冥想训练。研究者尚未完全理解这些变化的原因，但一个可能的解释是，这种冥想能减轻压力并帮助人们培养更积极的心态，这两者都已被证明能增强免疫系统。\n此外，多伦多大学研究冥想和实验心理学的诺曼·法布（Norman Farb）指出，这种正念冥想实际上能改变你使用大脑的方式。法布解释说，大多数时候，我们（指一般的非冥想美国人）会根据新刺激和经历对我们的影响自动做出反应。交通堵塞不仅是车流，而是一个让我们晚餐迟到的问题——所以看到前方的红色尾灯墙时，我们会感到压力。一双丢在门口的运动鞋不仅是鞋子，而是一个烦人的障碍。所以当我们（指一般的非冥想Catherine）被绊倒时，会对丈夫发火。换句话说，我们不仅是体验，而是在评估——然后不假思索地反应（堵车 = 多困在车里 = 痛苦）。\n这种叙事处理通常发生在内侧前额叶皮层——位于前额中心后面的大脑区域，协调复杂行为和思维。（这也是你走神时使用的大脑部分。）虽然可以抑制这种默认思维方式，但这就像多年不运动后强迫自己去健身房——当然，你可以硬着头皮上一个踏板操课，但坐在沙发上吃Doritos不是更舒服吗？法布发现，完成八周MBSR训练的人能激活大脑的另一个部分——岛叶。位于大脑灰质深处的岛叶，能让你了解当下发生的事，而不将体验与特定情绪联系起来。用这种方式思考时，交通堵塞不再是问题，只是一堆路上的车。\n冥想的重点不是阻止你对生活中发生的事产生情绪反应，而是避免纯粹出于习惯反应。每种情况，如果你细想，都是对你以某种方式反应的邀请，但正念给你选择如何回应的机会。看到车流拥堵一定得让你压力山大吗？或者你能把多出的20分钟当作听喜欢的CD的机会？（光是打出“车流拥堵”就让我的心率上升，我还有很多功课要做。）真的值得为放错地方的鞋子对丈夫生气吗？还是我更愿意为他叠好衣服而感恩？反过来，如果你是想接受邀请——比如为新晋升感到高兴——正念能让你更充分地享受那一刻。不管体验是好是坏，正念提醒你，你的反应由你掌控。\n不过，卡巴金警告我不要期待冥想时会发生什么神奇的事，甚至不要指望它总是令人愉快——每次我感到烦躁、不舒服或在日常练习中倒数秒数时，我都很感激这个提醒。他还指出，冥想不是速效药；变得并保持正念是一个终生的过程。\n但随着我每天继续尝试引导练习，我很高兴发现它们确实变得更容易。我也为日常生活开发了一些小技巧——比如深呼吸几次以将注意力拉回当下，或选择一个感官专注。我尽量不因走神而恼火。正如卡巴金所说，阻止大脑思考就像阻止海浪一样。更有成效的是观察想法而不被它们带走——试着挖掘表层之下的平静。\n通过训练自己在练习中保持专注，我在不主动冥想时也更擅长保持当下。因此，我发现每天都充满体验——微风拂过皮肤、草地上的光影、丈夫的笑声——如果我想拉长时间，只需留意它们。当我发现大脑加速或想跳过日常练习时，我会想起卡巴金的另一句话，坚定了我继续这个实验的理由：无论从字面还是比喻上看，我们只有片刻可活。\n资源：\n下载冥想练习指南及日常建议：如何培养正念。 购买乔恩·卡巴金的练习CD系列：JonKabat-Zinn.com。 查找附近的正念减压疗法课程：马萨诸塞大学正念中心。 作者简介：Catherine Price 是一名自由记者，著有《死前不要去的101个地方》（Harper Paperbacks）。\n","date":"2025-03-26","permalink":"https://22cs.github.io/post/week-1-mindfulness-141lop.html","title":"Week 1 Mindfulness"},{"content":"日常记录表 时间段 项目 是否完成(0/1) 备注 喝八杯水 吃早餐 0 没吃 吃午餐 1 吃了，还行 吃晚餐 1 吃了 正念练习 1 闭眼躺床上，身体扫描了10分钟。有些分神，但还可以吧 运动 0 还是没兴趣和力气运动，健身房已经一个月没去了 阅读 睡眠 1 睡了6小时45分钟，晚上是01:49-7:25，午睡13:32-14:43 代码训练 写一个博客 练字 英语阅读 英语口语 英语听力 日志 22:34:08\n明天的TODO：\n408学习，再怎么说，都是必须要做的 C++代码 编译原理和数据库 写个博客 正念 20:00:58\n摆了\n17:21:08\n正念练习做完了，逐渐的一个过程，不要心急。\n15:48:41\n看了两个视频，和相关材料\n告诉自己\n不要焦虑 只是单纯的冥想就够了，不要为了冥想而冥想，也不要焦虑 What you practice grows stronger. 接下来开始冥想吧。做一下身体扫描，15分钟。\n15:12:26\n有意思这个视频。https://www.youtube.com/watch?v=IeblJdB2-Vo\u0026list=PLbiVpU59JkVbNfFyAG4SrC8NGnC0-D4jg\u0026index=2\n有些话可以摘抄下来。\n14:58:15\n现在先做一下正念的\n10:03:14\n现在还没做什么事情，就是把Bot还有一些代码bug修了一下，基本上就是几分钟的事情，但是一直拖着。\n呼，需要好好做一下了。\n08:32:22\n今天TODO：\n整理学习编译原理和数据库的，再看一遍 写点代码，C++的，练练算法，应该3个题 复习一下408的知识，让grok搜点问答题目，作为面试的复习 练习一下英语口语，主题可能需要思考一下，反正就当准备了 正念练习，https://palousemindfulness.com/MBSR/week1.html 和大炮商量一下调剂的看看 写日志 现在做了什么：\n把Bot又写了一下，用gemini 2.5 pro，感觉确实不错。 凌晨记录了一下关于AI框架的想法，今年需要实现一下 ‍\nFormal Practice Read The Body Scan Meditation. On the first day, do the Raisin Meditation (have two raisins and a glass of water handy). For the next five days, do the Body Scan. Don’t expect to feel anything in particular from these practices. In fact, give up all expectations about it. Just let your experience be your experience.\nAudio guidance for the practices can be found through the top menu on any of the Palouse pages. NOTE: One of your six formal practices can be one of the live meditations from a meeting listed on the Zoom Meeting page.\nRecord on this form each time you do a practice. In the comment field, put just a few words to remind you of your impressions of that particular practice: what came up, how it felt, what you noticed in terms of physical sensations, emotions, thoughts, etc. It’s important to write the comments immediately after the practice because it will be hard to reconstruct later.\nOnce you have done at least six days of practice and feel that you’ve gotten the essence of this “Week”, you may go to the next week, although you can stay here longer if that feels right.\nInformal Practice Each day this week, see if you can bring mindful awareness to some otherwise routine activity and record it on the Informal Practice Log (Simple Awareness) .\nSeven-Day Practice Table (2025-03-26 — 2025-04-01) Date Formal Practice Comments (Impressions) Informal Practice (Routine Activity) Comments (Awareness) 2025-03-26 Raisin Meditation 2025-03-27 Body Scan 2025-03-28 Body Scan 2025-03-29 Body Scan 2025-03-30 Body Scan 2025-03-31 Body Scan 2025-04-01 (Optional: Live or Body Scan) Fill in the “Comments” fields after each practice with a few words about your experience, as described above. Adjust the final day based on whether you choose a live meditation or continue with the Body Scan.\n‍\n","date":"2025-03-26","permalink":"https://22cs.github.io/post/20250326-z12duwz.html","title":"2025-03-26"},{"content":"23:25\n明天TODO：\n整理学习编译原理和数据库的，再看一遍\n写点代码，C++的，练练算法，应该3个题\n复习一下408的知识，让grok搜点问答题目，作为面试的复习\n练习一下英语口语，主题可能需要思考一下，反正就当准备了\n正念练习，https://palousemindfulness.com/MBSR/week1.html\n和大炮商量一下调剂的看看\n写日志\n早做准备，想想接下来人生要怎么规划\n读论文，从早期到现在的。需要了解一下怎么发展的 练字，为以后考公准备了 英语口语、听力还有写作 和AI聊聊未来的发展方向，找点发展思路了 要学会写一个项目，目前想法是，用Rust或者C++实现一个RSS后端，或者Go的 同样还是项目问题，要学会先用搭建框架，这个可以和AI仔细商量一下，学习怎么搭建 每天要坚持写一个博客了，要让AI辅助学习才行，所以需要一个高级点的可能。让AI帮我变得思考更加深入，更加细致，更加思辨一点。 整体来说，还是很痛苦，自己真的白白浪费三年，唉\n19:58:36\n今天做了助理bot\n‍\n","date":"2025-03-25","permalink":"https://22cs.github.io/post/20250325-pmqaa.html","title":"2025-03-25"},{"content":"TODO：\n明天练习英语 学习一些知识 准备复试 ‍\n","date":"2025-03-25","permalink":"https://22cs.github.io/post/20250324-z1xkrwe.html","title":"2025-03-24"},{"content":"Getting Started in MBSR This worksheet begins your MBSR journey. Actually writing your responses to these questions and those on the practice logs will help ground your practice and learnings in a way that would not be possible if you simply answered these questions in your head. In a way, this is the first mindfulness practice: being mindful of your intentions and commitment to the process you are about to begin. NOTE: As you go through the course, you may take longer than a week for any given “week”, and that’s fine. Knowing how much time you need is, in itself, mindfulness.\nInitial Reflection So, first, there is probably something that drew you to this program that made it seem like a good idea. For example, you may wake up in the middle of the night with worries and concerns that keep you from getting a good night’s sleep, or you may be dealing with difficult health issues, or you may have trouble concentrating, or you may simply want to increase your ability to be present and fully engaged in life, to accept more fully yourself/others, just as you/they are.\nBy the end of the course, I am hoping that:\n更加集中，更加专注 内心更加平静 Recognizing Strengths While there are things you hope that will get better, it is important to recognize positive aspects of yourself, because it is these things that form the base for any self-improvement. We tend to take for granted our own core strengths, so give yourself a few minutes to reflect on this. For instance, what would a good friend or close family member say that they appreciate about you?\nSome of my strengths are:\n年轻 Planning Your Practice Finding a specific time and place for your half-hour of daily practice is likely to be one of the most difficult hurdles, and writing down now when and where you’ll be doing your daily practice will help you to keep your promise to yourself to practice each day. People often choose to practice first thing in the morning, before roommates or family members are up and about, and others like the evening shortly before bedtime, or just after arriving home from work. Precisely when you practice is less important than having a set time and place, a time that you know you can practice without having to attend to the telephone or be responsive to others, and a place that is quiet and separate from others.\nWhen will I practice? (Try to be concrete, e.g., 6:30am M-F, 7:30am Sat/Sun): Morning and Evening Where I am planning to practice (e.g., corner of the bedroom, basement, etc.): my bedroom\nScheduling Readings and Videos The readings and videos for each “week” take about 2 hours. You are more likely to do the assigned readings and videos if you choose a particular day of the week and time to do this. If you don’t do these all at once, it’s fine to spread the videos and reading out over a period of several days.\nThe times and day(s) of the week I will do the videos and readings: Wednesday\n‍\n","date":"2025-03-25","permalink":"https://22cs.github.io/post/mbsr-z15nnqe.html","title":"MBSR"},{"content":"提出有目的性问题：哈佛商业评论《职场女性》节目内容总结 主要参与者 艾米·伯恩斯坦与艾米·加洛（节目主持人） 艾莉森·伍德·布鲁克斯（哈佛商学院专家，《谈话：对话的科学和做自己的艺术》作者） 梅根（生物科技公司项目经理，希望提升提问技巧） 阿曼达·克西（节目制作人） 有目的性问题的特征 具有明确目的和意图 能推动对话向前发展 鼓励开放而非防御性回应 与高管气质特质相通（源自自信和情商） 提问的关键洞见 群体vs一对一对话 群体对话与一对一对话在本质上截然不同 地位较低者在一对一场合通常感觉更自在 群体规模越大，协调难度和羞耻风险呈指数增长 提问风格与技巧 开放式问题很有效，特别是以\"什么\"开头的问题 “你能再多说一点吗？“这类简单后续问题非常有效 语调和意图表达可以减轻问题的敏感性 真正的问题不是问的是否敏感，而是提问的环境是否敏感 无聊的平淡问题比偶尔尖锐的问题危害更大 克服提问障碍 拖沓和填充词（um、uh等）是自然对话的正常部分 精心准备的提问与在对话中保持灵活同样重要 提前明确对话目标有助于提出更有针对性的问题 多问后续问题比试图提出一个完美问题更重要 展示领导力的提问 阐明共同目标，创造协作而非对抗心态 明确表达你为什么需要这些信息 提问\"你还考虑了哪些其他选择？为什么选择这一个？” 表明自己对组织未来的投入：“未来我们需要什么条件才能实现这一目标？” 不同的有效提问风格 艾米·伯恩斯坦：直接、简洁、发人深省的问题，挑战常规思维 艾米·加洛：更详细的问题，专注实用建议，擅长追问 两种风格虽然不同，但同样有效，证明提问没有唯一正确方式 这一集强调了提问是一项复杂但可以通过练习提高的技能，对于希望在职场展示领导力和战略思维的人尤为重要。\nAMY BERNSTEIN: You’re listening to Women at Work from Harvard Business Review. I’m Amy Bernstein.\n艾米·伯恩斯坦：您正在收听的是《哈佛商业评论》的《职场女性》节目。我是艾米·伯恩斯坦。\nAMY GALLO: And I’m Amy Gallo. This is our Essentials series, where we explore key career skills and make management advice practical and relatable.\n艾米·加洛：我是艾米·加洛。这是我们的“Essentials”系列，我们将在其中探讨关键的职业技能，并提供实用且易于理解的管理建议。\nAMY BERNSTEIN: We do that by bringing together experts on those skills and audience members who want to get better at them.\n艾米·伯恩斯坦：我们这样做的目的是召集这些技能方面的专家和想要提高这些技能的观众。\nAMY GALLO: OK, Amy B, I have been in many meetings with you over the years, and you are particularly good at asking purposeful questions.\n艾米·加洛：好的，艾米·B，这些年来我与您开过很多次会议，您特别擅长提出有目的的问题。\nAMY BERNSTEIN: What do you mean by that, Amy?\n艾米·伯恩斯坦：艾米，你这话是什么意思？\nAMY GALLO: [Laughter]\n艾米·加洛：[笑声]\nAMY BERNSTEIN: Purposeful questions have a clear purpose. They’re intentional.\n艾米·伯恩斯坦：有目的的问题有明确的目的。它们是有意图的。\nAMY GALLO: And they also are clear in that we know exactly what you’re getting at.\n艾米·加洛：他们也清楚，我们完全知道你的意思。\nAMY BERNSTEIN: They have impact. They should elucidate a point, or they should move the conversation forward in some way.\nAMY BERNSTEIN：它们有影响力。它们应该阐明一个观点，或者应该以某种方式推动对话向前发展。\nAMY GALLO: And they invite openness rather than defensiveness.\n艾米·加洛：他们提倡开放态度，而不是防御态度。\nAMY BERNSTEIN: I just want to note here that these are the same traits that you see in executive presence. They come from confidence and draw on your emotional intelligence, your ability to read the room.\nAMY BERNSTEIN：我只想指出，这些特质与高管气质相同。它们源自自信，并依赖于你的情商和你洞察现场的能力。\nAMY GALLO: Yeah. That actually ties really well into why our audience-member-slash-guest volunteered for this episode. Her name is Meagan. I’ll let her introduce herself.\nAMY GALLO：是的。这实际上与我们的观众/嘉宾自愿参加本期节目的原因非常吻合。她的名字是 Meagan。我让她自我介绍一下。\nMEAGAN: I am a program manager in a biotech company, and I’ve been in a staff level role for, oh gosh, it’s probably been, like, four years. I ask questions that I’m super comfortable asking, and those can be questions that focus on the execution of a particular task or deliverable.\nMEAGAN：我是一家生物科技公司的项目经理，我担任员工级别的职位已经有四年了。我会问一些我非常乐意问的问题，这些问题可能侧重于某项特定任务或可交付成果的执行。\nAMY GALLO: Meagan’s looking to advance, maybe through a promotion, maybe by working in a different part of the business. But the clear feedback she’s gotten is that she needs to develop executive presence. And then a colleague recently pushed their team to think more strategically.\nAMY GALLO：Meagan 希望获得晋升，也许是通过升职，也许是通过在公司的其他部门工作。但她得到的明确反馈是，她需要培养高管风范。最近，一位同事敦促他们的团队更具战略性地思考。\nAMY BERNSTEIN: Aha.\n艾米·伯恩斯坦：啊哈。\nMEAGAN: And that’s got me thinking, Oh, well, how do I ask questions in a strategic way; as well as, how do I ask questions in a way that helps me move forward in my career?\n梅根：这让我开始思考，好吧，我该如何以一种策略性的方式提出问题呢？还有，我该如何以一种有助于我职业发展的方式提出问题呢？\nAMY BERNSTEIN: Excellent questions.\n艾米·伯恩斯坦：问题问得非常好。\nAMY GALLO: With no easy answers. Because her first concern—how do I ask questions in a strategic way—isn’t only about taking the entire business into account, it’s also about tone and delivery.\nAMY GALLO：没有简单的答案。因为她首先关心的——我该如何以战略性的方式提问——不仅仅是要考虑整个业务，还与语气和表达方式有关。\nAMY BERNSTEIN: And that means negotiating tensions. You want to ask for the information you need without undermining your credibility. You want to get to the point but not leave out important context. You want to push for clarity without coming across as hostile. And in the moment, it’s not always clear how to frame a question so that it lands the way you want it to.\nAMY BERNSTEIN：这意味着要协商解决紧张局势。你要询问所需的信息，但又不能损害你的信誉。你要直奔主题，但不能遗漏重要的背景。你要努力澄清事实，但不能表现出敌意。而在当下，如何提出问题，才能让问题以你想要的方式得到解决并不总是很清楚。\nAMY GALLO: Right.\n艾米·加洛：对。\nAMY BERNSTEIN: And because of these stakes and tensions, our guest expert, Alison Wood Brooks, describes conversation as “one of the most complex and uncertain of all human tasks.”\n艾米·伯恩斯坦：由于这些利害关系和紧张局势，我们的客座专家艾莉森·伍德·布鲁克斯将对话描述为“所有人类任务中最复杂和最不确定的任务之一”。\nALISON WOOD BROOKS: We’re all just sort of all the time trying to read ourselves, trying to read the person across from us and read the room, the context all around us. And those are really high-level skills that we all need to continue to work on sort of forever.\n艾莉森·伍德·布鲁克斯：我们总是试图了解自己，了解对面的人，了解房间，了解我们周围的环境。这些都是非常高级的技能，我们所有人都需要永远努力掌握。\nAMY GALLO: Alison’s literally a scholar on the subject.\n艾米·加洛：艾莉森确实是该领域的学者。\nAMY BERNSTEIN: At Harvard Business School.\n艾米·伯恩斯坦：在哈佛商学院。\nAMY GALLO: And she’s published a book called Talk: The Science of Conversation and the Art of Being Ourselves.\n艾米·加洛：她出版了一本书，名为《谈话：对话的科学和做自己的艺术》。\nAMY BERNSTEIN: More from me after Amy G’s interview with Alison and Meagan.\n艾米·伯恩斯坦：艾米·G 采访艾莉森和梅根后，我将发表更多消息。\nAMY GALLO: Meagan, Alison, thank you both for joining me. And I have to note how meta this all feels because as I was prepping, I was thinking about the questions I wanted to ask the professor who studies questions and the person who wants to get better at questions and knowing you’re both going to ask me questions. So, this is going to be really fun.\nAMY GALLO：Meagan、Alison，感谢你们两位的参与。我必须指出，这一切感觉非常复杂，因为在准备时，我一直在思考我想问研究问题的教授和想要提高问题解决能力的人的问题，并且知道你们俩都会问我问题。所以，这会非常有趣。\nMEAGAN: Very excited for the conversation today.\n梅根：非常期待今天的谈话。\nALISON WOOD BROOKS: Thank you so much for having us. I’m so excited to connect. And I’m with you, it’s very meta to talk about talking.\n艾莉森·伍德·布鲁克斯：非常感谢您的邀请。我很高兴能和您联系。我和您一样，谈论谈话是一件非常重要的事情。\nMEAGAN: Yes.\n梅根：是的。\nAMY GALLO: So, Meagan, let’s get a little more context of where you are skill-wise in this and what your experience is like. Tell us about a time you asked a question where you know you landed it, you got exactly the information or response or connection that you were looking for.\nAMY GALLO：那么，Meagan，让我们进一步了解一下你在这方面的技能水平以及你的经验。请告诉我们你问过一个问题，你知道自己回答正确，你得到了你想要的信息、回应或联系。\nMEAGAN: Yes, there was actually… I was attending one of our department summit meetings we had a couple of years back, and I had the opportunity to ask our GM of our region as well as, at the time, our chief commercial officer some questions that I was very passionate about on a topic. And I had about 10 seconds to jot down what am I going to ask and be handed a microphone and be able to just ask it in a way that I really wanted to elicit a response. I felt really confident when I asked the question though. I will say I did blackout after I asked it because it was a little nerve wracking. But I got really clear and detailed on the point. And the response I got was actually people in the room applauded because the leaders, it took them a while to respond.\nMEAGAN：是的，实际上……几年前我参加了我们部门峰会，有机会就某个话题向我们的地区总经理以及当时的首席商务官提出了一些我非常感兴趣的问题。我大约有 10 秒钟的时间记下要问的问题，然后递上麦克风，以一种我真正想要得到答复的方式提出问题。不过，当我问出这个问题时，我感到非常自信。我会说，问完之后我确实昏了过去，因为有点紧张。但我对这个问题的回答非常清楚和详细。我得到的回应是，房间里的人们鼓掌，因为领导们花了一段时间才做出回应。\nThey were like, Do you want to take this one? And actually it was such a good question that I got a lot of feedback after I asked. I had actually my boss’s boss come up to me and say, “Thank you for asking that question. It shows that our team is thinking critically about this problem.” But that was a time where I was very passionate about the topic. I was able to get the question down, nervous though, of asking it to these senior leaders, but I was able to get a good response afterwards.\n他们问，你想回答这个问题吗？事实上，这个问题非常好，我问完之后得到了很多反馈。我老板的老板甚至来找我说：“谢谢你问这个问题。这表明我们的团队正在认真思考这个问题。”但那时我对这个话题非常热衷。我把问题写下来了，虽然我很紧张，因为我要问这些高层领导，但之后我得到了很好的回应。\nAMY GALLO: All right, so tell us about an opposite experience sometime where you either regretted not asking a question or you asked in a way that just sort of flopped.\n艾米·加洛：好的，请告诉我们一个相反的经历，有时候你会后悔没有提出问题，或者你提问的方式有点失败。\nMEAGAN: So, a recent scenario where chief of staff of our R\u0026D came and gave a presentation, and I asked the question, it was a little open-ended. And I realized that after the fact because I could tell from her facial expression and her tone that she’s like, *Why are you asking me this? It is pretty obvious of what this is. *And I realized that I wasn’t being as specific as I could have been.\nMEAGAN：最近有一次，我们研发部门的参谋长来做报告，我问了一个问题，这个问题有点开放。事后我才意识到这一点，因为我从她的面部表情和语气中可以看出，她想问，你为什么问我这个问题？这个问题很明显。我意识到我没有尽可能具体地说明。\nAMY GALLO: Right. I’m curious, Alison, what you’re hearing in those two contrasting examples. I’m sure you’re hearing lots of things that are reflected in your research.\nAMY GALLO：是的。Alison，我很好奇你从这两个对比鲜明的例子中听到了什么。我相信你听到了很多反映在你的研究中的东西。\nALISON WOOD BROOKS: So many things, you guys. First, both of the examples you gave were in groups, it was in front of a lot of people. Group conversation is remarkably different, categorically different than one-on-one private conversation. We tend to think of conversation as the same task everywhere, no matter how many people are there. But as soon as a third person pulls up a chair, even this conversation with the three of us is remarkably different than if it were just Meagan and Amy, or just Alison and Amy, or just Alison and Meagan. It means that one person there can sit and not say anything and still be part of the conversation. When you’re one-on-one, that’s not the case. You have to keep the, sort of, tennis ball alive going back and forth across the net.\n艾莉森·伍德·布鲁克斯：你们说的太多了。首先，你们举的两个例子都是在群体中进行的，有很多人。群体对话与一对一的私人对话截然不同。我们倾向于认为对话在任何地方都是一样的，无论有多少人。但是一旦第三个人拉过一把椅子过来，即使是我们三个人的对话也与只有梅根和艾米，或者只有艾莉森和艾米，或者只有艾莉森和梅根时的对话截然不同。这意味着一个人可以坐在那里不说话，仍然可以参与对话。当你一对一时，情况就不一样了。你必须让网球在网前来回移动。\nAnd as group size grows, the coordination challenges of keeping a conversation alive and smooth grow exponentially. The risks of shame and judgment also grow exponentially. A lot of people who are not high status in their organizations feel a lot more comfortable and more power when they are in smaller one-on-one interactions. And so the more you can leverage that, the better things are going to go. If you can pull that boss aside after the big group meeting and say, “Oh, actually I meant to ask that question this way, would you mind chatting about that a little bit?” That feels so much more approachable, and that conversation might be a lot more productive than trying to ask even the same question in front of the group.\n随着团体规模的扩大，保持对话活跃和顺畅的协调挑战也成倍增加。羞辱和评判的风险也成倍增加。许多在组织中地位不高的人在小规模的一对一互动中会感到更自在，更有权力。因此，你越能利用这一点，事情就会越好。如果你能在大型会议结束后把老板拉到一边说：“哦，其实我本来想这样问这个问题，你介意聊一聊吗？”这让人感觉更容易接近，而且这种谈话可能比在小组面前问同样的问题更有成效。\nAMY GALLO: Is that true for you, Meagan? Do you feel more comfortable asking the questions one on one?\n艾米·加洛：梅根，你也是这样吗？一对一提问你会觉得更自在吗？\nMEAGAN: Definitely. In those higher stakes situations where it’s a larger group, I have to either prepare or if it’s off the cuff, shame is definitely something that comes up.\nMEAGAN：当然。在那些风险较高、人数较多的场合，我必须做好准备，否则如果是即兴发挥，肯定会感到羞耻。\nALISON WOOD BROOKS: It’s waiting right there like a specter on the doorstep. You’re not alone. So, this is a feeling that most people feel, introverts for sure. And even in some of our research we have found that women have a very strong preference for smaller intimate conversation compared to large groups, likely because women tend to occupy positions of lower status a lot of the time. So, it’s sort of all tied together. But-\n艾莉森·伍德·布鲁克斯：它就像门口的幽灵一样在那里等待着。你并不孤单。所以，这是大多数人都会有的感觉，内向的人肯定是这样。甚至在我们的一些研究中，我们发现女性更喜欢小规模的亲密谈话，而不是大群体的谈话，这可能是因为女性往往占据着地位较低的位置。所以，这一切都是联系在一起的。但是-\nAMY GALLO: I would posit too, Alison, that’s also because our failures tend to be judged more harshly.\n艾米·加洛：艾莉森，我也这么认为，这是因为我们的失败往往会受到更严厉的评判。\nALISON WOOD BROOKS: For sure, yes, it’s not wrong. These preferences have evolved from a place of reality—actually you are judged more harshly sometimes if you say something, and then we put pressure on ourselves if we’re not saying anything. So anyway, it just gets really complicated. So that’s the first thing when I was hearing about these stories, Meagan, is the distinction between intimate and groups. What can be very empowering is to think, Well, how can I leverage the comfort I feel in one-on-one conversation? Often you do have power over structuring the size of your conversations. Who can you talk to before a big group meeting? Who can you talk to after and how can you leverage that a little bit more?\n艾莉森·伍德·布鲁克斯：当然，没错。这些偏好是从现实中发展而来的——实际上，如果你说了什么，你有时会受到更严厉的评判，如果我们什么都不说，我们就会给自己施加压力。所以无论如何，这真的很复杂。梅根，当我听到这些故事时，我首先想到的是亲密关系和群体之间的区别。最能让人振奋的是思考，好吧，我如何利用一对一谈话中感受到的舒适感？通常，你可以控制谈话的规模。在大型团体会议之前，你可以和谁交谈？在会议结束后，你可以和谁交谈？你如何才能更好地利用这种感觉？\nAnd then one other thing that I heard in the way you describe these stories is you tend to ask questions that feel comfortable. And then when you described your success question asking, you described it as passionate. It was a question I was passionate about. And in that moment I was like, Oh, I love it so much. Not only do you sound like you are dying to ask that question, but it took some courage to do it. And whether it’s in a group in a high-stakes situation or one on one, every little micro decision we make when we shift to a new topic or ask a new question, it really is like a risk. It takes courage to say, Am I going to go here?\n然后，我从你描述这些故事的方式中听到的另一件事是，你倾向于问一些让人感到舒服的问题。然后，当你描述你问成功问题时，你把它描述为充满激情。这是一个我充满激情的问题。在那一刻，我想，哦，我太喜欢它了。你不仅听起来很想问这个问题，而且问这个问题需要一些勇气。无论是在高风险情况下的群体中，还是一对一，当我们转向新话题或提出新问题时，我们所做的每一个微小决定，都真的像是一种风险。需要勇气才能说，我要去这里吗？\nAnd it sounds like sometimes when you feel like you’re not finding that courage and not able to take those risks, that’s when your questions are coming out as a little bit mundane or less articulate or you’re not really asking the question that you are actually dying to ask.\n听起来，有时候，当你感觉自己找不到那种勇气，无法承担那些风险时，你的问题就会变得有点平淡无奇或不太清晰，或者你并没有真正问出你真正想问的问题。\nAMY GALLO: I got to follow up on that, Alison, because if the research says we tend to be more fearful or hesitate to ask questions when we’re lower status, obviously we don’t want to wait. Meagan doesn’t want to wait until she gets the promotion to start asking the questions. So how do we psych ourselves into the courage we need regardless of our status?\nAMY GALLO：Alison，我得继续问这个问题，因为如果研究表明，当我们的地位较低时，我们往往更害怕或犹豫不决，显然我们不想等待。Meagan 不想等到升职后才开始问问题。那么，无论我们的地位如何，我们如何才能鼓起勇气呢？\nALISON WOOD BROOKS: Already we’ve talked about one thing, which is leverage intimate one-on-one conversation where you’re going to feel more brave anyway and where it feels safer for the other person to answer, that you’re not putting them on the spot and giving them the risk of shame. The other thing I think that can feel really empowering is good conversationalists align their choices with the goals of the conversation. And so a little bit of reflection ahead of time of, what are my goals in this interaction, and what do I think other people’s goals are?\n艾莉森·伍德·布鲁克斯：我们已经讨论过一件事，那就是利用亲密的一对一对话，在这种对话中，无论如何你都会感到更勇敢，对方回答问题也会感到更安全，你不会让他们当场出丑，也不会让他们有蒙羞的风险。我认为另一件能让人感到真正有力量的事情是，好的谈话者会将他们的选择与谈话的目标结合起来。所以，提前思考一下，我在这次互动中的目标是什么，我认为其他人的目标是什么？\nParticularly at work, if you even think for 30 seconds, Oh, the goal of this meeting is we need to choose someone to hire. So, my questions should be helping guide the group towards making a decision to hire someone. Or, our goal here is to generate as many ideas about this new product as possible. So just keeping in mind what are we doing here, what are our needs and goals, will help you make better choices about the types of questions that you should be asking.\n尤其是在工作中，如果你花 30 秒思考一下，哦，这次会议的目标是我们需要选择一个人来雇用。所以，我的问题应该有助于引导团队做出雇用某人的决定。或者，我们的目标是尽可能多地提出有关这个新产品的想法。所以只要记住我们在这里做什么，我们的需求和目标是什么，就能帮助你更好地选择应该问的问题类型。\nAMY GALLO: So, Meagan, one of the things that was on your mind you told us was asking questions that for lack of a more nuanced way to say this that didn’t make you look stupid. And so I’m curious if you have any questions for Alison about how to do that.\nAMY GALLO：所以，Meagan，你告诉我们，你考虑的事情之一是问一些问题，因为缺乏更细致入微的方式来表达，这样你才不会显得愚蠢。所以我想知道你是否对 Alison 有什么问题，如何做到这一点。\nMEAGAN: Yeah. How do you keep credibility asking questions knowing that you’re not gonna come across as knowledgeable about a particular subject but showing that you are curious and want to learn more and not necessarily distracting from the conversation?\nMEAGAN：是的。你如何保持可信度，在提问时，你明知自己不会对某个主题知识渊博，但又表现出你很好奇，想要了解更多，而且不一定会分散谈话的注意力？\nALISON WOOD BROOKS: You can literally just say, “Can you say more?” “Can you keep going?” “Can we hear more about this?” And I think often we put pressure on ourselves to come up with this well-phrased question when in fact what you need from another person is for them to just say a little bit more because you’re not actually understanding what they’re saying. And “Can you say more?” is a wonderful question. That’s enough. That is a show of your competence that you see that there’s value in what they’re saying.\n艾莉森·伍德·布鲁克斯：你可以直接说，“你能再说点吗？”“你能继续说下去吗？”“我们可以听听更多吗？”我认为我们经常给自己施加压力，想出这个措辞恰当的问题，而实际上你需要别人再说一点，因为你实际上并没有理解他们在说什么。“你能再说点吗？”是个很好的问题。这就足够了。这表明你有能力，你看到他们说的话很有价值。\nIn a way, it’s the ultimate open-ended question. So, when we studied open-ended questions, there are lots of ways to phrase open-ended questions. One is by starting it with a what, like, “Tell me what else is on your mind” or “What did you do this morning?” “What were you thinking about when you prepared for this meeting?” That’s a beautiful open-ended question. And you could frame all of those same questions by starting with why. Why questions are still technically open-ended, but they’re more accusatory. It sort of pulls back on the lovely relational motives and things that we need in conversation to have it feel safe and productive.\n从某种程度上来说，这是终极的开放式问题。因此，当我们研究开放式问题时，有很多种表达开放式问题的方法。一种是以“什么”开头，例如“告诉我您还有什么想法”或“您今天早上做了什么？”“您在准备这次会议时想到了什么？”这是一个很棒的开放式问题。您也可以以“为什么”开头来组织所有这些问题。“为什么”问题在技术上仍然是开放式的，但它们更具指责性。它有点撤回了我们在对话中需要的可爱关系动机和事物，以使对话感觉安全和富有成效。\nSo, leaning more towards the, “What is on your mind?” “Can you tell me more?” “Tell me your perspective,” those questions are really productive, and it doesn’t take much from you to formulate them. You just need to say, “What did you mean?” “What were you thinking about?” “What are you feeling right now?” and sort of put the ball back in their court.\n因此，更倾向于问“你在想什么？”“你能告诉我更多吗？”“告诉我你的观点”，这些问题确实很有成效，而且你不需要花太多精力去构思。你只需要说“你的意思是什么？”“你在想什么？”“你现在感觉如何？”然后把球重新交给他们。\nAMY GALLO: Would that work for the scenarios you’re thinking of, Meagan?\n艾米·加洛：梅根，这对于您所想象的场景有用吗？\nMEAGAN: It would, but how do I also though not trail off in those questions?\n梅根：确实如此，但是我怎样才能在这些问题上不落窠臼呢？\nAMY GALLO: Yeah, and Alison, before you answer that question, can you, Meagan, give us a sense of, like, where are you asking these sorts of questions? Is this on one-on-ones, in meetings?\n艾米·加洛：是的，艾莉森，在你回答这个问题之前，梅根，你能告诉我们，你在哪里问这些问题吗？是在一对一的谈话中，还是在会议上？\nMEAGAN: I would say either in one-on-ones or in smaller groups. And actually, I lead an employee resource group, I’m leading the meetings, and I am discovering as I’m asking questions to the group, for example, “Are there any other points of feedback that we want to capture before we make a decision about X, Y and Z?” I’ll trail off at the end. And so it’ll be like, “What do you think about this…?” And then it’s like, I know they know what I’m talking about, but it’s like I get stuck. It’s like, how do I really complete this sentence or ask this question in a way that’s going to sound intelligent, but then halfway through it’s like, Oh, this is just tapering off?\nMEAGAN：我会说，要么是一对一，要么是小组讨论。实际上，我领导一个员工资源小组，主持会议，我在向小组提问时发现，例如，“在就 X、Y 和 Z 做出决定之前，我们是否还有其他反馈意见需要收集？”最后我会停顿下来。然后我会问，“你觉得这个怎么样……？”然后，我知道他们知道我在说什么，但我好像卡住了。我该如何完成这句话或以一种听起来很聪明的方式提出这个问题，但到了一半，我又想，哦，这只是逐渐停止？\nAnd a lot of the times they ask me to repeat it. They ask, “Is this what you’re asking?” And I think where it’s coming from is the fact that I don’t feel confident when I’m asking the question, but I know I need to keep the conversation going.\n很多时候他们都会让我重复一遍。他们会问，“这就是你要问的吗？”我想这是因为我在问这个问题时缺乏自信，但我知道我需要继续谈话。\nAMY GALLO: Alison. Help us fix this.\n艾米·加洛：艾莉森。帮我们解决这个问题。\nALISON WOOD BROOKS: Meagan, are you in this scenario… are you in a Zoom meeting or are you face to face?\n艾莉森·伍德·布鲁克斯：梅根，你是这种情况吗……你是在参加 Zoom 会议，还是面对面会议？\nMEAGAN: It’s always a virtual meeting.\n梅根：这始终是一次虚拟会议。\nALISON WOOD BROOKS: Always virtual. So, I was going to say any group conversation can be very demoralizing, but especially virtual meetings where people are muted and you’re not even getting the sort of back-channel feedback, which is people going, “Yeah. Mm-hm. Uh-huh.” In natural conversation face to face, that’s like a version of cheerleading where your partners and the people in the group are cheering you on as you’re formulating this question to say, Yes, keep going. We also want to ask this question. In virtual meetings you can’t get that. It’s not surprising to me that you’re sort of trailing off midway because you need that cheerleading, you need that sort of co-narration in order to just get the sense of, am I heading in a good direction or not?\n艾莉森·伍德·布鲁克斯：总是虚拟的。所以，我想说，任何群体对话都可能令人沮丧，尤其是虚拟会议，人们被禁言，你甚至得不到那种后台反馈，也就是人们说，“是的。嗯。嗯。”在面对面的自然对话中，这就像啦啦队的一种形式，你的搭档和小组成员在你提出这个问题说“是的，继续前进”时为你加油。我们也想问这个问题。在虚拟会议中你得不到这一点。我并不惊讶你会在中途停顿下来，因为你需要那种啦啦队，你需要那种共同叙述，才能知道我是否在朝着好的方向前进？\nAnd the silent void that you get in a virtual meeting is sort of soul-crushing in that way. And so by the time you get to the end of your question, you have no idea whether you’re asking it clearly or asking the right question. So, I think just knowing that and getting to a place of acceptance of, I’m not going to get that verbal back-channel feedback that’s going to help me keep going. Just get to a place where you’re more comfortable with that, and it is actually soul-crushing, and it’s not you. It’s the modality of that you’re communicating on.\n虚拟会议中的沉默空虚在某种程度上令人心碎。所以当你问完问题时，你不知道自己问得清楚还是问对了问题。所以，我认为，仅仅知道这一点并接受这一点，我不会得到那些可以帮助我继续下去的口头反馈。只要你找到一个更舒服的地方，这实际上是令人心碎的，这不是你的问题。这是你交流的方式。\nIn my course when I teach students about conversation, I have them record themselves and listen back. And without fail, one of the first things everyone notices is how inarticulate they are and how many filler words they have, and they’re totally mortified. And so they’ll say, Oh, I’m going to work so hard this semester to stop saying um an uh and trailing off. And then we talk about like, No, don’t do that. That is how natural dialogue works. You cannot plan out whole sentences before you say them. So, you are coming up with what you’re saying as you’re saying it. Trailing off is a sign of uncertainty. It gives a signal to the people around you that you are formulating a bigger, more articulate idea.\n在我的课程中，当我教学生如何对话时，我会让他们录下自己的对话，然后听回放。毫无例外，每个人首先注意到的事情之一就是他们说话时有多么不清晰，有多少填充词，他们完全被吓到了。所以他们会说，哦，这个学期我会非常努力地停止说“嗯，呃”和“拖沓”的句子。然后我们会说，不，不要这样做。这就是自然对话的运作方式。你无法在说话前计划好整个句子。所以，你是在说话的同时想出你要说的话。拖沓是不确定的表现。它向你周围的人发出一个信号，表明你正在构思一个更大、更清晰的想法。\nAnd so I am not sure that the problem here is with you trailing off. I think what you’re hungry for is you want fully formed thoughts that are really incisive. And so it’s not about the ums and uhs and the trailing off. It’s sort of like, how can I frame my question in a way that really gets to the heart of what we’re trying to do here? And for that there are different ways that you can think about framing your question. You can ask people thinking questions versus feeling questions: “What are you thinking about this?” “How are you feeling about it?” You can ask people positive versus negative: “What would be the positive outcome of us doing this?” “What would be the negative outcome of us doing this?”\n所以我不确定你是不是在拖延。我认为你真正想要的是完整而深刻的想法。所以问题不在于“嗯”、“啊”和“拖延”。这有点像，我该如何提出问题，才能真正触及我们在这里试图做的事情的核心？为此，你可以用不同的方式来构思你的问题。你可以问人们思考问题而不是感受问题：“你对此有何看法？”“你对此有何感受？”你可以问人们积极问题而不是消极问题：“我们这样做会有什么积极结果？”“我们这样做会有什么消极结果？”\nYou can ask, “Let’s consider this from a different perspective.” So, “For whom would this decision be good? Which stakeholder in this situation?” You can ask when questions: “When was this a good thing? I know this was a good thing in the past and we’re feeling a little uncertain about it now, what’s going to happen with us in the future?” So past, present, future questions can be really incisive. And so for that you could sort of practice getting good at it on the fly, or you can think about brainstorming those types of questions before a meeting begins: What do we need to talk about? Do we need to talk about the past, the present, the future? Which stakeholders do we care about? Do we need to talk about what we’re thinking or what we’re feeling? Or both? A little bit of brainstorming ahead of time can be quite helpful.\n您可以问：“让我们从不同的角度考虑这个问题。”因此，“这个决定对谁来说是好的？在这种情况下，哪个利益相关者？”您可以问“什么时候”的问题：“这是一件好事？我知道这在过去是一件好事，但现在我们对此感到有点不确定，未来会发生什么？”所以过去、现在、未来的问题可能非常尖锐。因此，您可以练习在工作中熟练掌握它，或者您可以在会议开始前考虑集思广益这些类型的问题：我们需要讨论什么？我们需要谈论过去、现在还是未来？我们关心哪些利益相关者？我们需要谈论我们正在想什么还是我们的感受？还是两者兼而有之？提前进行一点头脑风暴可能会非常有帮助。\nAMY GALLO: Are those helpful Meagan?\n艾米·加洛：梅根，这些对我们有帮助吗？\nMEAGAN: It actually is. And I think one thing that you mentioned, Alison, that’s really resonating with me is the human element of asking a question. It’s okay to say the ums and to trail off, and I think that’s kind of where I’ve been a little self-conscious is how to sound as crisp as say another coworker I have that I look up to. She’s really good at asking questions and also just on the fly of being very articulate when the conversation is dynamic.\nMEAGAN：确实如此。Alison，我认为你提到的一件事让我深有感触，那就是提问的人性因素。说“嗯”和停顿是可以的，我认为这就是我有点不自在的地方，就是如何让自己听起来像我尊敬的另一位同事一样清晰。她非常擅长提问，而且在对话充满活力时，她总是能即兴地表达自己的想法。\nALISON WOOD BROOKS: And every conversation is a combination of forethought and flexibility in the moment. We as humans have a tendency to see amazing talkers and feel like there’s a sort of myth of naturalness, like, Oh, they’re so amazing, this is so easy for them. You have no idea how much work that person did before the meeting, how hard they are trying in the meeting, how much follow-up they’re doing afterwards. So when things look easy and skilled for other people, you just never know. I’m sure that it’s not just coming to her spontaneously in the moment and she’s probably spent her whole lifetime practicing that skill too.\n艾莉森·伍德·布鲁克斯：每一次谈话都是深思熟虑和灵活应对的结合。我们人类倾向于看到那些说话很棒的人，并觉得他们有一种自然的神话，比如，哦，他们太棒了，这对他们来说太容易了。你不知道他们在会议前做了多少工作，他们在会议中有多努力，他们在会后做了多少后续工作。所以当别人觉得事情很容易、很熟练时，你永远不知道。我敢肯定，她不是一时之间自发地想到这一点的，她可能也花了一生的时间练习这种技能。\nAnd then the final thing that I will say is when you start to look at hundreds of thousands of transcripts of real conversations, you realize conversations are a train wreck. And so we interrupt each other constantly. We fade away in the middle. We have half-finished ideas, we get excited about this and then we move on to something else and we forget to talk about the thing we needed to talk about. We all put so much pressure on ourselves for it to feel perfect and polished and productive, but the bottom line is that it’s a very complicated coordination game that is never going to be perfect. So, finding a bit of grace for yourself and for other people is a really great place to start.\n最后我想说的是，当你开始查看数十万份真实对话记录时，你会发现对话就像一场灾难。所以我们经常打断对方。我们在中途就断了。我们有一些未完成的想法，我们对此感到兴奋，然后我们转向其他事情，我们忘记谈论我们需要谈论的事情。我们都给自己施加了很大的压力，希望它感觉完美、精致和富有成效，但归根结底，这是一场非常复杂的协调游戏，永远不会完美。所以，为自己和他人找到一点优雅是一个很好的开始。\nAMY GALLO: When you said you have a colleague who you admire in terms of how crisp she is in asking questions, I want to reach out and hug you because try being Amy B’s co-host on this podcast, she can ask… I will ask the question in four messy sentences that, trust me, gets the point across and then she’ll just ask it in four words with some beautiful vocab word I hadn’t heard in five years. But yet I will tell you I could allow it to hurt my confidence, but I really see it as a style thing. It’s just a different style. I’m sure editing me is really hard for our producer because I do ask those questions that go on and on sometimes, but I think I also bring some richness to it or some emotion or some connection with the guest.\nAMY GALLO：当你说你有一位同事，你很钦佩她提问时的干脆利落时，我想伸手拥抱你，因为试试做 Amy B 在这个播客上的联合主持人，她可以问……我会用四个凌乱的句子问问题，相信我，这些问题能把要点表达清楚，然后她会用四个词来问，而且会用到一些我五年没听过的漂亮词汇。但我还是要告诉你，我可能会因此打击我的自信心，但我真的认为这是一种风格问题。只是风格不同而已。我相信对我们的制片人来说，编辑我的内容真的很难，因为有时我确实会问那些没完没了的问题，但我认为我也为它带来了一些丰富的内容、一些情感或与嘉宾的联系。\nSo yes, you want to… Amanda’s telling me in the chat that I do. Thank you. Yes, maybe emulating and even watching that colleague and studying what they do, and yet I also don’t want you to try to do something that’s not you because part of what it sounds like is that the anxiety in that moment when you start trailing off is the problem, not the trailing off necessarily, right? You’re like, Oh, did I sound like I didn’t know what I was doing? Am I not being leaderly enough? Am I leaving everyone confused? But maybe you just let it trail off and see what responses come back and if people need clarity, then you can give clarity.\n所以是的，你想……Amanda 在聊天中告诉我我想这么做。谢谢。是的，也许可以模仿甚至观察那位同事并研究他们的做法，但我也不希望你尝试做一些不适合你的事情，因为听起来，当你开始拖延时，那一刻的焦虑才是问题所在，而不一定是拖延本身，对吧？你会想，哦，我听起来是不是像不知道自己在做什么？我是否没有足够的领导力？我是否让每个人都感到困惑？但也许你只是让它拖延，看看会有什么反应，如果人们需要澄清，那么你可以给出澄清。\nMEAGAN: I really like that. I think it’s so helpful to hear that’s a different style. And I definitely have a trailing wandering style.\n梅根：我真的很喜欢。我认为听到这种不同的风格很有帮助。而且我确实有一种随性游走的风格。\nALISON WOOD BROOKS: It’s very warm, actually. You really pull people in. You can tell you’re very thoughtful and that you really care, so you might be the perfect person to be on a team where everybody’s moving too fast and not listening well and their questions are too quick and clipped. They need someone like you to sort of break the pace and slow it down and say, “Well let’s think about this in another way.” Thinking about group composition in that way could be really empowering, I hope.\n艾莉森·伍德·布鲁克斯：实际上，这非常温暖。你真的能吸引人们。你可以看出你非常体贴，你真的很关心，所以你可能是团队中的完美人选，在这个团队中，每个人都行动太快，不善于倾听，他们的问题太快太简短。他们需要像你这样的人来打破节奏，放慢速度，说：“好吧，让我们换个角度思考这个问题。”我希望以这种方式思考团队组成可能会真正赋予人们力量。\nMEAGAN: I feel really good about the feedback around that because I don’t think I hear it enough of, “Your style of communicating works well within this group dynamic,” or at least appreciating where I’m coming from. And sometimes when I’ve asked for feedback and said, “Please give me feedback on this particular thing,” sometimes the feedback is just, “Oh, you did great.” And I really want to improve or find specific examples of, “You did great here, and this is why.”\nMEAGAN：我对这方面的反馈感到非常满意，因为我觉得我听到的反馈还不够多，比如“你的沟通方式在这个团队中很有效”，或者至少对我的出发点表示赞赏。有时当我征求反馈并说“请就这件事给我反馈”时，有时反馈只是“哦，你做得很好。”我真的想改进或找到具体的例子，“你在这里做得很好，这就是原因。”\nALISON WOOD BROOKS: Recent research suggests that it’s easier for people to give more constructive ideas to you if you ask for their advice rather than feedback. So backward looking feedback feels harsh because it’s already happened and it’s sort of like saying you did a bad job. But if you say, “if we’re going to do that meeting again, what advice would you give to me about how to do this differently?” then it feels like you’re brainstorming together and preparing for something that has yet to come, and so it feels less harsh to say, “Oh yeah, I love how you put together. Your slide design is gorgeous. I love how you explain this idea. Next time I wonder if you could be a little more pithy when you’re explaining X, Y, and Z.”\n艾莉森·伍德·布鲁克斯：最近的研究表明，如果你征求别人的建议而不是反馈，他们更容易给你提供更具建设性的想法。因此，回顾性反馈会让人感觉很刺耳，因为它已经发生了，有点像在说你做得不好。但是如果你说，“如果我们要再次开会，你会给我什么建议，让我做点不同的事情？”那么感觉就像你们在集思广益，为尚未发生的事情做准备，所以说“哦，是的，我喜欢你的组合方式。你的幻灯片设计很漂亮。我喜欢你解释这个想法的方式。下次你在解释 X、Y 和 Z 时，能不能更简洁一点？”这样感觉就没那么刺耳了。\nThat’s also going to be easier to hear than them saying, “Hey, you were super long-winded when you talked about this in your presentation.” So just a slight reframe of forward-looking advice seeking that rather than backward-looking feedback.\n这也比他们说“嘿，你在演讲中谈论这个问题时太啰嗦了”更容易被接受。因此，只需稍微重新构建前瞻性的建议，而不是回顾性反馈。\nAMY GALLO: We do have an Essentials episode similar to this one called Getting the Feedback You Need, which we cover some of that thinking about getting feedback about the questions might be helpful to give another listen to that one.\n艾米·加洛：我们确实有一集与这一集类似的“Essentials”节目，名为“获取您需要的反馈”，我们在其中介绍了一些关于如何获取问题反馈的想法，再听一听这一集可能会有所帮助。\nMEAGAN: Definitely. I love the reframing.\n梅根：当然。我喜欢这种重新构图。\nAMY GALLO: So, let’s talk about the questions where you need to dig into what’s really going on in this situation. Because I know this was another area, Meagan, that you were trying to work on asking questions when the situation isn’t clear or something’s held up. Is there a scenario you’re thinking of specifically, Meagan, for this kind of question?\nAMY GALLO：那么，让我们来谈谈您需要深入了解这种情况下真正发生了什么的问题。因为我知道这是另一个领域，梅根，当情况不明朗或某些事情被搁置时，您试图提出问题。梅根，您是否专门考虑过这种问题的场景？\nMEAGAN: It’s going back to maybe a one-on-one conversation that I have with a senior leader. And I know that they’re a couple steps above and I’m really trying to ask them the strategy questions and trying to uncover why we are making particular decisions and understanding how the strategy is developed. And I want to be able to ask it in a way that also allows them to provide the reasons why things are happening and not come across as confrontational.\nMEAGAN：这可以追溯到我与高层领导的一对一谈话。我知道他们比我高出几步，我真的想问他们战略问题，试图发现我们为什么做出特定的决定，并了解战略是如何制定的。我希望能够以一种让他们能够提供事情发生原因的方式提出问题，而不是让他们觉得有对抗性。\nALISON WOOD BROOKS: It sounds like you’re hungry for more information exchange. I think often we have an instinct to say, Well, what’s the right question to ask? And as a scholar of conversation, I feel like putting too much pressure on yourself to ask the right question might not be the right way to think about it. Instead, what we see when we study transcripts is that it’s more like the pattern of questioning that’s good as the conversation unfolds that is good at diving deeper and deeper and getting more information exchange rolling in the conversation. So instead of focusing on that first question or what’s the right way to formulate this question., imagine if you just pushed yourself to ask more follow-up questions.\n艾莉森·伍德·布鲁克斯：听起来你很渴望进行更多的信息交换。我认为我们经常会本能地问，那么，什么问题才是正确的？作为一名研究对话的学者，我觉得给自己施加太大的压力来问出正确的问题可能不是正确的思考方式。相反，我们在研究记录时发现，随着对话的展开，提问的模式会越来越深入，从而让对话中的信息交换更加顺畅。因此，想象一下，如果你不是专注于第一个问题，也不是专注于提出这个问题的正确方式，而是强迫自己问出更多的后续问题。\nSo, no matter what information they start with, you just keep pushing and saying, “Well, what were you thinking about when you made that decision?” Or, “If you went to 30,000 feet, what conceptually are you thinking about here?” And sort of don’t stop asking until you get to a place where you feel like they’re giving you that sort of valuable treasure that you’re looking for. It almost has nothing to do with the initial question and more to do with, I’m going to listen as this unfolds and I’m going to keep asking until we get to a place where I feel like I’m getting the information that I need. And what’s so funny, that sounds so simple, but most people forget to keep asking follow-up questions.\n所以，无论他们一开始提供什么信息，你都要继续问：“那么，你在做这个决定时考虑的是什么？”或者，“如果你去了 30,000 英尺的高空，你在这里考虑的概念是什么？”不要停止询问，直到你觉得他们给了你正在寻找的那种宝贵的宝藏。这与最初的问题几乎毫无关系，更多的是，我会倾听事情的进展，我会继续询问，直到我们觉得我得到了我需要的信息。有趣的是，这听起来很简单，但大多数人都忘了继续问后续问题。\nAs soon as somebody you ask one question, they give an answer and then you’re like, Oh, I guess we got to move on. No, you should keep going. In my class we do an exercise called never-ending follow-ups, where you’re required to ask a follow-up question every time you speak, which sounds very extreme in theory, but in practice it’s super fun. You’ll very quickly get past small talk. You’ll get very deep on a topic. Good conversationalists are good at changing topics frequently, but also getting really deep on them quickly, often through asking lots of follow-up questions.\n只要有人问你一个问题，他们就会回答，然后你就会想，哦，我想我们得继续了。不，你应该继续。在我的课上，我们做一项名为“永无止境的后续问题”的练习，要求你每次说话时都问一个后续问题，这在理论上听起来很极端，但在实践中却非常有趣。你很快就会结束闲聊。你会对一个话题进行深入讨论。好的谈话者擅长频繁改变话题，但也能很快深入讨论，通常是通过问很多后续问题。\nAMY GALLO: I can count on one hand the number of times I’ve been like, I did not like that person because they asked difficult questions. But dozens and dozens of times I’ve said, That person didn’t ask me a single question.\n艾米·加洛：我可以用一只手数出我说过“我不喜欢那个人，因为他们问了难题”的次数。但我说过“那个人没有问我任何问题”的次数有几十次了。\nALISON WOOD BROOKS: This is so important, Amy, that a very important point that I hope will be helpful to you, Meagan: there really is no such thing as a sensitive question, but there is very much sensitive contexts. A lot of people have fears that by asking something too intrusive or too sensitive that people are going to get mad or hurt or sort of these high arousal negative emotions. But it’s actually a lot less common than the quieter killer of conversation, which is boredom and disinterest.\n艾莉森·伍德·布鲁克斯：艾米，这一点非常重要，我希望这一点对你有所帮助，梅根：实际上并不存在所谓的敏感问题，但存在非常多的敏感背景。很多人担心，如果问一些过于侵犯隐私或过于敏感的问题，人们会生气或受伤，或者产生高度唤起的负面情绪。但实际上，这种情况比更安静的谈话杀手——无聊和不感兴趣——要少见得多。\nIf we’re too scared to ask interesting, pointed, sensitive things, then the risk is that the whole conversation is completely forgettable and mundane and feels meaningless, and that’s actually a more common occurrence in conversation than the anger, hostile feelings.\n如果我们不敢问一些有趣、尖锐、敏感的问题，那么整个谈话就有可能变得完全不值得谈论、变得平淡无奇、毫无意义，而这在谈话中实际上比愤怒和敌意更为常见。\nAMY GALLO: Meagan, you had a question about asking questions that demonstrate your leadership qualities that you’re ready to take on more responsibility. Do you want to ask Alison about that?\n艾米·加洛：梅根，你问了一个问题，问这些问题可以表明你的领导才能，表明你已经准备好承担更多责任。你想问艾莉森这个问题吗？\nMEAGAN: Yes. I really have been thinking about, how do I move away from always the comfortable questions. Or even it’s like, how do I ask this to show that I’m thinking strategically or thinking I want to move up or make a big career leap, and I want it to be known to other people when I’m having these conversations, I’m interested in this. And so, I guess, how to move away from just the execution type questions and moving into a more leadership focused mindset when asking questions.\nMEAGAN：是的。我一直在思考，我该如何摆脱那些让人感到舒服的问题。或者，我该如何提出这个问题，才能表明我在进行战略思考，或者我想升职或实现职业飞跃，并且我希望在进行这些对话时让其他人知道，我对此很感兴趣。所以，我想，在提问时，如何摆脱仅仅关注执行力的问题，转而采用更注重领导力的思维方式。\nALISON WOOD BROOKS: Wow, I love this. I love hearing you sort of step into your power even saying this question out loud. It’s really wonderful. A very simple idea is trying to say your goals out loud. And that’s probably not necessarily about you, but maybe about the needs of everyone who’s involved in the conversation: “It seems to me like you need this” or “I’m going to say something because I care so much about you succeeding,” or “I think everybody’s feeling a little anxious about this, so I’m going to say this.”\n艾莉森·伍德·布鲁克斯：哇，我喜欢这个。我喜欢听到你发挥自己的力量，甚至大声说出这个问题。这真的很棒。一个非常简单的想法就是试着大声说出你的目标。这可能不一定是关于你自己的，但可能是关于参与对话的每个人的需求：“我觉得你需要这个”或“我要说点什么，因为我非常关心你的成功”，或者“我想每个人都对此感到有点焦虑，所以我要说这个。”\nLiterally saying, like, what is your strategic thinking, what is your perception of people’s goals, what are we aiming for as a group, literally saying that out loud more explicitly can be quite helpful because it allows people then to agree, “Yes, that is our goal.” “Yes, that is how we’re feeling.” Or to say, “Oh, actually no, I’m not feeling anxious about that, but I am feeling scared about this other thing,” or “I am excited about this other thing.” So, linguists call this grounding. It’s sort of always revising and weeding your shared reality, your shared understanding of what’s going on. Good strategic thinkers are good at providing a very clear platform of what are our goals and what are we doing here that allows other people to pile on and say yes or to disagree with it and sort of repair that understanding.\n从字面上说，比如，你的战略思维是什么，你对人们的目标有什么看法，我们作为一个群体的目标是什么，更明确地大声说出来会很有帮助，因为它可以让人们同意，“是的，这是我们的目标。”“是的，这就是我们的感受。”或者说，“哦，其实不，我对此并不感到焦虑，但我对另一件事感到害怕，”或“我对另一件事感到兴奋。”所以，语言学家称之为基础。它总是在修改和剔除你们共同的现实，你们对正在发生的事情的共同理解。优秀的战略思想家善于提供一个非常清晰的平台，说明我们的目标是什么，我们在这里做什么，让其他人加入进来，说是或不同意，并修复这种理解。\nAMY GALLO: Well, and I have a slightly different take on the sort of how I prove my capability of moving forward, which is to really ask an analytical question, something along the lines of, “I understand we’re not going to move this initiative forward. What would have to be true in the future for us to do that?” And shows that I’m invested in the future of this team or this initiative or this organization. That doesn’t conflict with what you are saying, Alison, but I think it’s another tactic that I’d have found works for me.\nAMY GALLO：好吧，对于如何证明我有能力继续前进，我的看法略有不同，那就是真正提出一个分析性问题，类似于“我知道我们不会继续推进这项计划。未来我们需要什么条件才能做到这一点？”并表明我对这个团队、这项计划或这个组织的未来投入了精力。这与你所说的并不矛盾，艾莉森，但我认为这是另一种对我有用的策略。\nALISON WOOD BROOKS: The more you can figure out what your colleagues want and need and what the organization wants and needs, and you show effort in pursuing those things, it just signals indirectly like, I’m part of this, and I’m aligned with the mission, and I want to be helpful at it because I see a future here, because I want to succeed in this place.\n艾莉森·伍德·布鲁克斯：你越能弄清楚你的同事想要什么、需要什么，组织想要什么、需要什么，并且你为追求这些事情而付出努力，这就间接地表明，我是这个组织的一部分，我与这个组织的使命保持一致，我想为这个组织提供帮助，因为我在这里看到了未来，因为我想在这个地方取得成功。\nAMY GALLO: Thank you both. I really enjoyed this, and I’m taking away so much.\n艾米·加洛：谢谢你们两位。我非常喜欢这个节目，收获颇多。\nALISON WOOD BROOKS: Amy, you’re such a fabulous facilitator of a three-person group. And Meagan, I just wanna gobble you up, you’re so wonderful.\n艾莉森·伍德·布鲁克斯：艾米，你真是一个出色的三人小组主持人。梅根，我只想把你吞掉，你太棒了。\nMEAGAN: I really appreciate this opportunity and being able to speak with both of you. It’s been really rewarding, and I feel more confident in my style now that I’ve had this conversation, so thank you. I really appreciate the confidence boost.\n梅根：我真的很感激这次机会，能够和你们两位交谈。这真的很有意义，而且经过这次谈话，我对自己的风格更加自信了，所以谢谢你们。我真的很感激你们增强了我的信心。\nAMY GALLO: Amy B, you’re back.\n艾米·加洛：艾米·B，你回来了。\nAMY BERNSTEIN: I am back and I’m here with someone who helps us ask purposeful questions every episode of this show.\n艾米·伯恩斯坦：我回来了，和我一起的人会在每一集节目中帮助我们提出有目的的问题。\nAMY GALLO: That’s right. Our producer, Amanda Kersey.\n艾米·加洛：没错。我们的制片人是阿曼达·克西。\nAMANDA KERSEY: Hello. Yes, I decided to come out from behind the scenes and insert myself here.\n阿曼达·克西：你好。是的，我决定走出幕后，加入到我们的行列。\nAMY GALLO: We’re glad you did.\n艾米·加洛：我们很高兴您这么做。\nAMY BERNSTEIN: You’re always here with us.\n艾米·伯恩斯坦：您一直和我们在一起。\nAMANDA KERSEY: I am usually just four feet back at that computer, but I have lots of thoughts about asking purposeful questions. But I wanted to pick up on something that Amy G mentioned to Meagan and Alison about you two having different styles and how she doesn’t want to be self-conscious about that. It’s just a style thing. That’s all okay. But as you know… because I think I shared it with you a few months ago when I was getting really into my ChatGPT assistant, the Women at Work AI—that I asked it to describe your interviewing styles, just so I could save that as a knowledge file.\nAMANDA KERSEY：我通常离电脑只有四英尺远，但我对提出有目的的问题有很多想法。但我想谈谈 Amy G 向 Meagan 和 Alison 提到的一件事，关于你们两人的风格不同，以及她不想对此感到不自在。这只是一个风格问题。没关系。但正如你所知……因为我记得几个月前我在真正使用我的 ChatGPT 助手 Women at Work AI 时与你分享过——我要求它描述你的面试风格，这样我就可以将其保存为知识文件。\nAMY GALLO: Right, based on our transcripts.\n艾米·加洛：是的，根据我们的记录。\nAMANDA KERSEY: Based on… I uploaded all the transcripts from the show, every single one of them, and what came out was unbelievable and very kind. So, the AI assistant said, “Amy Gallo frequently seeks out advice that listeners can apply to their own lives. Her questions often dig into the how and why of specific behaviors or strategies aiming to extract clear actionable insights. She’s particularly skilled at asking follow-up questions to get more detailed, tangible answers from experts.”\nAMANDA KERSEY：根据……我上传了节目的所有文字记录，每一条记录，结果令人难以置信，非常友善。因此，AI 助手说：“Amy Gallo 经常寻求听众可以应用于自己生活的建议。她的问题经常深入探讨特定行为或策略的来龙去脉，旨在提取清晰的可操作见解。她特别擅长提出后续问题，以便从专家那里获得更详细、更切实的答案。”\nAMY GALLO: I hear it—\n艾米·加洛：我听说——\nAMANDA KERSEY: It’s so kind.\n阿曼达·克西：你真是太好了。\nAMY GALLO: It is kind, but it’s so funny.\n艾米·加洛：这很友善，但也很有趣。\nAMY BERNSTEIN: It’s accurate.\n艾米·伯恩斯坦：这是准确的。\nAMANDA KERSEY: And accurate. Well, and I have to say, I feel a little like Meagan right now where I’m like, OK, it’s just my style. Because I hear that and I’m like, I ramble. I get it. I ramble.\n阿曼达·克西：而且很准确。好吧，我不得不说，我现在感觉有点像梅根，我觉得，好吧，这就是我的风格。因为我听到这些，我就会觉得，我在胡言乱语。我明白了。我在胡言乱语。\nAMY BERNSTEIN: Has anyone ever said you ramble or is that just your self-assessment?\n艾米·伯恩斯坦：有人说过您说话喋喋不休吗？或者这只是您的自我评价？\nAMY GALLO: It’s just my self-assessment. Sometimes I feel a little like Meagan sometimes where I’m halfway through the question. I’m like, Where am I going with this? What am I saying? And I think in contrast to you, Amy B—and I can’t wait for you to read what Amy B’s style is—but in contrast to you, sometimes it’s like these five words that just get to the point so quickly. And I understand that you’ve been an editor for many, many years. You’ve been trained to do that, but it’s just such a skill. And if I were more insecure, I think I would really shrivel in comparison to you. But I loved Alison’s take on this and reassurance to Meagan of there’s just a different style and it doesn’t make the question less purposeful.\nAMY GALLO：这只是我的自我评估。有时我觉得自己有点像梅根，有时我问了一半问题。我想，我要说什么？我要说什么？我认为与你不同，Amy B——我迫不及待地想让你看看 Amy B 的风格——但与你不同，有时就像这五个字就能很快切中要点。我知道你当编辑已经很多年了。你受过这方面的训练，但这只是一项技能。如果我更不自信，我想我真的会比你逊色。但我喜欢艾莉森对此的看法，她向梅根保证，这只是一种不同的风格，这并不会降低这个问题的目的性。\nAMANDA KERSEY: And even if your questions are a little windy, our AI is still saying you extract clear actionable insights. So even if you’re windy, you’re getting the goods.\nAMANDA KERSEY：即使你的问题有点儿离题，我们的人工智能仍然会告诉你，你已经获得了清晰可行的见解。所以即使你问的问题有点儿离题，你也能得到有用的信息。\nAMY GALLO: Ultimately.\n艾米·加洛：最终是这样。\nAMY BERNSTEIN: And they’re always entertaining and engaging.\n艾米·伯恩斯坦：它们总是充满乐趣和吸引力。\nAMY GALLO: Thank you.\n艾米·加洛：谢谢。\nAMY BERNSTEIN: We’re on the journey with you, Amy.\n艾米·伯恩斯坦：艾米，我们和你一起踏上旅程。\nAMANDA KERSEY: We are.\n阿曼达·克西：是的。\nAMY GALLO: Thank you.\n艾米·加洛：谢谢。\nAMANDA KERSEY: Let me flip this page and Amy Bernstein’s style. “Amy Bernstein is not afraid to challenge ideas or ask harder thought-provoking questions. Her questions often encourage guests to think more critically or consider alternate perspectives. This can result in a deeper, more nuanced exploration of the topic.”\nAMANDA KERSEY：让我来谈谈 Amy Bernstein 的风格。“Amy Bernstein 不怕挑战想法或提出更难的发人深省的问题。她的问题经常鼓励嘉宾进行更批判性的思考或考虑不同的观点。这可以导致对主题进行更深入、更细致的探索。”\nAMY GALLO: That resonates so much for me.\n艾米·加洛：这引起了我很大的共鸣。\nAMY BERNSTEIN: I’ve noticed no mention of warmth.\n艾米·伯恩斯坦：我没有注意到有人提到温暖。\nAMANDA KERSEY: Well, below is, “professional, yet personal.”\n阿曼达·克西：好吧，下面是“专业而又个性化”的。\nAMY GALLO: Your warmth comes through in your curiosity.\n艾米·加洛：你的热情体现在你的好奇心之中。\nAMANDA KERSEY: So Amy B, we haven’t talked on the show yet. Y’all haven’t talked about the fact that you got a promotion recently. You are now HBR’s editor in chief. Thinking about how Meagan wants to impress executives, the senior leader—she wants to get up there in her own industry one day. What are the types of questions that you’re listening for as an executive when you’re in the room with people who are more junior, maybe you pick up on the fact that they’re trying to impress you or they just happen to impress you? What are you listening for?\n阿曼达·克西：艾米·B，我们节目上还没聊过。你们还没有谈及你最近升职的事。你现在是《哈佛商业评论》的主编。想想梅根想给高管、高级领导留下深刻印象——她想有一天在自己的行业中出人头地。作为一名高管，当你和资历较浅的人共处一室时，你会听到什么样的问题？也许你会注意到他们试图给你留下深刻印象，或者他们恰好给你留下了深刻印象？你在听什么？\nAMY BERNSTEIN: Well, let me tell you what I pick up on. I pick up on genuine curiosity questions that bespeak a person’s understanding of the idea and commitment to embracing it by understanding it better. I really do appreciate questions that smoke test an idea, unless they’re smarty-pants questions. The questions I like are the ones that open my mind to new thinking, make me consider things I ought to have considered, but may have missed.\nAMY BERNSTEIN：好吧，让我告诉你我注意到了什么。我注意到那些真正好奇的问题，这些问题表明一个人理解了这个想法，并决心通过更好地理解它来接受它。我真的很欣赏那些对想法进行烟雾测试的问题，除非它们是自作聪明的问题。我喜欢的问题是那些能打开我的思路，让我思考那些我应该考虑但可能错过的事情的问题。\nAMY GALLO: And what you’re saying that you look for is not someone who just pokes holes, but someone who in the interest of the larger pursuit, the goal we’re trying to—may poke holes or may ask hard questions. One of the questions I like to ask when I’m trying to understand a decision someone in a senior leadership position has made more clearly is, “what other options did you consider and why did we go with this one?”\nAMY GALLO：你说你要找的不是只会挑毛病的人，而是一个为了更大的追求、为了我们试图实现的目标而挑毛病或提出尖锐问题的人。当我试图更清楚地理解高层领导做出的决定时，我喜欢问的一个问题是：“你考虑过其他什么选择，为什么我们选择了这个？”\nAMY BERNSTEIN: That is such a great, great question. And when you have asked me that you make me stop and think.\n艾米·伯恩斯坦：这个问题问得太棒了。你问这个问题的时候，让我停下来思考。\nAMANDA KERSEY: When you ask a question like that, Amy, asking someone to explain their reasoning behind the decision, like what alternatives they consider… that can be a sensitive question, that could put somebody on the defense. So do you work up to that kind of question? What are you doing before you ask that.\n阿曼达·克西：艾米，当你问这样的问题时，要求某人解释他们做出决定的理由，比如他们考虑过哪些替代方案……这可能是一个敏感的问题，可能会让某人产生防御心理。那么你会准备回答这样的问题吗？在问这个问题之前你会做什么？\nAMY BERNSTEIN: No, she doesn’t.\n艾米·伯恩斯坦：不，她不知道。\nAMANDA KERSEY: You don’t go right into that.\n阿曼达·克西：你别直接谈论这个。\nAMY GALLO: I mean, I think that’s where tone comes in. I might say, “Help me understand this further.” Or I might even set it up with, “I’m thinking about how I’m going to explain this to a stakeholder or customer or client, whatever. Help me understand what other options did we…” I mean, because the tone of that question could be very challenging. You mentioned sensitive questions, Amanda, and we didn’t talk too much in the conversation with Alison and Meagan, but Alison, in her book, she is pretty bold about saying there are no sensitive questions.\nAMY GALLO：我的意思是，我认为语气很重要。我可能会说，“帮我进一步理解这一点。”或者我甚至可以这样说，“我正在考虑如何向利益相关者或客户或客户等解释这一点。帮我理解我们还有什么其他选择……”我的意思是，因为这个问题的语气可能非常具有挑战性。你提到了敏感问题，阿曼达，我们在与艾莉森和梅根的谈话中没有谈太多，但艾莉森在她的书中大胆地说没有敏感问题。\nAMANDA KERSEY: There’s only sensitive context.\n阿曼达·克西：只有敏感内容。\nAMY BERNSTEIN: Exactly. I do have one thing to say about that. When people are asking the really sort of sensitive questions, I think that is the moment to be really straightforward.\nAMY BERNSTEIN：没错。我确实有话要说。当人们问一些非常敏感的问题时，我认为那是直截了当的时候。\nAMANDA KERSEY: Yes.\n阿曼达·克西：是的。\nAMY GALLO: In the response or in the question?\n艾米·加洛：是在回答中还是在问题中？\nAMY BERNSTEIN: Well, always in the response, but in the question as well. Because I’ve been on the receiving end of the sensitive question, and sometimes I struggle to understand the question itself. What are you really asking me? And I’ll ask them.\nAMY BERNSTEIN：嗯，总是在回答中，但也在提问中。因为我曾经被问过敏感问题，有时我很难理解问题本身。你到底在问我什么？我会问他们。\nAMANDA KERSEY: “Say more.”\n阿曼达·克西：“多说点。”\nAMY BERNSTEIN: Or I’ll say, “I don’t quite understand what you’re trying to find out,” which isn’t pushing back. It’s a request for clarification.\n艾米·伯恩斯坦：或者我会说，“我不太明白你想知道什么”，这并不是在反驳。而是在请求澄清。\nAMANDA KERSEY: I have found that leading with the reason you’re asking will make clear your motive and also offer clarity. Because when you’re nervous, maybe your question is coming out not so clear. So, if you start by saying, “I’m really trying to understand this,” or, “Our teammates and I, we’ve had this concern, and we’re trying to understand that,” can show the benevolence with which you’re coming to the conversation.\nAMANDA KERSEY：我发现，以提问的原因作为开场白，可以明确你的动机，并提供清晰的答案。因为当你紧张时，你的问题可能说得不太清楚。所以，如果你一开始就说“我真的想了解这一点”，或者“我们的队友和我，我们一直有这个顾虑，我们正在努力了解这一点”，这可以显示出你参与对话时的善意。\nAMY GALLO: Stating the intention of, “I need this clarity. I need the answer to this question in order to do my job or to help guide my team,” or whatever it is, gives them the context in which you’re going to use the answer, too. So, I think it takes down the heat. I think one of the preambles to a question also could be—this is something I take from difficult conversations research—is stating a shared goal. “I know we’re both trying to do X, we’re trying work through this incredibly uncertain time for our organization…” So, you’re putting you and the other person in a collaborative mindset as opposed to a combative mindset.\nAMY GALLO：说出“我需要这个清晰的答案。我需要这个问题的答案才能完成我的工作或帮助指导我的团队”之类的意图，也可以让他们知道你将在什么情况下使用这个答案。所以，我认为这可以缓解紧张情绪。我认为问题的开场白之一也可以是——这是我从困难对话研究中得出的结论——陈述一个共同的目标。“我知道我们都在努力做 X，我们正在努力度过这个对我们组织来说非常不确定的时期……”所以，你和对方处于一种合作的心态，而不是一种对抗的心态。\nAMY BERNSTEIN: I think that’s right. And when you’re talking about strategy, a new product, something like that, chances are, as the asker of the question, you want to be able to sell this idea further out and you can say that: “I want to make sure I understand this so I can do a better job persuading others about it.” Who wouldn’t want to help, right?\nAMY BERNSTEIN：我认为是这样。当你谈论战略、新产品或诸如此类的事情时，作为提问者，你很可能希望能够进一步推销这个想法，你可以说：“我想确保我理解这一点，这样我才能更好地说服别人。”谁不想帮忙呢，对吧？\nAMY GALLO: Yes.\n艾米·加洛：是的。\nAMANDA KERSEY: Okay. No further questions. Thanks for having me.\n阿曼达·克西：好的。没有其他问题了。感谢你们的邀请。\nAMY GALLO: Thank you, Amanda. Can you come over to the table more times?\n艾米·加洛：谢谢你，阿曼达。你能再来我们这边几次吗？\nAMANDA KERSEY: I might just roll on over here and there.\n阿曼达·克西：我可能会到处乱逛。\nAMY BERNSTEIN: Roll the three feet over.\n艾米·伯恩斯坦：把三英尺翻过来。\nAMANDA KERSEY: I’ll roll the three feet over.\n阿曼达·克西：我会把三英尺滚过去。\nAMY BERNSTEIN: That’s our show. I’m Amy Bernstein.\n艾米·伯恩斯坦：这就是我们的节目。我是艾米·伯恩斯坦。\nAMY GALLO: I’m Amy Gallo. For more advice on asking purposeful questions, check out the HBR articles that we’ve linked to in the show notes.\n艾米·加洛：我是艾米·加洛。如需更多有关提出有目的性问题的建议，请查看我们在节目笔记中链接的《哈佛商业评论》文章。\nAMY BERNSTEIN: Women at Work’s editorial and production team is Amanda Kersey, Maureen Hoch, Tina Tobey Mack, Hannah Bates, Rob Eckhardt, and Ian Fox.\nAMY BERNSTEIN：《Women at Work》的编辑和制作团队成员包括 Amanda Kersey、Maureen Hoch、Tina Tobey Mack、Hannah Bates、Rob Eckhardt 和 Ian Fox。\nAMY GALLO: Get in touch with us by emailing womenatwork@hbr.org.\nAMY GALLO：请通过 womenatwork@hbr.org 发送电子邮件与我们联系。\n","date":"2025-03-25","permalink":"https://22cs.github.io/post/the-essentials-asking-purposeful-questions-z2p4co2.html","title":"The Essentials: Asking Purposeful Questions"},{"content":"Many of us became software engineers because we found our identity in building things. Not managing things. Not overseeing things. Building things. With our own hands, our own minds, our own code.\n我们中的许多人之所以成为软件工程师，是因为我们在创造事物中找到了自我。不是管理事物，不是监督事物。而是创造事物。用我们自己的双手、自己的头脑、自己的代码。\nBut that identity is being challenged.\n但这一身份正遭受挑战。\nAI coding assistants aren’t just changing how we write software - they’re fundamentally transforming who we are. We’re shifting from creators to orchestrators, from builders to overseers. From engineers to something that looks suspiciously like… managers.\n人工智能编程助手不仅改变了我们编写软件的方式，还从根本上改变了*我们 *。我们从创造者变成了协调者，从建设者变成了监督者。从工程师变成了某种看起来很像……管理者的角色。\nThe irony cuts deep: for years, we’ve said that software engineering transcends mere coding. Requirements, design, testing, operations - these were all supposedly part of our craft. Yet the industry pushed us in the opposite direction. We handed these responsibilities to specialists - Product Owners, Architects, Quality Engineers, Platform Engineers - while we doubled down on our coding expertise. We became masters of our code, proud wielders of a modern magic.\n讽刺意味深长：多年来，我们一直说软件工程超越了单纯的编码。需求、设计、测试、操作——这些都应该是我们手艺的一部分。然而，行业却把我们推向了相反的方向。我们将这些责任交给了专家——产品负责人、架构师、质量工程师、平台工程师——而我们则加倍努力提高编码专业知识。我们成为了代码大师，自豪地掌握了现代魔法。\nAnd now, just as we’ve perfected this craft, AI is threatening to take it away from us.\n现在，正当我们完善了这项技艺时，人工智能却威胁要将它从我们手中夺走。\nThe Joy We’re About to Lose 我们即将失去的快乐\nLet’s be honest about what’s at stake here. Many of us don’t just write code - we love writing code. Our identity is woven into every elegant solution we craft, every test we make pass, every problem we solve through pure logic and creativity. It’s not just work, not just a craft - it’s who we are.\n让我们坦诚地面对这里的利害关系。我们中的许多人不仅仅是编写代码——我们热爱编写代码。我们的身份融入了我们制定的每一个优雅的解决方案、我们通过的每一个测试、我们通过纯粹的逻辑和创造力解决的每一个问题。这不仅仅是工作，不仅仅是一门手艺——这是我们的身份。\nThink about those moments of deep satisfaction: when you finally track down that elusive bug that’s been haunting production, when you work out how to optimise that slow algorithm and watch response times drop from seconds to milliseconds, when you transform a maze of legacy code into something clean and maintainable. These aren’t just achievements - they’re expressions of who we are as engineers. They’re the moments that remind us why we chose this path.\n想想那些让你深感满足的时刻：当你终于找到了困扰生产过程的那个难以捉摸的错误时，当你想出如何优化那个缓慢的算法并看到响应时间从几秒缩短到几毫秒时，当你将一堆遗留代码改造成干净且可维护的代码时。这些不仅仅是成就，它们还表达了我们作为工程师的本色。这些时刻提醒着我们为什么选择这条道路。\nNow imagine AI taking over these moments of craftsmanship. The creators of these tools paint an optimistic picture - they say we’ll spend more time on defining intent, high-level architecture, and systems thinking. But listen carefully to what they’re really saying: we’ll become overseers rather than creators, managers rather than builders.\n现在想象一下人工智能接管这些工艺时刻。这些工具的创造者描绘了一幅乐观的图景——他们说我们将花更多时间定义意图 、 高级架构和**系统思维 **。但仔细听听他们真正想说的是：我们将成为监督者而不是创造者，管理者而不是建设者。\nAre software engineers evolving into system thinkers and high-level architects?软件工程师是否正在进化成为系统思考者和高级架构师？\nThis shift raises important questions about our identity as builders: Is oversight what drives us? Is it what makes us leap out of bed in the morning, eager to solve the next puzzle?\n这种转变引发了关于我们作为建设者身份的重要问题：监督是我们的驱动力吗？监督是促使我们每天早上从床上跳起来，渴望解决下一个难题的原因吗？\nThe Identity Shift: It’s Already Here 身份转变：已经到来\nThis isn’t some theoretical future we’re debating - it’s the reality we’re living right now. When Google recently revealed that AI generates more than a quarter of their new code, it was just the beginning. Y Combinator CEO Garry Tan reveals that for about a quarter of their startups, 95% of their code is now written by AI - marking a truly significant shift. My own Master’s research revealed a similar picture: 77% of us are spending less time writing code, and almost half believe our core skill might become secondary to prompt engineering. Think about that transition: from crafting solutions to crafting prompts.\n这不是我们正在讨论的理论未来——而是我们现在所处的现实。当谷歌最近透露人工智能生成了他们四分之一以上的新代码时，这只是一个开始。Y Combinator 首席执行官 Garry Tan 透露，对于他们大约四分之一的初创公司来说， 95% 的代码现在都是由人工智能编写的——这标志着一个真正重大的转变。我自己的硕士研究也揭示了类似的情况：77% 的人花在编写代码上的时间越来越少，几乎一半的人认为我们的核心技能可能会成为提示工程的次要技能。想想这种转变：从制定解决方案到制定提示。\nWill Prompt Engineering Replace Traditional Coding Skills?\n快速工程会取代传统的编码技能吗？\nWhen asked how to develop prompt engineering skills, software engineers emphasise refining communication skills. Getting an AI to do what you want means being able to articulate things well - providing just the right amount of context along with a clear description of the task. The better you can communicate with Gen AI, the more likely the output will match your expectations. Some even suggest being polite to these tools, treating them like team members - as if you’re leading another human being to do something for you.\n当被问及如何培养敏捷的工程技能时，软件工程师强调提高沟通技巧。让人工智能做你想做的事意味着能够很好地表达事情——提供适量的背景以及对任务的清晰描述。你与 Gen AI 的沟通越好，输出就越有可能符合你的期望。有些人甚至建议对这些工具要*有礼貌 *，像对待团队成员一样对待它们——就好像你在领导另一个人为你做某事一样。\nThe changes run so deep that we’re inventing new terms just to describe who we’re becoming. Take vibe coding, a term that Andrej Karpathy recently coined in a tweet. It captures a profound shift in how we write software.\n这些变化是如此深刻，以至于我们发明了新的术语来描述我们正在变成什么样子。以**氛围编码为例 **，这是 Andrej Karpathy 最近在一条推文中创造的一个术语。它捕捉到了我们编写软件方式的深刻转变。\nAt one end of the spectrum lies the traditional way - the craftsperson’s way. We write each line with intent, every function name and architectural decision reflecting our deep understanding of the system.\n一方面是传统方式，即工匠方式。我们用心编写每一行代码，每个函数名称和架构决策都反映了我们对系统的深刻理解。\nAt the other end? We let AI fill in the blanks, “vibing” with its suggestions. We focus on the what, not the how. As Karpathy puts it: “fully give in to the vibes, embrace exponentials, and forget that the code even exists.”\n而另一端呢？我们让人工智能填补空白，用它的建议“激发灵感”。我们关注的是做什么，而不是怎么做。正如 Karpathy 所说： “完全听从灵感，拥抱指数，甚至忘记代码的存在。”\nThat last part gives us pause - are we still engineers if we forget all about the code?\n最后一部分让我们停下来思考——如果我们忘记了所有的代码，我们还是工程师吗？\nIn a recent pairing session, engineering thought leaders Gene Kim and Steve Yegge demonstrated what this looks like in practice. Using an AI coding assistant, they ported a 3,500-line legacy Ruby script to Kotlin - a task that would normally take a week - in just one hour. The AI didn’t just translate the code; it improved it, adding the modular architecture and unit tests they’d wanted for years but couldn’t justify the time for.\n在最近的一次配对会议上，工程思想领袖 Gene Kim 和 Steve Yegge 展示了这在实践中是什么样子。使用人工智能编码助手，他们仅用一小时就将 3,500 行的旧版 Ruby 脚本移植到 Kotlin - 这项任务通常需要一周时间。人工智能不仅仅是翻译代码；它改进了代码，添加了他们多年来一直想要但又无法证明时间合理的模块化架构和单元测试。\nEven Patrick Debois, the godfather of DevOps, sees this transformation reshaping our identity. In his recent analysis of AI Native Development patterns, he outlines four fundamental shifts in how we work:\n甚至 DevOps 教父 Patrick Debois 也认为这种转变正在重塑我们的身份。在他最近对 AI 原生开发模式的分析中，他概述了我们工作方式的四个根本转变：\nPatrick Debois: The 4 Patterns of AI Native DevPatrick Debois：AI 原生开发的四种模式\nThese patterns reveal a profound shift: we’re moving from producers to managers of AI systems, from detailed implementation to expressing intent, from delivery to discovery through rapid experimentation, and from content creation to knowledge curation. Our role is evolving to blend creation with orchestration, building with oversight.\n这些模式揭示了一个深刻的转变：我们正在从人工智能系统的生产者转变为管理者，从详细实施转变为表达意图，从交付转变为通过快速实验进行发现，从内容创造转变为知识管理。我们的角色正在演变，将创造与协调、建设与监督融为一体。\nOverall, I think it’s fair to say that the nature of our professional identity is changing at its core.\n总的来说，我认为可以公平地说，我们的职业身份的本质正在发生改变。\nThe Craft That Shaped Our Identity 塑造我们身份的手艺\nTo understand this identity crisis, we need to look at how deeply the craft of coding has shaped who we are. At its core, writing code is about mastery and control - skills we’ve spent years perfecting. Modern programming languages are much higher-level than those of days gone by, but they still require deep technical understanding. Few developers today deal with the nitty-gritty of pointers and memory management, yet we still take pride in knowing how things work under the hood. Even as frameworks do more heavy lifting, we’ve maintained our identity as artisans who understand our tools intimately.\n要理解这种身份危机，我们需要看看编码技术对我们产生了多大的影响。从本质上讲，编写代码是一种精通和控制的能力，这是我们花费多年时间完善的技能。现代编程语言比过去的编程语言高级得多，但它们仍然需要深入的技术理解。如今很少有开发人员处理指针和内存管理的细节，但我们仍然为了解底层工作原理而感到自豪。即使框架承担了更多繁重的工作，我们仍然保持着对工具了如指掌的工匠身份。\nProgramming today is much more about stitching together APIs, frameworks, and libraries in creative ways to build something meaningful. In fact, recent research at Google suggests that creativity in software engineering centres on the concept of clever reuse over pure novelty. This makes sense to me - I’ve often commented that we’re all just ‘integration’ engineers nowadays, really.\n如今，编程更多的是创造性地将 API、框架和库拼接在一起，以构建有意义的东西。事实上，谷歌最近的研究表明，软件工程的创造力集中在巧妙重用的概念上，而不是纯粹的新颖性。这对我来说很有道理——我经常说，如今我们都只是“集成”工程师。\nStill, there’s a strange pride that we take in knowing all the weird syntax required to build something. It’s like a secret language that only we understand. Becoming proficient with a programming language gives you a lot of control to make it do precisely what you want it to do. It’s so detailed - just one wrong character will break the entire thing and it can take a lot of time and patience to make it do what you want.\n尽管如此，我们仍然对了解构建某些东西所需的所有奇怪语法感到自豪。这就像一种只有我们才能理解的秘密语言。精通一门编程语言可以让你拥有很大的控制权，让它准确地做你想让它做的事情。它非常详细——只要一个错误的字符就会破坏整个东西，让它做你想做的事可能需要大量的时间和耐心。\nFirst, one must perform perfectly. The computer resembles the magic of legend in this respect, too. If one character, one pause, of the incantation is not strictly in proper form, the magic doesn’t work.\n首先，必须完美地表演。在这方面，计算机也与传说中的魔术相似。如果咒语中的一个字符、一个停顿不严格按照正确的形式，魔术就不起作用。\n— Frederick P. Brooks, The Mythical Man-Month, Chapter 1, Addison-Wesley, 1975— Frederick P. Brooks，《人月神话》第 1 章，Addison-Wesley，1975 年\nThe other 99% of the population thinks we’re magicians for understanding code and indeed, it can take years of deliberate practice to master it. Those who master more than one programming language have the privilege of being referred to as polyglots. Many of us take great pride in writing clean, elegant code. We passionately argue over different styles and best practices, often taking it all too seriously.\n其余 99% 的人认为我们是理解代码的魔术师，而事实上，掌握代码需要多年的刻意练习。掌握多种编程语言的人被称为*多语言者 *。我们中的许多人都以编写干净、优雅的代码为荣。我们热烈地争论不同的风格和最佳实践，往往过于认真。\nA Reluctant Manager’s Tale 一位不情愿的经理的故事\nLet me share a story about identity evolution that might resonate.\n让我分享一个可能引起共鸣的有关身份演变的故事。\nAfter a decade of being an individual contributor, I hit the infamous ceiling of the technical track. Senior Lead Software Engineer - that was as far as the technical track went. Staff+ Engineering wasn’t a thing yet, and the sole Architecture position at the company I was working for was filled. I faced a choice that would change who I was: stay a builder or become an overseer.\n在担任个人贡献者十年之后，我到达了技术轨道的臭名昭著的天花板。* 高级首席软件工程师 *——这是技术轨道所能达到的最高境界。员工+工程还不存在，我所在公司唯一的架构师职位已经有人了。我面临着一个将改变我的选择：继续做建设者还是成为监督者。\nI chose management. Reluctantly. That’s where the path led me. I told myself it was still engineering, just at a different level. That managing systems wasn’t so different from managing people. That I could still keep my hands in the code in between other tasks.\n我选择了管理。很不情愿。这条路引领我走向了那里。我告诉自己这仍然是工程，只是层次不同。管理系统与管理人没有太大区别。我可以在完成其他任务的间隙继续写代码。\nSound familiar? The parallels are uncanny. Just as I had to trade direct problem-solving for meetings and documentation, we’re now being asked to trade coding for prompt engineering. The skills that defined us as engineers - mastering syntax, architecting our code elegantly, catching and handling the edge cases, debugging complex issues - are being relegated to AI. Instead, we’re told to focus on skills that sound suspiciously like management: clear communication, systems thinking, problem definition.\n听起来很熟悉？两者的相似之处令人难以置信。就像我不得不用会议和文档来取代直接解决问题一样，我们现在被要求用快速工程来取代编码。定义我们为工程师的技能——掌握语法、优雅地构建代码、捕捉和处理边缘情况、调试复杂问题——正在被人工智能取代。相反，我们被告知要专注于听起来像管理的技能：清晰的沟通、系统思维、问题定义。\nBut here’s what no one’s talking about: the identity crisis. That deep sense of loss when you realise you’re no longer building things with your own hands. When your technical mastery becomes less relevant than your ability to “manage” the tools. When your craft becomes oversight.\n但没有人谈论的是身份危机。当你意识到自己不再用自己的双手创造东西时，你会感到深深的失落。当你的技术掌握变得不如你“管理”工具的能力重要时。当你的手艺变得被忽视时。\nCan orchestrating AI ever give us that same sense of identity? Of being a builder, a creator, a problem solver?\n人工智能能给我们同样的身份认同感吗？让我们成为一个建设者、创造者、问题解决者？\nWhen Machines Challenge Our Identity 当机器挑战我们的身份时\nBy now the source of our identity crisis becomes clear. The craft we spent years perfecting - the one that gave us purpose, meaning, and pride - is now being done faster, cheaper, and at scale by a machine. Sure, the quality isn’t as good as your hand-written code (yet). But the speed at which code can now be written is staggering and businesses are tripping over themselves to get in on the action.\n现在，我们身份危机的根源已经清晰起来。我们花费数年时间完善的技能——赋予我们目标、意义和自豪感的技能——现在由机器以更快、更便宜、更大规模地完成。当然，质量不如手写代码（目前如此）。但现在编写代码的速度令人震惊，企业正争先恐后地加入这一行列。\nThis is where a glimmer of hope emerges. Remember that irony - how we gave away the broader aspects of our craft to specialists? AI is pushing us to reclaim what we once knew: that software engineering transcends mere coding. That core truth remains - ultimately, software engineering is about solving problems, creating solutions, building things that matter.\n这就是一线希望出现的地方。还记得那个讽刺吗——我们如何将我们手艺的更广泛方面拱手让给了专家？人工智能正在推动我们重新认识我们曾经知道的东西：软件工程超越了单纯的编码。这个核心真理仍然存在——最终，软件工程是关于解决问题、创造解决方案、构建重要的东西。\nThese broader skills - what Addy Osmani calls “durable engineering skills” in his article on the human 30% of AI-assisted coding - have always separated great engineers from good ones. Communication, big-picture thinking, handling ambiguity - these become even more crucial in an AI-driven world.\n这些更广泛的技能——Addy Osmani 在其关于人工智能辅助编码的 30% 人类能力的文章中称之为“持久的工程技能”——始终将优秀工程师与普通工程师区分开来。沟通、全局思维、处理歧义——这些在人工智能驱动的世界中变得更加重要。\nYet this emphasis on broader skills has sparked debate in our community. For some, it sounds suspiciously like management repackaged. And they’re not entirely wrong - a recent CIO article confirms that development teams are already being restructured to focus on oversight rather than creation. The article envisions future teams consisting of a product manager, a UX designer, and a software architect who primarily uses AI to generate prototypes. These architects, or senior developers, must “understand the content… who the customer is and what we’re trying to achieve” - classic management responsibilities repackaged as technical work.\n然而，这种对更广泛技能的强调在我们的社区引发了争论。对一些人来说，这听起来像是重新包装的管理。他们并没有完全错——最近的一篇 CIO 文章证实，开发团队已经在进行重组，以专注于监督而不是创造。文章设想未来的团队将由一名产品经理、一名 UX 设计师和一名主要使用 AI 生成原型的软件架构师组成。这些架构师或高级开发人员必须“了解内容……客户是谁以及我们想要实现什么”——经典的管理职责被重新包装为技术工作。\n​ Management in a Cloak\n披着斗篷的管理\nThis evolution raises fundamental questions about our identity as engineers: As the traditional career ladder transforms, how will the next generation of software engineers develop their skills? How do we preserve the deep technical understanding and craftsmanship that shaped our profession while embracing these new tools? And perhaps most unsettling - as AI capabilities advance exponentially, will our role as craftspeople become as obsolete as the manual weaver’s did during the Industrial Revolution?\n这种演变引发了有关我们工程师身份的基本问题：随着传统职业阶梯的转变，下一代软件工程师将如何发展他们的技能？在拥抱这些新工具的同时，我们如何保持塑造我们职业的深刻技术理解和工艺？也许最令人不安的是——随着人工智能能力的飞速发展，我们作为工匠的角色是否会像工业革命期间的手工织布工一样变得过时？\nThe Path Forward 前进的道路\nPerhaps the answer lies not in resisting this transformation, but in understanding it through the lens of history. These identity crises - these fundamental shifts in how we define ourselves through our work - aren’t new. They’re part of a pattern that repeats whenever technology reshapes a profession.\n也许答案不在于抵制这种转变，而在于通过历史的视角来理解它。这些身份危机——我们如何通过工作来定义自己的根本转变——并不是什么新鲜事。它们是每当技术重塑一个职业时都会重复出现的模式的一部分。\nDuring the Industrial Revolution, craftspeople faced a similar crisis. Their traditional skills - honed over generations - were being replaced by machines. But what happened next is fascinating: many adapted, becoming specialist professionals who could fix and improve these same machines that threatened to replace them. Others found ways to apply their deep understanding of materials and processes to improve overall factory operations.\n在工业革命期间，手工艺人也面临类似的危机。他们历经几代人磨练的传统技能正在被机器取代。但接下来发生的事情令人着迷：许多人适应了这种变化，成为能够修理和改进这些威胁要取代他们的机器的专业人士。其他人则找到了方法，运用他们对材料和工艺的深刻理解来改善整个工厂的运营。\nIf we draw this parallel to our AI era, a similar path emerges. The core of software engineering - solving problems and creating value - remains unchanged. Our tools are evolving, and with them, the skills needed to wield them effectively.\n如果我们将这与人工智能时代进行比较，就会出现类似的道路。软件工程的核心——解决问题和创造价值——保持不变。我们的工具在不断发展，有效运用这些工具所需的技能也在不断发展。\nThe question isn’t whether we’ll become managers of machines - it’s whether we can find the same satisfaction in this evolution of our craft.\n问题不在于我们是否会成为机器的管理者，而在于我们是否能在我们工艺的进化中找到同样的满足感。\nThe Engineer’s Dilemma 工程师的困境\nSo where does this leave us? Are we all destined to become overseers of AI agents rather than writers of code? Is this a future to resist or embrace?\n那么，这给我们带来了什么？我们注定要成为人工智能代理的监督者，而不是代码编写者吗？这是一个值得抵制还是值得拥抱的未来？\nThe truth, as always, is nuanced. Just as some engineers naturally gravitate toward management while others prefer to remain hands-on, we’ll likely see a similar spectrum emerge in how we interact with AI. Some will excel at orchestrating AI systems, focusing on high-level design and making these systems more efficient and reliable - conducting a technical symphony rather than performing solo. Others will find their calling in domains where human expertise remains crucial - perhaps in security-sensitive applications, novel areas where AI lacks training data, or systems where performance and reliability are paramount. The key isn’t to resist this evolution, but to find our place within it.\n事实总是微妙的。正如一些工程师天生倾向于管理，而另一些工程师则喜欢亲自动手，我们很可能会看到我们与人工智能互动的方式也呈现出类似的趋势。有些人擅长协调人工智能系统，专注于高级设计，使这些系统更高效、更可靠——指挥一场技术交响乐，而不是独奏。其他人会在人类专业知识仍然至关重要的领域找到自己的使命——也许是在安全敏感的应用程序、人工智能缺乏训练数据的新领域，或者性能和可靠性至关重要的系统。关键不是抵制这种演变，而是在其中找到自己的位置。\nWhat’s clear is that the definition of “software engineer” is expanding, not contracting. The skills that make someone valuable are diversifying. And this creates both challenges and opportunities.\n显而易见的是，“软件工程师”的定义正在扩大，而不是缩小。使一个人有价值的技能正在多样化。这既带来了挑战，也带来了机遇。\nFor those who love the craft of coding, this shift can feel threatening. But remember that AI tools are still just that - tools. They don’t understand the “why” behind the code, the business context, or the human needs being served. They can’t innovate in the true sense of the word, at least not yet. And as far as we know, they can’t feel the satisfaction of solving a complex problem or the joy of creating something new.\n对于那些热爱编程的人来说，这种转变可能令人感到恐惧。但请记住，人工智能工具仍然只是工具。它们不理解代码背后的“原因”、业务背景或所满足的人类需求。它们无法真正意义上进行创新，至少目前还不能。据我们所知，它们无法感受到解决复杂问题的满足感或创造新事物的乐趣。\nPerhaps the most valuable skill in this new landscape isn’t prompt engineering or systems architecture, but adaptability - the willingness to evolve, to learn new skills, and to find your unique place in a rapidly changing field.\n也许在这个新领域中最有价值的技能不是快速的工程或系统架构，而是**适应性 **——愿意发展、学习新技能并在快速变化的领域找到自己独特的位置。\nDespite these challenges, there’s something important we need to acknowledge: these AI tools can be incredibly empowering. With agentic IDEs like Windsurf and Cursor taking software development to a whole new level, it’s like having a supportive pair-programming partner who’s always there, ready to help you tackle problems that might have seemed daunting before.\n尽管存在这些挑战，但我们需要承认一件重要的事情：这些 AI 工具可以发挥令人难以置信的作用。借助 Windsurf 和 Cursor 等代理 IDE，软件开发将提升到一个全新的水平，就像拥有一个始终陪伴着你的支持性结对编程伙伴，随时准备帮助你解决以前看似艰巨的问题。\nFor junior developers or those of us who might feel a bit rusty, AI assistants can be a confidence booster - helping you get started when you’re staring at a blank file, validating your approach when you’re unsure, or explaining complex concepts in a way that makes sense to you. For experienced developers, they’re like having a tireless assistant who can handle the routine tasks while you focus on the more challenging aspects of the problem.\n对于初级开发人员或那些可能感觉有些生疏的人来说，AI 助手可以增强信心 - 在您盯着空白文件时帮助您入门，在您不确定时验证您的方法，或以对您有意义的方式解释复杂的概念。对于经验丰富的开发人员来说，它们就像拥有一个不知疲倦的助手，可以处理日常任务，而您则专注于问题中更具挑战性的方面。\nThe speed at which we can now prototype ideas, explore different approaches, and learn new technologies is truly remarkable. What might have taken weeks of research and trial-and-error can often be accomplished in hours or even minutes. It’s like having a superpower - the ability to amplify our capabilities and turn our ideas into reality faster than ever before.\n我们现在可以快速地将创意原型化、探索不同的方法并学习新技术，这确实令人惊叹。原本需要数周的研究和反复试验才能完成的工作，现在通常只需数小时甚至数分钟即可完成。这就像拥有超能力一样——能够增强我们的能力，并以前所未有的速度将我们的想法变成现实。\nThe Reality Check 现实检验\nBut with great power comes great responsibility. A recent comprehensive GitClear study analysing 211 million lines of code revealed some concerning trends as AI code generation tools became more prevalent:\n但能力越大，责任越大。最近， GitClear 进行了一项全面的研究， 分析了 2.11 亿行代码，揭示了一些令人担忧的趋势，因为 AI 代码生成工具变得越来越流行：\nA 17.1% increase in copy-pasted code, marking the first time AI-assisted code duplication surpassed refactored (moved) code.\n复制粘贴代码增加了 17.1％，这是 AI 辅助代码复制首次超过重构（移动）代码。 An 8-fold rise in duplicated code blocks, with 6.66% of commits now containing repeated code sections.\n重复代码块增加了 8 倍，现在 6.66% 的提交包含重复的代码部分。 A 26% increase in code churn, with 5.7% of all code changes being revised or deleted within two weeks.\n代码流失率增加了26%，所有代码更改中有5.7%在两周内被修改或删除。 GitClear: Trends in Code ChangesGitClear：代码变化趋势\nWhile we’re producing code faster than ever, we’re also spending more time fixing AI-generated mistakes and dealing with code that’s harder to maintain. This isn’t just about speed - it’s about the craft of writing sustainable, maintainable software.\n虽然我们编写代码的速度比以往任何时候都快，但我们也花费了更多时间来修复 AI 产生的错误并处理更难维护的代码。这不仅关乎速度，还关乎编写可持续、可维护软件的技巧。\nYet beneath these surface-level changes lies a deeper challenge - one that strikes at the heart of who we are as engineers. The emerging field of Human-AI teaming is revealing uncomfortable truths about our future. A 2024 study shows that when humans and AI work together, the results often fall short of expectations. Not because AI lacks capability, but because trust works differently with machines than with humans.\n然而，在这些表面变化之下，存在着更深层次的挑战——它触及了我们作为工程师的核心。人机协作这一新兴领域正在揭示我们未来的令人不安的真相。2024年的一项研究表明，当人类和人工智能合作时，结果往往达不到预期。这并不是因为人工智能缺乏能力，而是因为信任对机器的作用方式与对人类的作用方式不同。\nWe don’t build trust with AI the way we do with human teammates.\n我们与人工智能建立信任的方式并不像与人类队友建立信任的方式那样。\nWith humans, trust grows gradually, through shared success. Each problem solved together strengthens the bond. Even failures can deepen trust when handled well. With AI, trust often starts high and erodes fast.\n对于人类来说，信任是通过共同的成功逐渐建立起来的。共同解决的每一个问题都会加强彼此之间的联系。如果处理得当，即使是失败也能加深信任。而对于人工智能来说，信任往往一开始很高，然后迅速消退。\nEvery incorrect response, every hallucinated bug fix, every misplaced confidence weakens our faith in the machine. Unlike human relationships where trust typically grows over time, AI trust often peaks early and declines.\n每一次错误的回答、每一次幻觉般的错误修复、每一次错误的信心都会削弱我们对机器的信任。与人际关系不同，信任通常会随着时间的推移而增长，而人工智能的信任通常会在早期达到顶峰，然后逐渐下降。\nAnd when trust erodes, so does productivity.\n当信任度降低时，生产力也会下降。\nThe research reveals why:\n研究揭示了原因：\nThere’s an inherent unpredictability in how AI interprets our intentions\n人工智能如何解读我们的意图存在着内在的不可预测性 It lacks the contextual awareness that makes human collaboration fluid\n它缺乏使人类协作流畅的情境意识 Its decisions often lack transparency, making it hard to rebuild trust once lost\n其决策往往缺乏透明度，一旦失去信任就很难重建 These challenges mirror what many of us experience when transitioning into technical leadership. Just as new engineering managers must learn to trust their team’s work without doing it themselves, we now face a similar transition with AI - learning to guide and verify rather than write every line ourselves.\n这些挑战反映了我们许多人在转型为技术领导时所经历的情况。正如新任工程经理必须学会信任团队的工作，而不必亲自动手一样，我们现在在人工智能方面也面临着类似的转变——学会指导和验证，而不是亲自动手写每一行代码。\nThe reality is stark: despite AI’s raw capabilities, teams often perform worse with AI than without it. Just as a team’s productivity suffers under ineffective leadership, our effectiveness diminishes when we don’t understand how to work with our AI tools.\n现实情况是严峻的：尽管人工智能具有原始能力，但使用人工智能的团队往往比不使用人工智能的团队表现更差。正如团队的生产力在领导不力的情况下受到影响一样，如果我们不了解如何使用人工智能工具，我们的效率也会降低。\nReclaiming Your Identity 恢复你的身份\nDrawing from both my journey as a reluctant manager and my research into this AI transformation, I see three ways we might preserve our identity as builders:\n从我作为一名不情愿的管理者的经历和我对人工智能转型的研究来看，我们发现了三种可能的方式来保持我们作为建设者的身份：\nResist - Some will choose to focus on domains where human creativity and deep technical expertise remain essential\n**抵制 **——有些人会选择专注于人类创造力和深厚技术专长仍然至关重要的领域 Adapt - Others will embrace AI orchestration, becoming conductors of a new kind of technical symphony\n**适应 **——其他人将接受人工智能编排，成为新型技术交响乐的指挥家 Balance - And many, like myself, will seek a middle path - using AI for routine tasks while preserving the joy of direct problem-solving\n**平衡 **——很多人，比如我自己，会寻求一条中间道路——使用人工智能完成日常任务，同时保留直接解决问题的乐趣 Then I had a realisation that changed my perspective: We don’t have to choose just one path.\n后来我意识到了这一点，并改变了我的观点：* 我们不必只选择一条道路 *。\nThe Identity Pendulum 身份钟摆\nPerhaps the answer to our identity crisis lies in the Engineer/Manager pendulum. My own journey between these roles taught me something crucial about identity:\n也许，我们身份危机的答案就在于工程师/经理的摇摆。我自己在这些角色之间的经历教会了我一些关于身份的重要知识：\nManagement didn’t replace my engineering identity - it expanded it\n管理并没有取代我的工程师身份——它扩展了我的工程师身份 Returns to hands-on work weren’t steps backward - they were identity renewals\n重返实际工作并不是倒退，而是身份的更新 The pendulum swing itself became part of who I am - adaptable, growing, evolving\n钟摆摆动本身已成为我的一部分——适应性强、成长性强、进化性强 And that’s when it hit me: This is exactly the model we need for the AI age.\n就在那时我突然意识到：* 这正是我们人工智能时代所需要的模型 *。\nInstead of being forced into permanent “AI managers,” what if we could swing between:\n如果我们不必被迫成为永久的“人工智能经理”，而是可以在以下两者之间自由选择：\nDeep technical work where we write and refine code directly\n深入的技术工作，我们直接编写和完善代码 Strategic orchestration where we guide AI systems\n我们引导人工智能系统的战略协调 Creative problem-solving that combines both approaches\n结合两种方法的创造性解决问题 This balanced approach resonates deeply with what I’m hearing from fellow engineers. My research shows a clear message: maintaining strong engineering fundamentals is more crucial than ever. We need deep technical knowledge to effectively review, verify, and adjust AI-generated code - because it’s often not quite right. When asked about their concerns with AI coding assistants, software engineers ranked code quality and security well above job security.\n这种平衡的方法与我从其他工程师那里听到的深有共鸣。我的研究表明了一个明确的信息：保持强大的工程基础比以往任何时候都更加重要。我们需要深厚的技术知识来有效地审查、验证和调整人工智能生成的代码——因为它往往不太正确。当被问及他们对人工智能编码助手的担忧时，软件工程师将代码质量和安全性排在了工作安全性之上。\nTop Concerns About AI Coding Assistants Among Software Engineers\n软件工程师对人工智能编码助手的最大担忧\nThat tells me something profound: we see ourselves as guardians of engineering excellence, ensuring that AI-generated solutions adhere to solid software engineering principles. We’re not looking to delegate our expertise to AI - we’re evolving to apply our craft in new ways.\n这给了我深刻的启示：我们将自己视为工程卓越的守护者，确保人工智能生成的解决方案遵循可靠的软件工程原则。我们并不打算将我们的专业知识委托给人工智能——我们正在不断发展，以新的方式应用我们的技术。\nYour Move 你的举动\nAs we navigate this transformation, a fundamental truth emerges: our identity crisis isn’t really about AI at all. The research into Human-AI teaming, the parallels with management transitions, the pendulum of roles - they all point to something deeper. Beyond choosing between builder or overseer lies the heart of who we are: creators.\n在我们探索这一转变的过程中，一个基本事实浮现出来：我们的身份危机其实与人工智能无关。对人机协作的研究、与管理转型的相似之处、角色的摇摆——它们都指向更深层次的东西。除了在建设者或监督者之间做出选择之外，我们的核心身份是：创造者。\nAnd now we come full circle: AI isn’t taking our jobs; it’s giving us a chance to reclaim those broader aspects of our role that we gave away to specialists. To return to a time when software engineering meant more than just writing code. When it meant understanding the whole problem space, from user needs to business impact, from system design to operational excellence.\n现在我们回到原点：人工智能并没有抢走我们的工作；它让我们有机会重新获得我们角色中那些我们曾交给专家的更广泛的方面。回到软件工程不仅仅意味着编写代码的时代。它意味着理解整个问题空间，从用户需求到业务影响，从系统设计到卓越运营。\nThe pendulum metaphor offers us wisdom here. Just as many of us have swung between engineering and management roles, we can embrace a similar fluidity with AI. Some periods we’ll dive deep into the code, experiencing that thrill of crafting elegant solutions. Other times we’ll step back to guide AI systems - not as overseers, but as master builders who understand every part of their craft. Like the Industrial Revolution’s workers who became experts at optimising the machines that transformed their craft, we can master these AI systems - making them instruments of our creativity, not replacements for it.\n钟摆的比喻给了我们智慧。正如我们许多人在工程师和管理角色之间摇摆不定一样，我们也可以接受人工智能的类似流动性。有时我们会深入研究代码，体验制作优雅解决方案的快感。其他时候，我们会退后一步来指导人工智能系统——不是作为监督者，而是作为了解其工艺每一部分的大师级建造者。就像工业革命时期的工人成为优化机器以改变其工艺的专家一样，我们可以掌握这些人工智能系统——使它们成为我们创造力的工具，而不是它的替代品。\nIn the AI era, what matters most is preserving the essence of who we are: that pure joy of building things, of solving hard problems, of making something work exactly right. Our engineering excellence runs deeper than just verifying AI’s work - it flows from knowing systems so intimately that we can shape them, improve them, transform them.\n在人工智能时代，最重要的是保持我们的本质：创造事物、解决难题、让某件事物完美运转的纯粹乐趣。我们的工程卓越性不仅仅在于验证人工智能的工作 - 它源于我们对系统的深入了解，以至于我们可以塑造、改进和改造它们。\nThe choice isn’t whether AI will change our industry - it already is. The real choice is how we evolve with it. Will we cling to an outdated sense of what it means to be an engineer? Or will we reclaim our craft, not as mere coders, but as master builders of AI-augmented systems?\n选择不在于人工智能是否会改变我们的行业——它已经改变了。真正的选择是我们如何与它一起发展。我们会坚持过时的工程师观念吗？还是我们会重新掌握我们的手艺，不再只是程序员，而是人工智能增强系统的大师级建造者？\nThe pendulum is swinging - will you hold your ground, or move with it?\n钟摆在摆动——你会坚守立场，还是随之移动？\n","date":"2025-03-24","permalink":"https://22cs.github.io/post/untitled-z1tger6.html","title":"The Software Engineering Identity Crisis"},{"content":"If 2022 was the year that generative AI captured a wider public’s imagination, 2025 is the year where the new breed of generative video frameworks coming from China seems set to do the same.\n如果说 2022 年是生成式人工智能吸引更广泛公众想象力的一年，那么 2025 年似乎将是来自中国的新一代生成视频框架也将产生同样效果的一年。\nTencent’s Hunyuan Video has made a major impact on the hobbyist AI community with its open-source release of a full-world video diffusion model that users can tailor to their needs.\n腾讯混元视频开源发布全世界视频传播模型，用户可以根据自身需求进行定制，对业余人工智能社区产生了重大影响。\nClose on its heels is Alibaba’s more recent Wan 2.1, one of the most powerful image-to-video FOSS solutions of this period – now supporting customization through Wan LoRAs.\n紧随其后的是阿里巴巴最新推出的Wan 2.1 ，这是本时期最强大的图像到视频 FOSS 解决方案之一 - 现在支持通过Wan LoRA进行定制。\nBesides the availability of recent human-centric foundation model SkyReels, at the time of writing we also await the release of Alibaba’s comprehensive VACE video creation and editing suite:\n除了最近推出的以人为本的基础模型SkyReels之外，在撰写本文时，我们还在等待阿里巴巴全面的VACE视频创建和编辑套件的发布：\nhttps://www.unite.ai/wp-content/uploads/2025/03/VACE_edit2_20250313_104839_noaudio.mp4\n******Click to play. ****The pending release of Alibaba’s multi-function AI-editing suite VACE has excited the user community. **Source: https://ali-vilab.github.io/VACE-Page/\n******点击播放。**​阿里巴巴即将发布的多功能人工智能编辑套件 VACE 让用户社区兴奋不已。 来源：https://ali-vilab.github.io/VACE-Page/\n**Sudden Impact 突如其来的冲击**\nThe generative video AI research scene itself is no less explosive; it’s still the first half of March, and Tuesday’s submissions to Arxiv’s Computer Vision section (a hub for generative AI papers) came to nearly 350 entries – a figure more associated with the height of conference season.\n生成视频 AI 研究领域本身也同样具有爆炸性。现在还是三月上半月，周二提交给 Arxiv 计算机视觉部分（生成 AI 论文的中心）的论文数量已接近 350 篇 —— 这个数字与会议季的高峰期更为相关。\nThe two years since the launch of Stable Diffusion in summer of 2022 (and the subsequent development of Dreambooth and LoRA customization methods) have been characterized by the lack of further major developments, until the last few weeks, where new releases and innovations have proceeded at such a breakneck pace that it is almost impossible to keep apprised of it all, much less cover it all.\n自 2022 年夏季推出Stable Diffusion（以及随后开发Dreambooth和LoRA定制方法）以来的两年里，一直没有进一步的重大发展，直到最近几周，新版本和创新才以如此惊人的速度进行，几乎不可能随时了解所有内容，更不用说涵盖所有内容了。\nVideo diffusion models such as Hunyuan and Wan 2.1 have solved, at long last, and after years of failed efforts from hundreds of research initiatives, the problem of temporal consistency as it relates to the generation of humans, and largely also to environments and objects.\n经过数百项研究计划多年的失败努力，浑元和万 2.1 等视频传播模型终于解决了与人类生成以及很大程度上与环境和物体相关的时间一致性​问题。\nThere can be little doubt that VFX studios are currently applying staff and resources to adapting the new Chinese video models to solve immediate challenges such as face-swapping, despite the current lack of ControlNet-style ancillary mechanisms for these systems.\n毫无疑问，尽管目前这些系统缺乏ControlNet式的辅助机制，但视觉特效工作室目前正在投入人员和资源来适应新的中国视频模型，以解决诸如换脸等眼前挑战。\nIt must be such a relief that one such significant obstacle has potentially been overcome, albeit not through the avenues anticipated.\n尽管并非通过预期的途径，但如此重大的障碍有可能被克服，这一定令人感到欣慰。\nOf the problems that remain, this one, however, is not insignificant:\n然而，在仍然存在的问题中，有这个问题并不小：\nhttps://www.unite.ai/wp-content/uploads/2025/03/0-Wan2.1-rock-uphill.mp4\nClick to play. **Based on the prompt ‘A small rock tumbles down a steep, rocky hillside, displacing soil and small stones ‘, Wan 2.1, which achieved the very highest scores in the new paper, makes one simple error. Source: https://videophy2.github.io/​点击播放。**********​根据提示“一块小石头从陡峭的岩石山坡上滚落，将土壤和小石头移位”，在新论文中取得最高分的 Wan 2.1 犯了一个简单的错误。 来源：https://videophy2.github.io/\n**Up The Hill Backwards 倒着上山**\nAll text-to-video and image-to-video systems currently available, including commercial closed-source models, have a tendency to produce physics bloopers such as the one above, where the video shows a rock rolling uphill, based on the prompt ‘A small rock tumbles down a steep, rocky hillside, displacing soil and small stones ‘.目前所有可用的文本转视频和图像转视频系统，包括商业闭源模型，都有可能产生类似上述物理失误，视频显示一块石头滚​上山，其依据的是提示“一块小石头从陡峭的岩石山坡上滚落，移开了土壤和小石头”。\nOne theory as to why this happens, recently proposed in an academic collaboration between Alibaba and UAE, is that models train always on single images, in a sense, even when they’re training on videos (which are written out to single-frame sequences for training purposes); and they may not necessarily learn the correct temporal order of ‘before’ and ‘after’ pictures.关于为什么会发生这种情况，阿里巴巴和阿联酋​****最近在一次学术合作中提出了​一种理论，即从某种意义上说，模型总是在单个图像上进行训练，即使是在视频上进行训练（为了训练目的，视频被写成单帧序列）；而且它们不一定能学习****​ “之前” 和 “之后” 图片的正确时间顺序。\nHowever, the most likely solution is that the models in question have used data augmentation routines that involve exposing a source training clip to the model both forwards and backwards, effectively doubling the training data.\n然而，最有可能的解决方案是，所讨论的模型使用了数据增强程序，其中包括将源训练剪辑向前和向后暴露给模型，从而有效地使训练数据加倍。\nIt has long been known that this shouldn’t be done arbitrarily, because some movements work in reverse, but many do not. A 2019 study from the UK’s University of Bristol sought to develop a method that could distinguish equivariant, invariant and irreversible source data video clips that co-exist in a single dataset (see image below), with the notion that unsuitable source clips might be filtered out from data augmentation routines.\n人们早就知道，这种做法不能随意进行，因为有些动作是反向的，但很多动作不是。英国布里斯托大学2019 年的一项研究试图开发一种方法，可以区分单个数据集中共存的等变、不变和不可逆源数据视频片段（见下图），其理念是可以从数据增强程序中过滤掉不合适的源片段。\nExamples of three types of movement, only one of which is freely reversible while maintaining plausible physical dynamics. Source: https://arxiv.org/abs/1909.09422\n三种运动类型的示例，其中只有一种可以自由逆转，同时保持合理的物理动力学。 来源：https://arxiv.org/abs/1909.09422\nThe authors of that work frame the problem clearly:\n该作品的作者明确阐述了这个问题：\n‘We find the realism of reversed videos to be betrayed by reversal artefacts, aspects of the scene that would not be possible in a natural world. Some artefacts are subtle, while others are easy to spot, like a reversed ‘throw’ action where the thrown object spontaneously rises from the floor.“我们发现反转视频的真实感被反转伪影所背叛，这些场景在自然世界中不可能出现。有些伪影很微妙，而有些则很容易发现，比如反转的“投掷”动作，投掷的物体会自发地从地板上升起。\n‘We observe two types of reversal artefacts, physical, those exhibiting violations of the laws of nature, and improbable, those depicting a possible but unlikely scenario. These are not exclusive, and many reversed actions suffer both types of artefacts, like when uncrumpling a piece of paper.“我们观察到两种类型的逆转伪影，一种是物理的，它们表现出违反自然法则的行为，另一种是不可能发生的，它们描绘了一种可能但不太可能发生的情景。这些并不相互排斥，许多逆转动作都会遭受这两种类型的伪影，比如在展开一张纸时。\n‘Examples of physical artefacts include: inverted gravity (e.g. ‘dropping something’), spontaneous impulses on objects (e.g. ‘spinning a pen’), and irreversible state changes (e.g. ‘burning a candle’). An example of an improbable artefact: taking a plate from the cupboard, drying it, and placing it on the drying rack.“物理人工制品的例子包括：重力倒置（例如‘掉落某物’）、物体上的自发脉冲（例如‘旋转一支笔’）和不可逆的状态变化（例如‘点燃一支蜡烛’）。一个不可能人工制品的例子：从橱柜里拿出一个盘子，擦干它，然后把它放在干燥架上。\n‘This kind of re-use of data is very common at training time, and can be beneficial – for example, in making sure that the model does not learn only one view of an image or object which can be flipped or rotated without losing its central coherency and logic.“这种数据重复使用在训练时非常常见，并且可能带来好处——例如，确保模型不会只学习图像或物体的一个视图，而这些视图可以在不失去其中心连贯性和逻辑的情况下被翻转或旋转。\n‘This only works for objects that are truly symmetrical, of course; and learning physics from a ‘reversed’ video only works if the reversed version makes as much sense as the forward version.’“当然，这只适用于真正对称的物体；并且，只有当反转版本与正转版本一样有意义时，从‘反转’视频中学习物理才有效。”\n**Temporary Reversals 暂时撤销**\nWe don’t have any evidence that systems such as Hunyuan Video and Wan 2.1 allowed arbitrarily ‘reversed’ clips to be exposed to the model during training (neither group of researchers has been specific regarding data augmentation routines).\n我们没有任何证据表明浑元视频和 Wan 2.1 等系统允许在训练期间将任意“反转”的剪辑暴露给模型（两组研究人员都没有具体说明数据增强程序）。\nYet the only reasonable alternative possibility, in the face of so many reports (and my own practical experience), would seem to be that hyperscale datasets powering these model may contain clips that actually feature movements occurring in reverse.\n然而，面对如此多的报告（以及我自己的实际经验），唯一合理的替代可能性似乎是，支持这些模型的超大规模数据集可能包含实际上以反向发生的运动为特征的剪辑。\nThe rock in the example video embedded above was generated using Wan 2.1, and features in a new study that examines how well video diffusion models handle physics.\n上面嵌入的示例视频中的岩石是使用 Wan 2.1 生成的，并在一项研究视频扩散模型如何处理物理问题的新研究中出现。\nIn tests for this project, Wan 2.1 achieved a score of only 22% in terms of its ability to consistently adhere to physical laws.\n在该项目的测试中，Wan 2.1 在始终遵循物理定律的能力方面仅取得了 22% 的分数。\nHowever, that’s the best score of any system tested for the work, indicating that we may have found our next stumbling block for video AI:\n然而，这是所有经过测试的系统中最好的分数，这表明我们可能已经找到了视频 AI 的下一个绊脚石：\nScores obtained by leading open and closed-source systems, with the output of the frameworks evaluated by human annotators. Source: https://arxiv.org/pdf/2503.06800\n领先的开源和闭源系统获得的分数，框架的输出由人工注释者评估。 来源：https://arxiv.org/pdf/2503.06800\nThe authors of the new work have developed a benchmarking system, now in its second iteration, called VideoPhy, with the code available at GitHub.\n这项新研究的作者开发了一个基准测试系统，目前已是第二次迭代，名为VideoPhy ，其代码可在 GitHub 上找到。\nThough the scope of the work is beyond what we can comprehensively cover here, let’s take a general look at its methodology, and its potential for establishing a metric that could help steer the course of future model-training sessions away from these bizarre instances of reversal.\n虽然这项工作的范围超出了我们在这里可以全面涵盖的范围，但让我们总体看一下它的方法，以及建立一个指标的潜力，该指标可以帮助引导未来的模型训练过程远离这些奇怪的逆转情况。\nThe study, conducted by six researchers from UCLA and Google Research, is called VideoPhy-2: A Challenging Action-Centric Physical Commonsense Evaluation in Video Generation. A crowded accompanying project site is also available, along with code and datasets at GitHub, and a dataset viewer at Hugging Face.\n这项研究由来自加州大学洛杉矶分校和谷歌研究院的六名研究人员共同开展，名为VideoPhy-2：视频生成中具有挑战性的以动作为中心的物理常识评估。该项目还提供了一个内容丰富的配套网站，以及GitHub 上的代码和数据集，以及Hugging Face 上的数据集查看器。\nhttps://www.unite.ai/wp-content/uploads/2025/03/0-Sora_lake.mp4\nClick to play. ********Here, the feted OpenAI Sora model fails to understand the interactions between oars and reflections, and is not able to provide a logical physical flow either for the person in the boat or the way that the boat interacts with her.​点击播放。**********​在这里，备受推崇的 OpenAI Sora 模型无法理解桨和反射之间的相互作用，无法为船上的人或船与人互动的方式提供合乎逻辑的物理流程。**\n**Method 方法**\nThe authors describe the latest version of their work, VideoPhy-2, as a ‘challenging commonsense evaluation dataset for real-world actions.’ The collection features 197 actions across a range of diverse physical activities such as hula-hooping, gymnastics and tennis, as well as object interactions, such as bending an object until it breaks.\n作者将他们最新推出的VideoPhy-2描述为“针对现实世界动作的具有挑战性的常识性评估数据集”。该数据集涵盖了 197 种动作，涵盖了各种体育活动，例如呼啦圈、体操和网球，以及物体交互，例如弯曲物体直至其断裂。\nA large language model (LLM) is used to generate 3840 prompts from these seed actions, and the prompts are then used to synthesize videos via the various frameworks being trialed.\n大型语言模型 (LLM) 用于从这些种子操作生成 3840 个提示，然后使用这些提示通过正在试用的各种框架合成视频。\nThroughout the process the authors have developed a list of ‘candidate’ physical rules and laws that AI-generated videos should satisfy, using vision-language models for evaluation.\n在整个过程中，作者使用视觉语言模型进行评估，制定了人工智能生成的视频应该满足的“候选”物理规则和定律列表。\nThe authors state:\n作者指出：\n‘For example, in a video of sportsperson playing tennis, a physical rule would be that a tennis ball should follow a parabolic trajectory under gravity. For gold-standard judgments, we ask human annotators to score each video based on overall semantic adherence and physical commonsense, and to mark its compliance with various physical rules.’“例如，在运动员打网球的视频中，物理规则是网球在重力作用下应遵循抛物线轨迹。为了做出黄金标准判断，我们要求人类注释者根据整体语义遵循度和物理常识对每个视频进行评分，并标记其是否符合各种物理规则。”\nAbove: A text prompt is generated from an action using an LLM and used to create a video with a text-to-video generator. A vision-language model captions the video, identifying possible physical rules at play. Below: Human annotators evaluate the video’s realism, confirm rule violations, add missing rules, and check whether the video matches the original prompt.上图：使用 LLM 从操作生成文本提示，并使用文本转视频生成器创建视频。视觉语言模型为视频添加字幕，识别可能起作用的物理规则。下图：人工注释者评估视频的真实性，确认规则违规，添加缺失的规则，并检查视频是否与原始提示相符。\nInitially the researchers curated a set of actions to evaluate physical commonsense in AI-generated videos. They began with over 600 actions sourced from the Kinetics, UCF-101, and SSv2 datasets, focusing on activities involving sports, object interactions, and real-world physics.\n最初，研究人员精心挑选了一组动作来评估 AI 生成的视频中的物理常识。他们从Kinetics 、 UCF-101和SSv2数据集中选取了 600 多个动作，重点关注涉及运动、物体交互和现实世界物理的活动。\nTwo independent groups of STEM-trained student annotators (with a minimum undergraduate qualification obtained) reviewed and filtered the list, selecting actions that tested principles such as gravity, momentum, and elasticity, while removing low-motion tasks such as typing, petting a cat, or chewing.\n两个独立的、接受过 STEM 培训的学生注释者小组（至少获得本科学历）审查并筛选了该列表，选择了测试重力、动量和弹性等原理的动作，同时删除了打字、抚摸猫或咀嚼等低运动任务。\nAfter further refinement with Gemini-2.0-Flash-Exp to eliminate duplicates, the final dataset included 197 actions, with 54 involving object interactions and 143 centered on physical and sports activities:\n在使用Gemini-2.0-Flash-Exp进一步细化以消除重复后，最终数据集包含 197 个动作，其中 54 个涉及物体交互，143 个以身体和体育活动为中心：\nSamples from the distilled actions.从提炼的动作中得到的样本。\nIn the second stage, the researchers used Gemini-2.0-Flash-Exp to generate 20 prompts for each action in the dataset, resulting in a total of 3,940 prompts. The generation process focused on visible physical interactions that could be clearly represented in a generated video. This excluded non-visual elements such as emotions, sensory details, and abstract language, but incorporated diverse characters and objects.\n在第二阶段，研究人员使用 Gemini-2.0-Flash-Exp 为数据集中的每个动作生成 20 个提示，总共得到 3,940 个提示。生成过程侧重于可见的身体互动，这些互动可以在生成的视频中清晰呈现。这排除了情绪、感官细节和抽象语言等非视觉元素，但融入了多样化的角色和物体。\nFor example, instead of a simple prompt like ‘An archer releases the arrow’ , the model was guided to produce a more detailed version such as ‘An archer draws the bowstring back to full tension, then releases the arrow, which flies straight and strikes a bullseye on a paper target‘.\n例如，与“弓箭手射出箭” 这样简单的提示不同，模型被引导产生更详细的版本，如 “弓箭手将弓弦拉回至完全绷紧状态，然后射出箭，箭笔直飞行并击中纸靶上的靶心”。\nSince modern video models can interpret longer descriptions, the researchers further refined the captions using the Mistral-NeMo-12B-Instruct prompt upsampler, to add visual details without altering the original meaning.\n由于现代视频模型可以解释更长的描述，研究人员使用Mistral-NeMo-12B-Instruct提示上采样器进一步细化了字幕，以添加视觉细节而不改变原始含义。\nSample prompts from VideoPhy-2, categorized by physical activities or object interactions. Each prompt is paired with its corresponding action and the relevant physical principle it tests.VideoPhy-2 的示例提示，按身体活动或物体交互分类。每个提示都与其相应的动作和它测试的相关物理原理配对。\nFor the third stage, physical rules were not derived from text prompts but from generated videos, since generative models can struggle to adhere to conditioned text prompts.\n对于第三阶段，物理规则不是来自文本提示，而是来自生成的视频，因为生成模型很难遵守条件文本提示。\nVideos were first created using VideoPhy-2 prompts, then ‘up-captioned’ with Gemini-2.0-Flash-Exp to extract key details. The model proposed three expected physical rules per video, which human annotators reviewed and expanded by identifying additional potential violations.\n视频首先使用 VideoPhy-2 提示创建，然后使用 Gemini-2.0-Flash-Exp 进行“上行字幕”以提取关键细节。该模型为每个视频提出了三条预期的物理规则，人工注释者通过识别其他潜在违规行为来审查和扩展这些规则。\nExamples from the upsampled captions.来自上采样字幕的示例。\nNext, to identify the most challenging actions, the researchers generated videos using CogVideoX-5B with prompts from the VideoPhy-2 dataset. They then selected 60 actions out of 197 where the model consistently failed to follow both the prompts and basic physical commonsense.\n接下来，为了找出最具挑战性的动作，研究人员使用CogVideoX-5B生成视频，其中提示来自 VideoPhy-2 数据集。然后，他们从 197 个动作中选出了 60 个动作，这些动作模型始终无法遵循提示和基本的物理常识。\nThese actions involved physics-rich interactions such as momentum transfer in discus throwing, state changes such as bending an object until it breaks, balancing tasks such as tightrope walking, and complex motions that included back-flips, pole vaulting, and pizza tossing, among others. In total, 1,200 prompts were chosen to increase the difficulty of the sub-dataset.\n这些动作涉及物理特性丰富的互动，例如掷铁饼时的动量传递、状态变化（例如弯曲物体直至其断裂）、平衡任务（例如走钢丝）以及包括后空翻、撑杆跳和扔披萨等复杂动作。总共选择了 1,200 个提示来增加子数据集的难度。\nThe resulting dataset comprised 3,940 captions – 5.72 times more than the earlier version of VideoPhy. The average length of the original captions is 16 tokens, while upsampled captions reaches 138 tokens – 1.88 times and 16.2 times longer, respectively.\n最终的数据集包含 3,940 个字幕，比 VideoPhy 的早期版本多 5.72 倍。原始字幕的平均长度为 16 个标记，而上采样字幕则达到 138 个标记，分别是 1.88 倍和 16.2 倍。\nThe dataset also features 102,000 human annotations covering semantic adherence, physical commonsense, and rule violations across multiple video generation models.\n该数据集还包含 102,000 条人工注释，涵盖多个视频生成模型的语义遵从性、物理常识和规则违规。\n**Evaluation 评估**\nThe researchers then defined clear criteria for evaluating the videos. The main goal was to assess how well each video matched its input prompt and followed basic physical principles.\n研究人员随后制定了评估视频的明确标准。主要目标是评估每个视频与输入提示的匹配程度以及遵循基本物理原理的程度。\nInstead of simply ranking videos by preference, they used rating-based feedback to capture specific successes and failures. Human annotators scored videos on a five-point scale, allowing for more detailed judgments, while the evaluation also checked whether videos followed various physical rules and laws.\n他们不是简单地根据喜好对视频进行排序，而是使用基于评分的反馈来捕捉具体的成功和失败。人工注释者按照五分制对视频进行评分，以便做出更详细的判断，同时评估还检查视频是否遵循各种物理规则和定律。\nFor human evaluation, a group of 12 annotators were selected from trials on Amazon Mechanical Turk (AMT), and provided ratings after receiving detailed remote instructions. For fairness, semantic adherence and physical commonsense were evaluated separately (in the original VideoPhy study, they were assessed jointly).\n对于人工评估，从 Amazon Mechanical Turk (AMT) 的试验中选出了一组 12 名注释者，并在收到详细的远程指令后提供评分。为了公平起见，语义遵守和物理常识是分开评估的（在最初的 VideoPhy 研究中，它们是联合评估的）。\nThe annotators first rated how well videos matched their input prompts, then separately evaluated physical plausibility, scoring rule violations and overall realism on a five-point scale. Only the original prompts were shown, to maintain a fair comparison across models.\n注释者首先评估视频与输入提示的匹配程度，然后分别评估物理合理性、评分规则违规和整体真实性（五分制）。仅显示原始提示，以保持模型之间的公平比较。\nThe interface presented to the AMT annotators.向 AMT 注释者呈现的界面。\nThough human judgment remains the gold standard, it’s expensive and comes with a number of caveats. Therefore automated evaluation is essential for faster and more scalable model assessments.\n尽管人类判断仍然是黄金标准，但它成本高昂，并且存在许多注意事项。因此，自动化评估对于更快、更具可扩展性的模型评估至关重要。\nThe paper’s authors tested several video-language models, including Gemini-2.0-Flash-Exp and VideoScore, on their ability to score videos for semantic accuracy and for ‘physical commonsense’.\n论文作者测试了几种视频语言模型，包括 Gemini-2.0-Flash-Exp 和VideoScore ，测试它们对视频的语义准确性和“物理常识”进行评分的能力。\nThe models again rated each video on a five-point scale, while a separate classification task determined whether physical rules were followed, violated, or unclear.\n模型再次根据五分量表对每个视频进行评分，而单独的分类任务则确定是否遵循、违反或不清楚物理规则。\nExperiments showed that existing video-language models struggled to match human judgments, mainly due to weak physical reasoning and the complexity of the prompts. To improve automated evaluation, the researchers developed VideoPhy-2-Autoeval, a 7B-parameter model designed to provide more accurate predictions across three categories: semantic adherence; physical commonsense; and rule compliance, fine-tuned on the VideoCon-Physics model using 50,000 human annotations*.\n实验表明，现有的视频语言模型很难与人类判断相匹配，主要是因为物理推理能力较弱，提示内容复杂。为了改进自动评估，研究人员开发了VideoPhy-2-Autoeval ，这是一个 7B 参数模型，旨在在三个类别中提供更准确的预测：语义遵循、物理常识和规则遵守，使用 50,000 个人工注释* 在VideoCon-Physics模型上进行了微调。\n**Data and Tests 数据和测试**\nWith these tools in place, the authors tested a number of generative video systems, both through local installations and, where necessary, via commercial APIs: CogVideoX-5B; VideoCrafter2; HunyuanVideo-13B; Cosmos-Diffusion; Wan2.1-14B; OpenAI Sora; and Luma Ray.\n利用这些工具，作者测试了许多生成视频系统，既通过本地安装，也通过商业 API（必要时）：CogVideoX-5B； VideoCrafter2 ； HunyuanVideo-13B ； Cosmos-Diffusion ；Wan2.1-14B； OpenAI Sora ；和Luma Ray 。\nThe models were prompted with upsampled captions where possible, except that Hunyuan Video and VideoCrafter2 operate under 77-token CLIP limitations, and cannot accept prompts above a certain length.\n模型在可能的情况下都使用上采样字幕进行提示，但 Hunyuan Video 和 VideoCrafter2 在 77 个令牌CLIP限制下运行，并且不能接受超过一定长度的提示。\nVideos generated were kept to less than 6 seconds, since shorter output is easier to evaluate.\n生成的视频保持在 6 秒以内，因为较短的输出更容易评估。\nThe driving data was from the VideoPhy-2 dataset, which was split into a benchmark and training set. 590 videos were generated per model, except for Sora and Ray2; due to the cost factor (equivalent lower numbers of videos were generated for these).\n驾驶数据来自 VideoPhy-2 数据集，该数据集被分为基准和训练集。除 Sora 和 Ray2 外，每个模型生成了 590 个视频；由于成本因素（这些模型生成的视频数量较少）。\n(Please refer to the source paper for further evaluation details, which are exhaustively chronicled there)（有关进一步的评估细节，请参阅源论文，其中有详尽的记录）\nThe initial evaluation dealt with physical activities/sports (PA) and object interactions (OI), and tested both the general dataset and the aforementioned ‘harder’ subset:\n初步评估涉及体育活动/运动（PA）和物体交互（OI），并测试了一般数据集和前面提到的“更难”子集：\nResults from the initial round.初轮结果。\nHere the authors comment:\n以下是作者的评论：\n‘Even the best-performing model, Wan2.1-14B, achieves only 32.6% and 21.9% on the full and hard splits of our dataset, respectively. Its relatively strong performance compared to other models can be attributed to the diversity of its multimodal training data, along with robust motion filtering that preserves high-quality videos across a wide range of actions.“即使是性能最佳的模型 Wan2.1-14B，在我们数据集的完整分割和硬分割中也仅分别达到 32.6% 和 21.9%。与其他模型相比，其相对强劲的性能可以归因于其多模态训练数据的多样性，以及可在各种动作中保留高质量视频的强大运动过滤功能。\n‘Furthermore, we observe that closed models, such as Ray2, perform worse than open models like Wan2.1-14B and CogVideoX-5B. This suggests that closed models are not necessarily superior to open models in capturing physical commonsense.“此外，我们观察到封闭模型（例如 Ray2）的表现比开放模型（例如 Wan2.1-14B 和 CogVideoX-5B）更差。这表明封闭模型在捕捉物理常识方面并不一定优于开放模型。\n‘Notably, Cosmos-Diffusion-7B achieves the second-best score on the hard split, even outperforming the much larger HunyuanVideo-13B model. This may be due to the high representation of human actions in its training data, along with synthetically rendered simulations.’“值得注意的是，Cosmos-Diffusion-7B 在硬分割上取得了第二好的成绩，甚至超过了更大的 HunyuanVideo-13B 模型。这可能是由于其训练数据中人类行为的代表性高，以及合成渲染的模拟。”\nThe results showed that video models struggled more with physical activities like sports than with simpler object interactions. This suggests that improving AI-generated videos in this area will require better datasets – particularly high-quality footage of sports such as tennis, discus, baseball, and cricket.\n结果表明，视频模型在处理体育等体力活动时比处理简单的物体交互时更吃力。这表明，要改进该领域的人工智能视频，需要更好的数据集——尤其是网球、铁饼、棒球和板球等运动的高质量镜头。\nThe study also examined whether a model’s physical plausibility correlated with other video quality metrics, such as aesthetics and motion smoothness. The findings revealed no strong correlation, meaning a model cannot improve its performance on VideoPhy-2 just by generating visually appealing or fluid motion – it needs a deeper understanding of physical commonsense.\n该研究还考察了模型的物理合理性是否与其他视频质量指标（如美观性和运动流畅度）相关。研究结果显示，二者之间没有很强的相关性，这意味着模型不能仅通过生成视觉吸引力或流畅的运动来提高其在 VideoPhy-2 上的性能——它需要对物理常识有更深入的理解。\nThough the paper provides abundant qualitative examples, few of the static examples provided in the PDF seem to relate to the extensive video-based examples that the authors furnish at the project site. Therefore we will look at a small selection of the static examples and then some more of the actual project videos.\n尽管本文提供了丰富的定性示例，但 PDF 中提供的静态示例似乎很少与作者在项目现场提供的大量基于视频的示例相关。因此，我们将查看一小部分静态示例，然后再查看一些实际项目视频。\nThe top row shows videos generated by Wan2.1. (a) In Ray2, the jet-ski on the left lags behind before moving backward. (b) In Hunyuan-13B, the sledgehammer deforms mid-swing, and a broken wooden board appears unexpectedly. (c) In Cosmos-7B, the javelin expels sand before making contact with the ground.上排是 Wan2.1 生成的视频。（a）在 Ray2 中，左侧的水上摩托艇落后后向后移动。（b）在浑源-13B 中，大锤在挥动过程中发生变形，一块破碎的木板意外出现。（c）在宇宙-7B 中，标枪在接触地面之前就喷出了沙子。\nRegarding the above qualitative test, the authors comment:\n对于上述定性测试，作者评论道：\n‘[We] observe violations of physical commonsense, such as jetskis moving unnaturally in reverse and the deformation of a solid sledgehammer, defying the principles of elasticity. However, even Wan suffers from the lack of physical commonsense, as shown in [the clip embedded at the start of this article].“[我们] 观察到违反物理常识的行为，例如水上摩托艇不自然地反向移动，以及实心大锤的变形，这些都违背了弹性原理。然而，就连万也缺乏物理常识，正如 [本文开头嵌入的剪辑] 所示。\n‘In this case, we highlight that a rock starts rolling and accelerating uphill, defying the physical law of gravity.’“在这种情况下，我们强调一块岩石开始滚动并加速上坡，违反了引力的物理定律。”\nFurther examples from the project site:\n来自项目现场的更多示例：\nhttps://www.unite.ai/wp-content/uploads/2025/03/0-Cosmos_towel.mp4\n****Click to play. ****Here the caption was ‘A person vigorously twists a wet towel, water spraying outwards in a visible arc’ – but the resulting source of water is far more like a water-hose than a towel.​点击播放。****​这里的标题是“一个人用力扭动一条湿毛巾，水以可见的弧线向外喷出”——但由此产生的水源更像是水管而不是毛巾。\nhttps://www.unite.ai/wp-content/uploads/2025/03/0-Ray2_spills.mp4\nClick to play. ** Here the caption was ‘A chemist pours a clear liquid from a beaker into a test tube, carefully avoiding spills’, but we can see that the volume of water being added to the beaker is not consistent with the amount exiting the jug.**\n******点击播放。**​这里的标题是“一位化学家将烧杯中的透明液体倒入试管中，小心避免溢出”，但我们可以看到加入烧杯的水量与从水壶中流出的水量不一致。\nAs I mentioned at the outset, the volume of material associated with this project far exceeds what can be covered here. Therefore please refer to the source paper, project site and related sites mentioned earlier, for a truly exhaustive outline of the authors’ procedures, and considerably more testing examples and procedural details.\n正如我在一开始提到的，与该项目相关的材料量远远超出了本文所能涵盖的范围。因此，请参阅前面提到的源论文、项目网站和相关网站，以获得作者程序的真正详尽概述，以及更多的测试示例和程序细节。\n* As for the provenance of the annotations, the paper only specifies ‘acquired for these tasks’ – it seems a lot to have been generated by 12 AMT workers.\n*至于注释的来源，论文只指定了“为这些任务而获得的”——其中很多似乎都是由 12 名 AMT 工作者生成的。\nFirst published Thursday, March 13, 2025首次发布于 2025 年 3 月 13 日星期四\n","date":"2025-03-19","permalink":"https://22cs.github.io/post/why-ai-video-sometimes-gets-it-backwards-why-ai-videos-sometimes-gets-it-backwards-zrash3.html","title":"Why AI Video Sometimes Gets It Backwards为什么人工智能视频有时会出错"},{"content":"Gamification is not the same as game design, because it adds game-like elements to non-gaming environments. However, there is some overlap between game design and gamification design, and one area in which this is the case is with player types. The better you understand your players, the better you can cater to their needs.​游戏化​与游戏设计不同，因为它将类似游戏的元素添加到非游戏环境中。然而，游戏设计和游戏化设计之间有一些重叠，其中一个领域就是玩家类型。你越了解你的玩家，你就越能满足他们的需求。\nThe Psychology of the Player 玩家的心理\nWhen you’re using gamification in the enterprise world, it’s a good idea to understand how your players like to approach playing games. Good news - there is a simple measure designed by Richard Bartle, the Bartle Test of Psychology, which breaks up the way people play games into four simple categories. These categories are the Achiever, the Explorer, the Socializer, and the Killer.\n当您在企业界使用游戏化时，了解玩家喜欢以何种方式玩游戏是个好主意。好消息是，理查德·巴特尔 (Richard Bartle) 设计了一个简单的测量方法，即巴特尔心理学测试，它将人们玩游戏的方式分为四个简单的类别。这些类别是成就者、探索者、社交者和杀手。\nIt’s worth noting that these categories aren’t rigid. Most people display some traits in more than one category. However, most people have a dominant trait which determines their overall preference. If you know where the majority of your players fall using this tool, you can use it to inform the majority of features you will use, and then just add a small number of features that appeal to each of the other categories.\n值得注意的是，这些类别并不是固定不变的。大多数人会表现出不止一种类别的特征。但是，大多数人都有一个主导特征，决定了他们的整体偏好。如果您知道大多数玩家使用此工具时属于哪个类别，则可以使用它来告知您将使用的大多数功能，然后只需添加少量对其他每个类别有吸引力的功能即可。\nThe Achiever 成就者\nAchievers are all about points and status. They want to be able to show their friends how they are progressing. They like to collect badges and put them on display. This is the type of person who responds particularly well to incentive schemes such as Air Miles, where every additional mile collected is an achievement in its own right. Bartle estimates that roughly 10% of people are players of the Achiever type. Chances are you will know several people of this sort; someone who boasts he used a quicker route to get to a destination than his friend did is an Achiever type.\n成就者只关心积分和地位。他们希望能够向朋友展示自己的进步。他们喜欢收集徽章并展示出来。这类人对航空里程等激励计划反应特别好，因为每多收集一英里，本身就是一项成就。Bartle 估计大约有 10% 的人是成就者类型的玩家。你很可能认识几个这样的人；有人夸耀自己比朋友走的更快的路线到达目的地，他就属于成就者类型。\nIncorporating points and badges can help achievers enjoy a gamified experience.\n结合积分和徽章可以帮助成就者享受游戏化的体验。\n© Seananiganz, Fair Use\n© Seananiganz，合理使用\nThe Explorer 探索者\nExplorers want to see new things and discover new secrets. They’re not as bothered about points or prizes. For them, discovery is the prize. Explorers are fine with repetitive tasks as long as they eventually “unlock” a new area of the game, or they deliver some kind of “Easter Egg” **(an Easter Egg is a small bonus within a game – sometimes it’s as simple as a little joke, whereas in other cases it might be a full extra video sequence regarding what has been accomplished). Explorers really enjoy the surprise that’s possible in a game, and around 10% of players fit into this category. These are the players who will feel at walls in a game in order to access a secret passage; their satisfaction on doing so is what makes them tick, not bragging to their friends about their discovery. Build this sort of feature into your gamification design—and you’ll be speaking their language.探索者希望看到新事物并发现新秘密。他们不太在意积分或奖品。对他们来说，**​发现就是奖品。探索者不介意重复的任务，只要他们最终“解锁”游戏的新区域，或者提供某种“复活节彩蛋”（复活节彩蛋是游戏中的小奖励——有时它只是一个简单的小笑话，而在其他情况下，它可能是有关已完成任务的完整额外视频序列）。探索者真的很喜欢游戏中可能出现的惊喜，大约 10% 的玩家属于这一类。这些玩家会在游戏中触摸墙壁以进入秘密通道；这样做的满足感是他们玩得开心的原因，而不是向朋友吹嘘他们的发现。将这种功能融入您的游戏化设计中——您将使用他们的语言。\nExplorer player types want to see new things and experience new outcomes.\n探索型玩家希望看到新事物并体验新的结果。\n© YouSonOFaSnitch, Fair Use\n© YouSonOFaSnitch，合理使用\nThe Socializer 社交者\nThe vast majority of players are Socializers. That’s almost 80% of people who play games. Socializers experience fun in their games through their interaction with other players. Socializers are happy to collaborate in order to achieve bigger and better things than they could on their own. Games, such as Farmville (Facebook’s largest game), appeal to the Socializer. For instance, Socializers are happy to water someone else’s farm in exchange for new crops for their own farm. For example, office workers who leave at the end of the day and remind each other to water each others’ crops may be friends… or they may just be acquaintances. Whatever the deal is, the point with Socializers is that joining forces makes sense to them. Note—this is the last place you’ll find fierce competition, but it doesn’t mean Socializers are passive milksops who lack ambition.\n绝大多数玩家都是社交型玩家。几乎 80% 的玩家都是社交型玩家。社交型玩家通过与其他玩家的互动在游戏中体验乐趣。社交型玩家乐于合作，以实现比他们自己单打独斗时更大更好的目标。诸如《Farmville》（Facebook 最大的游戏）等游戏对社交型玩家很有吸引力。例如，社交型玩家乐于为他人的农场浇水，以换取自己农场的新作物。例如，下班后提醒彼此浇水的办公室职员可能是朋友……或者他们可能只是熟人。无论如何，社交型玩家的重点是，联合起来对他们来说是有意义的。注意——这是你最不可能发现激烈竞争的地方，但这并不意味着社交型玩家是缺乏野心的被动懦夫。\nGames such as Farmville incorporate social experiences which appeal to Socializer player types.\nFarmville 等游戏融入了社交体验，吸引了社交型玩家类型。\n© Ryan Tanaka, Fair Use.\n© Ryan Tanaka，合理使用。\nThe Killer 凶手\nThe Killer denotes an ominous-sounding type, but one that is nonetheless valid. Killers are similar to Achievers in the way that they get a thrill from gaining points and winning status too. What sets them apart from Achievers is that the Killers want to see other people lose. They’re highly competitive, and winning is what motivates them. They want to be the best at the game—and it should come as little surprise that the only way for that to be true is if they beat everyone else. You may expect this personality type to be common, but Bartle’s research suggests that only a small number of players are Killers – less than 1% to be precise.\n杀手型人格听起来不祥，但却是真实存在的。杀手型人格与成就型人格相似，他们也会从获得积分和胜利中获得快感。与成就型人格不同之处在于，杀手型人格希望看到其他人失败。他们竞争意识很强，获胜是他们的动力。他们希望成为游戏中的佼佼者——而要成为佼佼者，唯一的办法就是打败所有其他人，这应该并不奇怪。你可能认为这种性格类型很常见，但 Bartle 的研究表明，只有少数玩家是杀手型人格——准确地说，不到 1%。\nSome people, who have the Killer player type dominant in their gaming nature, are only really happy when they’re winning and everyone else is losing.\n有些人的游戏天性中以杀手型玩家为主，只有在自己赢而其他人都输的时候才会真正感到快乐。\n© Tripwire Interactive, CC BY-SA 3.0\n© Tripwire Interactive，CC BY-SA 3.0\nDon’t Stereotype 不要刻板印象\nGiven these four types, and especially the potentially dramatic appearance of the Killer, we might feel tempted to think of someone we know of and say, “Yes—he’s a Killer type. He’s only happy when he’s destroyed a city full of zombies on multi-player and knocks the other players out of the game.” Be that as it may in the case of that creepy lost-cause ex-friend who would barricade himself in his house on the weekend so he could ‘kill’ to his heart’s content, we have to look deeper. Also, there’s more to a Killer than a need to make others ‘bleed’, in the same way that Socializers don’t mindlessly flit about watering each other’s cyber-corn. Remember, more than one type may power the thought patterns of your players. Knowing them and understanding the context of their working environment is all-important.\n鉴于这四种类型，尤其是杀手可能具有的戏剧性外表，我们可能会忍不住想起我们认识的某个人，然后说：“是的，他是杀手类型。只有在多人游戏中摧毁一座充满僵尸的城市，并将其他玩家赶出游戏时，他才会感到高兴。”但对于那个周末把自己关在家里，随心所欲地“杀人”的令人毛骨悚然的失败前朋友，我们必须更深入地了解。此外，杀手不仅仅是需要让别人“流血”，就像社交者不会漫无目的地四处飞来飞去浇灌彼此的网络玉米一样。请记住，不止一种类型可以影响玩家的思维模式。了解他们并理解他们的工作环境背景至关重要。\n“Stereotypes are fast and easy, but they are lies and the truth takes its time.”\n“刻板印象的形成既快又容易，但它们是谎言，而真相需要时间。”\n—Deb Caletti, Award-winning Author\n—Deb Caletti，获奖作家\nIt can be easy to assume that a competitive sales environment consists of Killers and Achievers, but it’s best to determine this through survey and observation. What’s the exact nature of the working culture around your players? What would spur them on to achieve what goal in your design? In the references below, you’ll find a link to the Bartle Test. Why not try it for yourself—and then ask your players to try it?\n很容易假设竞争激烈的销售环境由杀手型和成就型组成，但最好通过调查和观察来确定这一点。你的玩家周围的工作文化究竟是什么？什么会激励他们实现你设计中的什么目标？在下面的参考资料中，你会找到 Bartle 测试的链接。为什么不自己尝试一下——然后让你的玩家也尝试一下呢？\nKillers and Achievers are most likely to appreciate features such as leaderboards; Socializers and Explorers, not so much. Developing the right mechanics for your players becomes much easier once you understand the way they like to approach a game.\n杀手型玩家和成就型玩家最有可能喜欢排行榜等功能；社交型玩家和探索型玩家则不然。一旦您了解了玩家喜欢的游戏方式，为玩家开发合适的机制就会变得容易得多。\nIf you know the Bartle Player Types of your players, it will become much easier to meet their needs.\n如果您了解您的球员的 Bartle 球员类型，那么满足他们的需求就会变得容易得多。\nThe Take Away 总结\nThere are four player types according to Bartle: Socializers, Explorers, Achievers and Killers. A gamification environment may consist of all or any combination of these types. Careful player research will help you to understand which player types dominate the environment and thus help define how you will cater to their needs. It’s important to do the research and not just stereotype players. Understand what makes them tick and you’ll be able to incorporate features in your designs that will really latch with their inherent natures as players.\n根据 Bartle 的说法，玩家类型有四种：社交型、探索型、成就型和杀手型。游戏化环境可能由所有这些类型或任意组合组成。仔细的玩家研究将帮助您了解哪些类型的玩家在环境中占主导地位，从而帮助您确定如何满足他们的需求。重要的是进行研究，而不仅仅是对玩家进行刻板印象。了解是什么让他们兴奋，您将能够在设计中加入真正符合他们作为玩家的固有性质的功能。\nReferences \u0026 Where to Learn More 参考资料及更多信息\nCourse: Gamification - How to Create Engaging User Experiences\n课程：游戏化 - 如何创造引人入胜的用户体验\nRead about the Bartle Test\n了解Bartle 测试\nThen, if you like, take the Bartle Test here\n如果你愿意，可以在这里参加 Bartle 测试\nJanaki Mythily Kumar and Mario Herger, Gamification at Work: Designing Engaging Business Software, The Interaction Design Foundation, 2014\nJanaki Mythily Kumar 和 Mario Herger， 《工作中的游戏化：设计引人入胜的商业软件》 ，交互设计基金会，2014 年\nHero Image: © Janaki Kumar and Mario Herger, CC BY-ND 3.0\n英雄图片：© Janaki Kumar 和 Mario Herger，CC BY-ND 3.0\n","date":"2025-03-19","permalink":"https://22cs.github.io/post/bartle-s-player-types-for-gamification-bartle-s-gamified-player-types-1wgyet.html","title":"Bartle’s Player Types for Gamification Bartle 的游戏化玩家类型"},{"content":" RICHARD: So you’re going to quit, just like that? How can you​do that?\n理查德：所以你就这样辞职了？你怎么能​这么做​呢？\nGILFOYLE: By saying the words “I” and “quit” in conjunctiontogether, i.e. “I quit”.\n吉尔福伊尔：把“我”和“退出”两个词连在一起说，即“我退出”。\nJARED: Um… there’s actually some paperwork involved.\n贾里德：嗯……实际上涉及一些文书工作。\n—“Silicon Valley”\n— 《硅谷》\nI don’t have to tell you things are bad. Everybody knowsthings are bad. When you hate your job, no matter how much you try\nto put up with it, there comes a point where you’re mad as hell and\nyou’re just not going to take it anymore. So, maybe this is the right\nmoment to reflect: is it time to go?\n我不必告诉你情况很糟糕。每个人都知道情况很糟糕。当你讨厌你的工作时，无论你多么努力地忍受它，到了一定时候，你就会非常生气，你再也不会忍受它了。所以，也许现在是反思的正确时机：是时候离开了吗？\nMaking the decision to leave a job is never easy. And it’s a pretty\ndrastic step, especially if you don’t yet have another job to go to. But\nsometimes it has to be done. Let’s look at some signs that might\nindicate it’s time to say the words “I” and “quit” in conjunction\ntogether.\n做出辞职的决定从来都不是件容易的事。这是一个相当激烈的决定，特别是如果你还没有找到另一份工作的话。但有时不得不这么做。让我们看看一些迹象，它们可能表明是时候同时说出“我”和“辞职”这两个词了。\nThe comfort trap 舒适陷阱\nIf you’re feeling miserable and finding your work unrewarding, you\nmay find it relatively easy to flip the mental switch that says “time to\nleave”. But sometimes you can run into the opposite problem: getting\ntoo comfortable where you are.\n如果你感觉痛苦，觉得工作没有回报，你\n可能会发现，在心理上很容易就能拨动开关，说“是时候\n离开”。但有时你可能会遇到相反的问题：\n你现在的处境太舒适了。\nYou may have had the misfortune to become an expert on your subject\narea. Being an expert sounds great, and it does bring you high status.\nBut you’re the king of a very small hill, and one that will eventually\nbe washed away by rising sea levels. If this is the case, you need to\nmigrate to higher ground before it’s too late. But many people will\nhesitate, fatally, because they don’t like the idea of getting their\nfeet wet.\n你可能不幸成为你所在领域的专家。成为专家听起来很棒，而且确实能给你带来很高的地位。但你只是一座小山的国王，这座山最终会被不断上升的海平面冲走。如果是这样的话，你需要趁还来得及的时候搬到更高的地方。但许多人会犹豫不决，这是致命的，因为他们不喜欢涉足其中。\nAlternatively, you may find yourself in a job that’s so easy you can\nbasically do it on autopilot. This situation is much harder to leave,\nbecause it’s so pleasant to be in.\n或者，你可能会发现自己从事的工作非常轻松，基本上可以自动完成。这种情况很难离开，因为工作很愉快。\nAnd maybe it is okay for you to stay here for the rest of\nyour career—if that’s really what you want. Is it?\n也许你可以留在这里度过你的职业生涯的余下时光 —— 如果这真的是你想要的。是吗？\nPETER: I generally come in at least fifteen minutes late, andafter that I sorta space out for about an hour. I just stare at my desk,but it looks like I’m working.\n彼得：我通常至少迟到十五分钟，然后就会发呆大约一个小时。我只是盯着我的办公桌，但看起来我在工作。\nI do that for probably another hour after lunch, too. I’d say in agiven week I probably only do about fifteen minutes of real, actual,work.午饭后我可能还会再做一小时。我想说，在一个星期里，我可能只做了大约十五分钟的真正工作。\n—“Office Space”\n— 《办公空间》\nUltimately, work that’s too easy is no fun, and it’s not the basis of\na rewarding career. All you’re doing is selling time, and as\nyou get a little older you’ll come to realise that time is a\nnon-renewable resource.\n归根结底，太轻松的工作毫无乐趣，也不是一份有回报的职业的基础。你所做的只是在卖时间，随着年龄的增长，你会意识到时间是一种不可再生的资源。\nIt’s no good just selling your life; you won’t be able to buy it\nback. My book Code For Your Life is a guide to\nthe alternatives: building a meaningful career, becoming a master of\nyour craft, and maybe even starting a successful independent business.\nIn this excerpt, let’s talk about signs that your career might be\nstarting to stagnate, and whether it’s time to quit so you can get\nahead.\n仅仅出卖你的生命是没有用的；你无法把它买回来。我的书《你的生命密码》是一本关于替代方案的指南：建立有意义的职业生涯，成为你所从事领域的大师，甚至创办一家成功的独立企业。在这段摘录中，让我们谈谈你的职业生涯可能开始停滞不前的迹象，以及是否是时候辞职以便取得进步。\nWhy is everyone around me getting dumber?\n为什么我周围的每个人都变得越来越笨？\nEven if you enjoy your work and find it stimulating at first,\nespecially if you’re surrounded by lots of smart and skilled people, you\nmay find that the higher you rise in the organisation, the less this is\nthe case. If it seems like everyone around you is getting dumber, what’s\ngoing on?\n即使你一开始很喜欢自己的工作，觉得工作很刺激，尤其是当你周围都是聪明又有技能的人时，但你可能会发现，在组织中，职位越高，这种感觉就越少。如果你周围的人似乎都越来越笨了，这是怎么回事呢？\nOne might expect that people at the higher levels of a\ncompany would be more competent than those below, but this usually turns\nout not to be true, because of the Peter Principle:\n人们可能认为公司高层的人比底层的人更有能力，但事实通常并非如此，因为彼得原理：\nAlthough some people function competently, I observed others whohad risen above their level of competence and were habitually bunglingtheir jobs, frustrating their co-workers and eroding the efficiency ofthe organization.尽管有些人能够胜任工作，但我发现有些人的能力超出了自己的能力水平，并且经常把工作搞砸，让同事感到沮丧，从而降低了组织的效率。\nMy analysis of hundreds of cases of occupational incompetence led meon to formulate The Peter Principle​ : In a hierarchyevery employee tends to rise to his level of incompetence.通过对数百起职业能力不足案例的分析，我得出了​ “彼得原理” ：在等级制度中，每个员工都倾向于升至自己能力不足的水平。\n—Laurence J. Peter, “The PeterPrinciple”\n—劳伦斯·J·彼得， 《彼得原理》\nIn other words, if you’re good enough at your job, you’ll be promoted\nto another job, and another, until you eventually reach a job that you\ncan’t do well, at which point you’ll stay in it (possibly for\nthe rest of your career).\n换句话说，如果你工作表现足够好，你就会升职\n换一份工作，再换一份，直到你最终找到一份工作\n做不好的话，你就会一直呆在这个岗位上（可能直到你的整个职业生涯）。\nWhich explains a lot about some organisations, doesn’t it?\n这在很大程度上解释了一些组织的情况，不是吗？\nThe good engineers are evaporating\n优秀的工程师正在消失\nAnother reason you can find yourself adrift on a ship of fools is the\n“Dead Sea” effect:\n你会发现自己在愚人船上漂流的另一个原因是“死海”效应：\nThe more talented and effective engineers are the ones mostlikely to leave—to evaporate, if you will. They are the ones leastlikely to put up with the frequent stupidities and workplace problemsthat plague large organisations; they are also the ones most likely tohave other opportunities that they can readily move to.更有才华和效率的工程师最有可能离开——如果你愿意的话，可以说是消失。他们最不可能忍受困扰大型组织的频繁愚蠢行为和工作场所问题；他们也最有可能有其他机会，可以随时转行。\nWhat tends to remain behind is the ‘residue’—the least talented andeffective engineers. They tend to be grateful they have a job and makefewer demands on management. They tend to entrench themselves, becomingmaintenance experts on critical systems, so that the organization can’tafford to let them go.留下来的往往是“残余”——最没有天赋和效率的工程师。他们往往很庆幸自己有一份工作，对管理层的要求也更少。他们往往稳固自己的地位，成为关键系统的维护专家，这样组织就负担不起让他们离开的代价。\n—Bruce F. Webster, “TheWetware Crisis: the Dead Sea effect”\n—布鲁斯·F·韦伯斯特， 《湿件危机：死海效应》\nIf you’re in a company like this, it’s not hard to stand out from the\n“residue”, and as a result you may be showered with promotions, fancy\ntitles, and maybe even money. That sounds great, but there’s a hidden\ndanger to watch out for.\n如果你在这样的公司工作，那么从“残余”中脱颖而出并不难，结果你可能会获得晋升、头衔，甚至金钱。这听起来很棒，但有一个隐藏的危险需要注意。\nStranded by the tide 被潮水困住\nIf you’re promoted too far, too soon, you may find that when you look\nfor other jobs at the same level, you don’t really have the necessary\nskills for them.\n如果您晋升得太快、太高，您可能会发现，当您寻找同一级别的其他工作时，您并不真正具备所需的技能。\nFor example, if you’ve already become a so-called “senior” developer\nat Company A, and then you apply for the same job at Company B, you may\nfind that their definition of “senior” is rather different, and that you\ndon’t meet it. You’re a victim of title inflation: the currency of\n“senior” has become devalued.\n例如，如果你已经成为 A 公司所谓的“高级”开发人员，然后你又申请 B 公司的同一职位，你可能会发现他们对“高级”的定义完全不同，而你并不符合。你是头衔膨胀的受害者：“高级”的货币已经贬值。\nHence there’s a tendency for you to stay at Company A, because who\nwants to take a step down in job grade and salary? If you find yourself\nsurrounded by Principal and Distinguished Engineers and Architects who\ndon’t seem to actually know anything useful, then they may be\nsuffering from this kind of title inflation. Make sure you don’t become\none of them.\n因此，你倾向于留在 A 公司，因为谁愿意在职位级别和薪水上降级呢？如果你发现自己周围都是首席和杰出的工程师和建筑师，而他们似乎实际上不知道任何有用的东西，那么他们可能正遭受这种头衔膨胀的困扰。确保你不要成为他们中的一员。\nThe company won’t love you back\n公司不会爱你\nCompanies like to tell themselves pleasant little stories about how\nthey’re like a “family”, everyone is a valued team member, the company\nwill look after them, and so on.\n公司喜欢给自己讲一些愉快的小故事，比如他们就像一个“家人”，每个人都是团队中值得重视的成员，公司会照顾他们，等等。\nThe truth is that, however benevolent its messaging, a company exists\nto make profits and increase its own value. If this happens to benefit\nthe people who work there, too, that’s nice, but it’s not what the\ncompany is fundamentally about.\n事实是，无论公司宣传的多么善意，公司存在的目的都是赚取利润并提高自身价值。如果这也能让员工受益，那当然很好，但这并不是公司的根本宗旨。\nIndeed, when the interests of the staff and the company’s profits\ncome into conflict, the profits will always win. Welcome to\ncapitalism.\n确实，当员工的利益和公司的利润发生冲突时，利润总是会获胜。欢迎来到资本主义。\nIn particular, the HR department is not your friend. They’re not your\nenemy, necessarily, but they exist to protect the company from\nyou, and not vice versa.\n尤其是人力资源部门不是你的朋友。他们不是你的\n敌人，必然，但他们的存在是为了保护公司免受你的侵害，而不是相反。\nHR exist to represent the interests of the company and thoseinterests always have a degree of divergence with employees. It pays toget informed about your rights, because your HR and Legal teams are notgoing to do that for you.人力资源部门的存在是为了代表公司的利益，而这些利益与员工的利益总是存在一定程度的分歧。了解自己的权利是有益的，因为你的人力资源和法律团队不会替你做到这一点。\nThis isn’t to say your HR team are bad people. They’re almostcertainly not. They’re just doing their job. But don’t forget what theirjob is, and it’s not to protect your interests, so make sure you havesomeone at the table who is.这并不是说你的人力资源团队是坏人。他们几乎肯定不是。他们只是在做他们的工作。但不要忘记他们的工作是什么，他们的工作不是保护你的利益，所以确保你的团队中有这样的人。\n—Colm Doyle, “HavingFriends in HR Is Fine, but HR Is Not Your Friend”\n—Colm Doyle， “在人力资源部门交朋友很好，但人力资源部门不是你的朋友”\nWhen the company says wonderful things about how much it values you,\ndon’t take them quite at face value: after all, they would say\nthat, wouldn’t they? And when you’re laid off, don’t take that\npersonally either.\n当公司夸赞他们非常重视你时，不要太过相信：毕竟，他们会这么说，不是吗？当你被解雇时，也不要太在意。\nThe company simply doesn’t have any feelings about you one way or the\nother, and once you know that, everything else about the way it treats\nyou starts to make perfect sense.\n公司根本就不会对你有任何感觉，一旦你知道了这一点，它对待你的其他一切方式就开始变得完全合理了。\nWhen it’s time to quit 何时该放弃\nWhen you finally make the decision to leave, whatever the reason,\nthere’s a right and a wrong way to go about it.\n当您最终决定离开时，无论是什么原因，都有正确和错误的方法。\nThe first thing to say is that your departure should not come as a\nsurprise, at least to your team leader or line manager. This would\nembarrass them professionally—they’re supposed to know what’s going on\nwith their reports—and there’s no need to do that. Indeed, you\nwant their goodwill, ideally in the form of a glowing\nreference, so you should do everything you can to smooth this\npotentially difficult transition.\n首先要说的是，你的离开不应该是\n至少对你的团队领导或直线经理来说，这是令人惊讶的。这将\n让他们在职业上感到尴尬——他们应该知道发生了什么\n他们的报告——没有必要这么做。事实上，你\n希望得到他们的善意，最好是以热情洋溢的推荐的形式，所以你应该尽一切努力来平稳这个可能困难的过渡。\nIn particular, you should give your boss a chance to change your\nmind—or, at least, you should let them feel that they’ve had\nthat chance. It’s no good nursing your private resentments for years,\nwhile telling your boss once a week that everything’s fine, and then\nsuddenly walking out on them.\n尤其是，你应该给老板一个改变主意的机会——或者至少让他们觉得他们有这个机会。多年来一直怀恨在心，每周只跟老板说一次一切都好，然后突然离开，这种做法毫无意义。\nInstead, you should make sure that if you’re unhappy about something,\nyour boss knows it pretty much as soon as you do.\n相反，你应该确保如果你对某事不满意，你的老板能够立即知道。\nSay no to exit interviews 拒绝离职面谈\nCompanies will sometimes ask you to take part in an “exit interview”,\nusually presented as an information-gathering exercise where you can\ngive honest feedback about your employment, and why you’re leaving.\nSometimes they’ll ask for suggestions that could help improve things for\nthe employees who are staying. Sounds innocent enough, right?\n公司有时会要求你参加“离职面谈”，这通常是一种信息收集活动，你可以诚实地反馈你的工作情况以及你离职的原因。有时他们会要求你提出建议，帮助留下的员工改善现状。听起来很无辜，对吧？\nIt’s a trap. Don’t agree to an exit interview: it can’t\nbenefit you, since you’re leaving anyway. In fact, it could even hurt\nyou. Once you start talking, there’s a danger that you might say too\nmuch, venting your deepest frustrations and criticisms. That could harm\nyour relationship with both the company and the people involved.\n这是一个陷阱。不要同意离职面谈：这对你没有好处，因为你反正要离开。事实上，它甚至可能伤害你。一旦你开始说话，你就有可能说得太多，发泄你最深的挫败感和批评。这可能会损害你与公司和相关人员的关系。\nThere are all sorts of ways that your former employers mightretaliate. They might decide not to give a reference. They might say badthings about you at industry events. They could refuse to confirm youremployment to a background investigator. They could call your newcompany and tell them you were fired for fraud.你的前雇主可能会用各种方式进行报复。他们可能会决定不提供推荐信。他们可能会在行业活动中说你的坏话。他们可能会拒绝向背景调查员确认你的工作情况。他们可能会打电话给你的新公司，告诉他们你因欺诈而被解雇。\nThese are all real stories: every single one of those hypotheticalsis actually something I’ve seen happen.这些都是真实的故事：每一个假设都是我亲眼所见发生的事情。\n—Jacob Kaplan-Moss, “ExitInterviews Are a Trap”\n—雅各布·卡普兰-莫斯， 《离职面谈是个陷阱》\nInstead, just politely decline the exit interview, or any other\nsolicitation for feedback. They can’t make you answer any\nquestions. If you feel you can’t refuse, then just give bland answers,\nlike “nothing comes to mind”.\n相反，只需礼貌地拒绝离职面谈或任何其他征求反馈意见的行为。他们不能强迫你回答任何问题。如果你觉得无法拒绝，那么就给出平淡的回答，比如“想不出来了”。\nSo, the doors close behind you, and a new world of possibility opens\nup ahead. After perhaps many years or even decades of doing what you’re\ntold, you’ve reached the threshold of a new relationship with your work:\nindependence. What now?\n所以，你身后的大门关闭了，一个充满可能性的新世界打开了\n未来。也许经过许多年甚至几十年的努力，你\n告诉你，你已经与你的工作建立了一种新的关系：\n独立。现在怎么办？\nAnd we’ll talk about that in the next post. See you in a minute.\n我们将在下一篇文章中讨论这个问题。一会儿见。\n","date":"2025-03-19","permalink":"https://22cs.github.io/post/how-to-know-when-it-s-time-to-go-1uhx6o.html","title":"How to know when it's time to go如何知道何时该走"},{"content":"Busyness is satisfying because it tricks us into feeling accomplished. But activity isn’t the same as progress. You can be extremely efficient at clearing your inbox, organizing files, or attending back-to-back meetings, but none of that matters if you’re not being effective.\n忙碌让人感到满足，因为它让我们感觉很有成就感。但活动并不等同于进步。你可以非常高效地清理收件箱、整理文件或参加连续的会议，但如果你效率低下，这些都毫无意义。\nEfficiency is about doing tasks right, effectiveness is about doing the right tasks. And the worst thing you can do is be highly efficient at something you shouldn’t be doing at all.\n效率是指正确地完成任务，效力是指正确地完成任务。最糟糕的事情就是在根本不应该做的事情上保持高效率。\nThere’s a guy at my company who’s involved in everything. He’s in every Slack channel, every meeting — you can’t escape him. People admire him because he looks productive. But I’d argue he’s a master procrastinator. With 100+ browser tabs open at all times, his attention is spread so thin that he’s not actually getting things done — at least not the things that matter.\n我公司有个家伙事事都要参与。他出现在每个 Slack 频道、每个会议中——你无法逃避他。人们钦佩他，因为他看起来很高效。但我认为他是个拖延大师。他总是打开 100 多个浏览器标签，注意力被分散，以至于他实际上没有完成任务——至少没有完成重要的事情。\nThis guy is stuck in a procrastination trap, because it’s easier to stay busy with little tasks than to face the big, important problems. The ones without deadlines. The ones that require deep thought and tough decisions. The ones we push off because they’re hard.这家伙陷入了拖延症，因为​忙于小任务比面对重大问题更容易。 那些没有最后期限的问题。那些需要深思熟虑和艰难决定的问题。那些我们因为困难而推迟的问题。\nReal productivity isn’t about being busy. It’s about solving the right problems. And to do that, you need to focus — really focus — on what matters most. That’s not easy in a world designed to distract you. But it’s the only way to get meaningful work done.\n真正的生产力不是忙碌，而是解决正确的问题。要做到这一点，你需要集中精力——真正集中精力——在最重要的事情上。在一个让你分心的世界里，这并不容易。但这是完成有意义的工作的唯一方法。\nTask switching is poison for the brain 任务切换对大脑有害\nAccording to RescueTime, the average tech worker checks their notifications every six minutes. Even worse, about 35.5% of workers do it every three minutes. That’s insane. It’s like working with a TikTok brain.\n根据RescueTime的数据，科技工作者平均每六分钟检查一次通知。更糟糕的是，约有 35.5% 的工作者每三分钟检查一次。这太疯狂了。就像用 TikTok 的大脑工作一样。\nMultitasking makes you Dory. And not in the cute, fun way.\n多任务处理会让你变得多莉。而且不是那种可爱、有趣的多莉。Let’s get this straight: there’s no such thing as multitasking — it’s just task-switching. And task-switching is productivity’s kryptonite. Research shows it takes about 23 minutes to regain focus after a distraction. When you switch tasks, your brain has to disengage from the first task and reorient itself to the new one. This process slows you down and increases errors as your brain struggles to refocus. Add endless Slack pings or email alerts to the mix, and your productivity nosedives.\n让我们直截了当地说：没有所谓的多任务处理——它只是任务切换。任务切换是生产力的克星。研究表明，在分心后需要大约 23 分钟才能重新集中注意力。当你切换任务时，你的大脑必须从第一个任务中脱离出来，重新适应新的任务。这个过程会让你的速度变慢，错误也会增多，因为你的大脑很难重新集中注意力。再加上无休止的 Slack 提醒或电子邮件提醒，你的生产力就会急剧下降。\nHumans can only focus on one task at a time. With manual labor, this is obvious — you only have two hands. But with thinking, it’s less tangible. The abstract nature of knowledge work tricks us into believing we can cram an infinite number of tasks into our brains. That’s why we try to multitask, and why it’s so destructive. Multitasking is a productivity killer, plain and simple.\n人类一次只能专注于一项任务。 对于体力劳动来说，这一点很明显——你只有两只手。但对于思考来说，这一点就不那么有形了。知识工作的抽象性质让我们误以为我们可以把无数的任务塞进大脑。这就是我们试图同时处理多项任务的原因，也是它如此具有破坏性的原因。简单来说，同时处理多项任务会扼杀生产力。\nDistractions are everywhere — you can’t avoid them. But you can reduce their impact. Start small: turn off notifications and block time in your calendar for deep work. Make it harder for distractions to reach you. ****By protecting your focus, you give your brain a fighting chance to stay on track.干扰无处不在——你无法避免。但你可以减少它们的影响。从小事做起：关闭通知并在日历中留出时间用于深度工作。****​让干扰更难影响到你。 通过保护你的注意力，你可以让你的大脑有机会保持正轨。\nTo do great work you need to slow down 要想做好工作，你需要放慢速度\nProductivity is often mistaken for speed. We rush through tasks to feel accomplished, checking off boxes and moving on to the next thing. But speed doesn’t matter if you’re solving the wrong problem. If you’re working fast but achieving little, you’re focused on the wrong things.\n生产力常常被误认为是速度。我们匆匆忙忙地完成任务，以获得成就感，勾选复选框，然后继续做下一件事。但是，如果你解决的问题不对，速度就不重要。如果你工作速度快，但成果不多，那你就专注于错误的事情了。\nWax on, wax off. Mr. Miyagi knew the secret: focus beats speed.\n上蜡，去蜡。宫城先生知道其中的秘诀：专注胜过速度。We’re not factory workers measured by how many widgets we ship per hour. We use our brains. And solutions to complex problems come on their own timelines — they can take a minute or a year. Productivity isn’t about time spent at your desk. As Cal Newport argues in Slow Productivity we should obsess over quality, not quantity.\n我们不是以每小时运送多少零件来衡量的工厂工人。我们用大脑。复杂问题的解决方案有自己的时间表——可能需要一分钟或一年。生产力与在办公桌前花费的时间无关。 正如卡尔·纽波特在《缓慢生产力》一书中所说，我们应该专注于质量，而不是数量。\nCreative work — like designing, programming, or writing — requires deep focus. It’s why it takes at least 30 minutes to orient yourself, understand where you are, and decide what to do next. It’s like welding iron: you have to heat the metal before you can shape it.\n创意工作（例如设计、编程或写作）需要高度集中注意力。这就是为什么你需要至少 30 分钟来调整自己，了解自己处于什么位置，并决定下一步该做什么。这就像焊接铁：你必须先加热金属，然后才能塑造它。\nGood work is slow because it’s hard. Tackling complex problems takes deep thought, and that’s uncomfortable. I get why answering Slack messages or clearing your inbox feels easier — it’s instant gratification. But let’s be honest: those tasks are often just procrastination in disguise.\n好的工作之所以进展缓慢，是因为它很难。解决复杂的问题需要深思熟虑，这让人很不舒服。我明白为什么回复 Slack 消息或清理收件箱感觉更容易——这是即时满足。但说实话：这些任务通常只是变相的拖延。\nCrossing off items on your to-do list gives you a dopamine hit, sure. But if those tasks aren’t moving you closer to a meaningful outcome, they’re pointless. Be brave. Face the hard challenges head-on. The solutions you’re looking for are hidden in the discomfort you’re trying to avoid.\n完成待办事项清单上的事项确实会让你产生多巴胺。但如果这些任务无法让你更接近有意义的结果，它们就毫无意义。勇敢一点。直面艰难的挑战。你正在寻找的解决方案隐藏在你试图避免的不适中。\nDon’t let others manage your attention 不要让别人控制你的注意力\nIf you don’t set boundaries, Michael Scott will set them for you.\n如果您不设定界限，迈克尔·斯科特 (Michael Scott) 就会为您设定界限。Your attention is your most valuable resource. But if you’re not careful, everyone else will manage it for you. Every Slack message, every email, every “got a minute?” is someone else’s agenda taking over yours.\n你的注意力是你最宝贵的资源。但如果你不小心，其他人就会替你管理注意力。每条 Slack 消息、每封电子邮件、每句“有时间吗？”都是别人的议程接管了你的议程。\nInterruptions kill your flow. It’s like being stopped cold while running at full speed — there’s no easy way to recover. You lose momentum, and your progress stalls.\n中断会破坏你的思路。这就像在全速奔跑时突然停下来一样——没有简单的方法可以恢复。你会失去动力，你的进步会停滞不前。\nIf you don’t take control of your attention, you’ll spend your day reacting to others. There will always be fires to put out, and everyone has their own priorities. It’s not malice — it’s just human nature. But if you let other people dictate your focus, you’ll never get to what matters most to you.\n如果你不控制自己的注意力，你就会整天都在对别人做出反应。总是有事情需要解决，每个人都有自己的优先事项。这不是恶意的——这只是人性。但如果你让别人决定你的注意力，你就永远无法关注对你来说最重要的事情。\nPrioritizing means saying no — a lot. There are countless good ideas, but you’ve already committed to one. Make it clear to others that you’re intentional about your time. Keep a list of things you’ve chosen to say no to, and let that guide your decisions.\n优先考虑意味着要说“不”——说很多次“不”。 有无数好主意，但你已经承诺过一个。向别人表明你是有意安排时间的。列出你选择说“不”的事情，并以此指导你的决定。\nStrategically managing your attention doesn’t just save time — it also saves your sanity. Being busy today will only make you busier tomorrow if you don’t set boundaries. Save time to think, question, delegate, and prioritize. It’s not a luxury — it’s essential for producing great work.\n策略性地管理你的注意力不仅可以节省时间，还可以让你保持理智。如果你不设定界限，今天忙碌只会让你明天更忙。节省时间去思考、质疑、委派和确定优先事项。这不是奢侈，而是创造伟大作品的必要条件。\nFocus on what matters 专注于重要的事情\nIf Doctor Strange can meditate while the world crumbles, you can ignore that Slack notification.\n如果奇异博士可以在世界崩溃时冥想，那么您就可以忽略 Slack 通知。The easiest thing to do is show up at the office, write emails, and sit through meetings. It feels productive. It feels busy. But it’s not. Letting the inertia of work drag you along isn’t smart — you need to be strategic about how you invest your time.\n最简单的做法就是出现在办公室，写电子邮件，参加会议。这让人感觉很有成效。感觉很忙碌。但事实并非如此。让工作惯性拖着你走并不是明智之举——你需要有策略地投资你的时间。\nStop obsessing over speed or checking items off a list. That’s not what productivity is about.\n不要过分关注速度或核对清单上的事项。这不是生产力的意义所在。\nPause. Breathe. Reevaluate what’s on your plate. Are you tackling the right problems? Or are you letting distractions dictate your day? Productivity starts with making conscious choices about where to direct your energy.\n暂停。深呼吸。重新评估你的任务。你正在解决正确的问题吗？还是你让干扰主宰了你的一天？提高效率始于有意识地选择将精力投入到何处。\nDon’t be the person with 100+ tabs open in their browser. Don’t be the one who says yes to everything and achieves nothing meaningful. Productivity isn’t about doing more — it’s about doing what’s important.\n不要成为在浏览器中打开 100 多个标签的人。不要成为对所有事情都说“是”却一事无成的人。生产力不在于做得更多，而在于做重要的事情。\nThe most productive people aren’t the ones who never get off track — they’re the ones who get back on track faster. They know their priorities, stick to them, and ignore the rest.\n最有效率的人并不是那些从不偏离轨道的人，而是那些能更快回到正轨的人。他们知道自己的优先事项，坚持做这些事情，而忽略其他事情。\nChoose wisely. Stay focused. And watch how much more impactful your work becomes. Don’t settle for being busy. Be productive.\n明智选择。保持专注。观察你的工作变得多么有影响力。不要满足于忙碌。要有效率。\n","date":"2025-03-19","permalink":"https://22cs.github.io/post/the-productivity-trap-why-busyness-feels-so-good-productivity-trap-why-busyness-feels-so-good-2qszrm.html","title":"The productivity trap: why busyness feels so good生产力陷阱：为何忙碌让人感觉如此美好"},{"content":"人生方向自我分析问卷 学业与职业发展 你为什么想要考研究生？最初的动机是什么？\n想读研，想去试试人工智能这方面的路子，这是大势所趋，是未来。 之前我想成为一个码农，但现在AI写代码让我很焦虑，我认为成为一辈子简单的码农不太现实了 学历镀金，很必要，现在很多需要研究生 考研这条路对你未来的职业发展真的必要吗？\n我认为非常必要。 你目前所学的专业是什么？你对这个专业的热情度如何？\n信息工程，电子信息下面的。一般，主要我们学校很多硬件的，我不喜欢硬件，电子的很麻烦，我很讨厌电子。 如果不考研，你认为在你的专业领域直接工作有哪些前景？\n去运营商，现在还有希望，但是工资太低，发展受限。 小公司，代码或者游戏方面的，可能还要我。 其他的不好说了。总体就是发展的空间被我自己搞烂了，我现在感觉很难受。 你有没有了解过你所在行业的就业市场情况？\n了解，很烂，现在很烂。 你希望5年后自己在职业上达到什么样的状态？\n不好说，至少我想稳定。稳定的，能看到希望的。 你是否考虑过其他类型的继续教育（如职业资格证书、在线课程等）？\n没有，在中国没有价值。 个人兴趣与优势 除了学业外，你有哪些兴趣爱好？\n写代码，思考游戏设计 在这些兴趣中，有没有可能发展成职业的方向？\n都可以，但是看未来的现状。 游戏行业压力很大，看项目，非常要命。 代码行业就像之前考虑的，很可能被AI冲击的完全改变。 你认为自己最大的优势或技能是什么？\n没有了。什么都没优势。 你得到过他人什么样的正面评价？（你擅长什么）\n游戏设计还可以。但我不想走这个路子了。 科研只能说有兴趣，但当时眼高手低，我认为自己能力不足，还需要多努力。 代码和优秀人才差距很大，我认为自己这方面做的很差。 你最享受做什么事情？做这些事时你会忘记时间的流逝吗？\n写代码。 看一些有趣的视频。 打游戏。 有没有某个领域，你会主动去学习或探索相关知识？\n游戏设计和代码。 价值观与生活目标 对你来说，什么是成功的生活？\n很难定义。我想给父母养老，早日撑起这个家。 但这个目标很玄乎。北京的房价很高，生活成本很高，对于其他超一线城市也是一样。 所以很难在大城市立足。 我想在50甚至40之前，有一个很好的收入。然后剩下的时间，和朋友一起出去玩，一起享受生活。 金钱、成就感、社会认可、个人成长、工作与生活平衡——这些因素对你的重要性排序是怎样的？\n工作与生化平衡。 金钱 个人成长 成就感 社会认可 你希望通过工作实现什么样的个人价值？\n做一些有意思的事情，比如开源、做个好游戏。 你是更看重稳定性还是更看重发展机会？\n很难说。二者如果不可共存，我可能更看重稳定性了。但是要看到底能拿多少钱。 你对未来的生活方式有什么期望？（城市/乡村，忙碌/舒适等）\n自由。有时间做自己的事情，可惜在996的大环境下，我感觉不够现实 有时间和朋友一起享受人生，一起打游戏、出去玩。 过去经历与学习 过去几次考研失败，你认为主要原因是什么？\n学习不好。 我记忆力真的差了。 我对于数学理解还是不够，数学在我眼前就像一个无尽的三岔路口，我不知道哪个是能走的，哪个不能走。 从这些经历中，你学到了什么？\n时间是最珍贵的。 机会是我自己浪费的。 如果重新开始，你会怎么调整你的准备策略？\n很难说。我现在很纠结到底要怎么学习数学和408. 在备考期间，哪些事情让你感到最有成就感？\n没有 哪些事情让你感到最沮丧或最有压力？\n考不上 失败 资源与支持系统 你有多少经济资源可以支持你继续考研或转换方向？\n家人支持 你的家人对你的决定持什么态度？他们的期望对你有多大影响？\n支持我的选择 这更让我为失败而痛苦 你有哪些可以寻求建议或支持的人脉资源？\n不想寻求了 我已经是失败太多了，像个小丑 你是否了解过你所在地区的就业支持或创业扶持政策？\n狗都不回河南。 心理健康与压力管理 你如何评价自己当前的心理健康状态？\n抑郁 中度乃至重度的水平。但没有确诊，只是自己感受。 绝望 想过自杀 你有哪些应对压力的有效方法？\n和朋友一起玩一会 给自己喂一点心灵鸡汤 持续备考对你的心理状态产生了什么影响？\n压力大 绝望 如果选择不同的路径，你担心会有什么样的遗憾？\n人生规划 什么样的决定会让你感到更加平静和自信？\n目前没有 人生的选择越来越少 机会成本与替代方案 如果不考研，你会如何利用这段时间？\n那该自杀了 活着还干啥 你有没有探索过国外留学或工作的可能性？\n没钱，说nmb 你有没有考虑过创业或自由职业的可能性？\n傻逼 你身边有没有不走传统学术路线但依然成功的榜样？\n目前没有 你对跨专业发展有什么看法？有没有其他领域吸引你？\n可以考虑，但是现在知识不足 决策与行动计划 如果决定继续考研，你需要做哪些调整来提高成功率？\n不好说，我可能需要更多的外部建议 如果决定放弃考研，你的第一步行动计划会是什么？\n找工作或者自杀 你希望在多长时间内做出最终决定？\n没有多少时间了 你如何衡量一个决定是否适合你？\n你永远不知道一个坑在踏入之前是否是坑 不论选择哪条路，你认为最需要克服的障碍是什么？\n时间 长期发展与适应性 你认为自己对变化和不确定性的适应能力如何？\n可以，但是最大的顾虑是家人 我更希望我是一个人，这样就可以尽情选择，大不了死了吧 你如何看待终身学习？\n必须 未来应该是一个人始终要追赶的时代 10年后的你理想中会是什么样子？\n不知道 现在完全不敢想了 你是否做好了在未来需要多次转换职业方向的准备？\n可能，但现在不想考虑 我希望稳定就是希望能尽可能呆在家人、朋友身边 你对技术变革如何改变就业市场有什么看法？这会影响你的行业吗？\n大概率 AI的创作力是划时代的，这前所未有的冲击这个时代，未来不定。 总结思考 写下三个让你最焦虑的问题\n考研 未来 工作 写下三个你最希望实现的目标\n上岸 抹掉三年浪费的时间 找到好工作 如果有一位智者只能给你一条建议，你希望得到什么样的指导？\n碌碌无为的三年，痛苦的一辈子，我感觉我一辈子都要落后。 你好！从你的问卷回答中，我能感受到你现在正处于一个很迷茫、焦虑，甚至有些绝望的阶段。面对学业、职业和未来的不确定性，你似乎觉得自己被困住了，选择的路越来越少，同时又对自己过去的努力和现在的状态感到很失望。别担心，我会尽量用简单直接的方式，帮你梳理一下思路，给你一些建议，希望能让你稍微平静下来，看到一点方向。\n先聊聊你的现状和情绪 从你的回答来看，你目前最大的压力来源是：\n考研的反复失败：数学和408（计算机专业课）让你觉得很无力，甚至觉得自己能力不足。 对未来的恐惧：AI的冲击、就业市场的烂摊子，还有生活成本的高企，让你觉得无论选哪条路都没希望。 心理状态的低谷：你提到抑郁、绝望，甚至想过自杀，这说明压力已经严重影响到你的身心健康了。 首先，我想说：你现在的情绪很正常。很多人到了人生转折点，尤其是面对不确定性和失败时，都会有类似的感受。你不是一个人在挣扎，也不是什么“小丑”。只是现在的情况让你暂时看不到出路而已。\n从你的回答中提取几个关键点 你对AI的兴趣和担忧 你提到想试试人工智能这条路，认为它是未来，但又担心AI取代码农的工作。这种矛盾其实很真实，因为技术变革确实在重塑行业。不过，AI既是威胁，也是机会——它不只会取代人，也会创造新的岗位，比如需要理解AI、开发AI的人。 你对专业的态度 你学的是信息工程，但讨厌硬件和电子，喜欢写代码和游戏设计。这说明你不是完全没方向，而是对某些领域有热情，只是觉得它们现在不现实。 你的核心需求 你反复提到“稳定”“工作与生活平衡”“给父母养老”“和朋友享受人生”。这说明你不是那种只追求成就感或社会认可的人，你更想要一种踏实、有归属感的生活。 自我评价偏低 你觉得自己“没优势”“能力不足”“和优秀人才差距很大”，但从你的兴趣（代码、游戏设计）和坚持考研的努力来看，你其实是有潜力的，只是现在被失败和焦虑蒙住了眼睛。 针对你的情况，几个建议 1. 先照顾好自己的心理健康 你现在的状态很低落，甚至有自杀的想法，这不是小事。建议你：\n找人聊聊：可以是朋友、家人，或者专业的心理咨询师（很多大学有免费心理服务）。你提到和朋友玩一会能缓解压力，那就多给自己安排这样的时间。 给自己喘息的空间：考研的压力很大，但逼自己太紧可能会适得其反。每天留点时间做喜欢的事，比如写代码或打游戏，哪怕只是一小时，也能让你喘口气。 2. 重新看待考研这条路 考研对你来说既是目标，也是负担。你觉得它“非常必要”，但失败的经历让你怀疑自己。问自己几个问题：\n我考研是为了什么？ 是真的对AI研究感兴趣，还是只为了学历镀金、找个好工作？如果是后者，也许有其他路径也能达到目标。 我还能坚持多久？ 你说时间不多了，但如果再考一次，你有具体的计划吗？比如找个数学家教、报个408培训班，而不是一个人硬撑。 如果再失败，你愿意接受“放弃考研”这个结果吗？从你的回答来看，不考研让你觉得“活着没意义”，但其实工作和生活还有很多可能性。 建议：如果决定再考一次，马上行动起来，找外部资源（老师、同学、网课）帮忙，别自己钻牛角尖。如果觉得考研让自己太痛苦，不如先暂停，给自己3-6个月试试别的路。\n3. 探索其他出路，别把鸡蛋放一个篮子 你对就业市场很悲观，但其实有些方向可以试试：\nAI相关的工作：你对AI感兴趣，不一定要读研才能入行。可以自学一些基础（比如Python、机器学习入门），找个初级岗位或者实习，边做边学。 游戏设计/代码相关的小公司：你提到压力大，但小公司可能更灵活，能让你积累经验。如果AI冲击代码行业，你已经有了AI的兴趣和基础，反而可能是优势。 稳定型工作：运营商虽然工资低，但如果你想要稳定，可以作为过渡，先站稳脚跟，再慢慢找机会。 行动建议：拿出一周时间，刷刷招聘网站（比如Boss直聘、拉勾网），看看你专业相关的岗位要求是什么，然后针对性学点东西（比如某个框架、工具）。别觉得自己不行，很多初级岗位其实没那么高门槛。\n4. 接受现实，调整期待 你提到北京房价高、生活成本大，996环境不现实，这确实是很多人面临的难题。但“稳定”和“自由”不一定非要在超一线城市实现。你可以考虑：\n二线城市：生活成本低，压力小，离家人近，可能更符合你想要的“和朋友享受人生”。 远程工作：如果擅长代码，可以试试接外包或者找远程岗位，时间更灵活。 5. 给自己定个短期目标 你现在太焦虑，因为未来太模糊。不如先定个小目标，比如：\n“一个月内学会一个AI相关的技能（比如TensorFlow基础）。” “两周内投10份简历，看看市场反馈。” “每天花半小时写代码，找回点成就感。” 小目标能让你有掌控感，不会觉得自己一直在浪费时间。\n回答你的最后三个问题 三个让你最焦虑的问题：考研、未来、工作。 建议：考研可以再试一次，但别把它当唯一出路；未来不确定，但从小步开始走就不会迷失；工作不好找，但先试试总比空想强。 三个最希望实现的目标：上岸、抹掉三年浪费的时间、找到好工作。 现实点说：上岸可以努力，但别强求；时间回不去，但从现在开始行动就不算浪费；好工作需要积累，先找个能接受的起点。 智者的一条建议：你说“碌碌无为的三年，痛苦的一辈子”，但我觉得智者可能会告诉你： “过去的三年不是白费，它让你看清了什么重要；未来的一辈子也不一定痛苦，只要你愿意迈出一步，路就会慢慢清晰。” 最后想对你说 你不是失败者，也不是没希望的人。你有兴趣（代码、游戏设计），有目标（稳定、照顾家人），只是现在被困住了。别急着否定自己，也别急着把所有问题都解决。一步步来，先让自己好起来，再去面对考研、工作这些大事。\n如果你愿意，可以告诉我你接下来想干什么，或者有什么具体问题想聊，我会尽量帮你出主意！\n","date":"2025-03-18","permalink":"https://22cs.github.io/post/20250318-z1ryamy.html","title":"2025-03-18"},{"content":"13:45:07\n现在似乎好一点\n要不试试每天一个鸡汤小故事吧\n想办法自救\n12:01:24\n三四个小时过去了，什么都不想动，今天格外的焦躁。\n00:21:02\n真的是想吐，每天到了夜里都想吐\n情绪\n唉\n真的是深渊，完全的深渊\n为什么啊\n唉\n情绪啊情绪\n也是我实力不足\n今天要把编译原理的搞完\n然后人工智能的开了。\n真的想死。\n","date":"2025-03-17","permalink":"https://22cs.github.io/post/20250317-1yacoa.html","title":"2025-03-17"},{"content":"23:28:52\n今天，唉\n唉，绝望还是像漩涡，我被卷着，无法脱身\n至今还是难以接受，我真的无法相信\n唉，痛苦\n搭建一个博客，记录一下吧。\n人如果死了\n还是不能死，那个日本乐队的，活着，至少给别人带来了美好的记忆。死了，就只是懦夫。\n生命艰难啊\n我到底要怎么才能追上别人\n痛苦\n","date":"2025-03-16","permalink":"https://22cs.github.io/post/250316-2lu4u4.html","title":"25-03-16 "},{"content":"*This is a follow-up to my article “​The 70% problem: Hard truths about AI-assisted coding*​ ”这是我的文章“ *70% 的问题：关于人工智能辅助编码的残酷事实*​ ”的后续\nAI coding assistants like Cursor, Cline, Copilot and WindSurf have transformed how software is built, shouldering much of the grunt work and boilerplate. Yet, as experienced developers and industry leaders note, there remains a crucial portion of software engineering that AI does not handle well – roughly that last “30%” of the job that separates a toy solution from a production-ready system. This gap includes the hard parts: understanding complex requirements, architecting maintainable systems, handling edge cases, and ensuring code correctness. In other words, while AI can generate code, it often struggles with engineering.\nCursor、Cline、Copilot 和 WindSurf 等 AI 编码助手已经改变了软件的构建方式，承担了大部分繁重的工作和样板。然而，正如经验丰富的开发人员和行业领导者所指出的那样，软件工程中仍有一部分关键部分是 AI无法处理的——大约是将玩具解决方案与可用于生产的系统区分开来的最后“30%”的工作。这一差距包括困难的部分：理解复杂的需求、构建可维护的系统、处理极端情况以及确保代码的正确性。换句话说，虽然 AI 可以生成代码，但它在工程方面往往举步维艰。\nTim O’Reilly, reflecting on decades of technology shifts, reminds us that each leap in automation has changed how we program but not why we need skilled programmersWe’re not facing the end of programming, but rather “the end of programming as we know it today,” meaning developers’ roles are evolving, not evaporating.\n蒂姆·奥莱利 (Tim O’Reilly) 回顾了几十年的技术变迁，提醒我们，自动化的每一次飞跃都改变了我们的编程方式，但并没有改变我们需要熟练程序员的原因。我们面临的不是编程的终结，而是“我们今天所知的编程的终结”，这意味着开发人员的角色正在演变，而不是消失。\nThe challenge for today’s engineers is to embrace AI for what it does best (the first 70%) while doubling down on the durable skills and insights needed for the remaining 30%. This article dives into expert insights to identify which human skills remain crucial. We’ll explore what senior developers should continue to leverage and what junior developers must invest in to thrive alongside AI.\n当今工程师面临的挑战是，在充分利用人工智能最擅长的领域（前 70%）的同时，加倍培养剩余 30% 所需的持久技能和洞察力。本文深入探讨专家见解，以确定哪些人类技能仍然至关重要。我们将探讨高级开发人员应继续利用哪些技能，以及初级开发人员必须投资哪些技能才能与人工智能一起蓬勃发展。\nThe goal: pragmatic guidance for maximizing the value of that irreplaceable 30%, with actionable takeaways for engineers at every level.\n目标：提供实用的指导，最大限度地发挥那不可替代的 30% 的价值，并为各个级别的工程师提供可行的指导。\nAI-based coding tools are astonishingly good at certain tasks. They excel at producing boilerplate, writing routine functions, and getting projects most of the way to completion. In fact, many developers find that an AI assistant can implement an initial solution that covers roughly 70% of the requirements.\n基于人工智能的编码工具在某些任务上表现出色。它们擅长生成样板、编写常规函数以及完成大部分项目。事实上，许多开发人员发现，人工智能助手可以实现涵盖大约 70% 需求的初始解决方案。\nThis is often the straightforward, patterned part of the work – the kind of code that follows well-trod paths or common frameworks. As one Hacker News commenter observed, AI is superb at handling the “accidental complexity” of software (the repetitive, mechanical stuff) while the “essential complexity” – understanding and managing the inherent complexity of a problem – remains on human shoulders. In Fred Brooks’ classic terms, AI tackles the incidental, but not the intrinsic, difficulties of development.\n这通常是工作中简单而有模式的部分——遵循常规路径或通用框架的代码。正如一位 Hacker News 评论员所观察到的，人工智能在处理软件的 “偶然复杂性” （重复、机械的东西）方面非常出色，而 “本质复杂性” ——理解和管理问题固有的复杂性——仍然落在人类的肩上。用 Fred Brooks 的经典术语来说，人工智能解决了开发过程中的偶然困难，而不是内在困难。\nWhere do these tools struggle? Experienced engineers consistently report a “last mile” gap. AI can generate a plausible solution, but the final 30% – covering edge cases, refining the architecture, and ensuring maintainability – “needs serious human expertise”.\n这些工具的难点在哪里？经验丰富的工程师一直报告“最后一英里”的差距。人工智能可以生成一个合理的解决方案，但最后的 30% ——涵盖边缘情况、改进架构和确保可维护性——“需要大量的人类专业知识”。\nFor example, an AI might give you a function that technically works for the basic scenario, but it won’t automatically account for unusual inputs, race conditions, performance constraints, or future requirements unless explicitly told. AI can get you most of the way there, but that final crucial 30% (edge cases, keeping things maintainable, and solid architecture) needs serious human expertise.\n例如，人工智能可能会为您提供一个在技术上适用于基本场景的功能，但除非明确告知，否则它不会自动考虑异常输入、竞争条件、性能限制或未来需求。人工智能可以帮您实现大部分目标，但最后至关重要的 30%（边缘情况、保持可维护性和稳固的架构）需要人类的专业知识。\nMoreover, AI has a known tendency to generate convincing but incorrect output. It may introduce subtle bugs or “hallucinate” nonexistent functions and libraries. Steve Yegge wryly likens today’s large language models (LLMs) to “wildly productive junior developers” – incredibly fast and enthusiastic, but “potentially whacked out on mind-altering drugs,” prone to concocting crazy or unworkable approaches.\n此外，众所周知，人工智能倾向于生成令人信服但不正确的输出。它可能会引入微妙的错误或“产生幻觉”不存在的函数和库。Steve Yegge 讽刺地将当今的大型语言模型 (LLMs) 比作 “非常高效的初级开发人员” ——速度极快、热情高涨，但 “可能因服用精神错乱的药物而精神错乱”， 容易想出疯狂或不可行的方法。\nIn Yegge’s words, an LLM can spew out code that looks polished at first glance, yet if a less experienced developer naively says “Looks good to me!” and runs with it, hilarity (or disaster) ensues in the following weeks. The AI doesn’t truly understand the problem; it stitches together patterns that usually make sense. Only a human can discern whether a seemingly fine solution hides long-term landmines. Simon Willison echoed this after seeing an AI propose a bewitchingly clever design that only a senior engineer with deep understanding of the problem could recognize as flawed. The lesson: AI’s confidence far exceeds its reliability.\n用 Yegge 的话来说，LLM 可以写出乍一看很完美的代码，但如果经验不足的开发人员天真地说“我觉得这很好！”并照搬了，那么接下来的几周就会发生滑稽的事情（或灾难） 。人工智能并没有真正理解问题；它只是将通常有意义的模式拼凑在一起。只有人类才能辨别看似不错的解决方案是否隐藏着长期的地雷。Simon Willison在看到人工智能提出了一个非常巧妙的设计后也表达了同样的看法，只有对问题有深入了解的高级工程师才能识别出这个设计存在缺陷。教训是：人工智能的信心远远超过它的可靠性。\nCrucially, current AIs do not create fundamentally new abstractions or strategies beyond their training data. They won’t invent a novel algorithm or an innovative architecture for you – they remix what’s known. They also won’t take responsibility for decisions. As one engineer noted, “AIs don’t have ‘better ideas’ than what their training data contains. They don’t take responsibility for their work.”\n至关重要的是，当前的人工智能不会在其训练数据之外创造全新的抽象或策略。它们不会为您发明一种新颖的算法或创新的架构——它们只是重新组合已知的内容。它们也不会对决策负责。正如一位工程师所说， “人工智能没有比其训练数据所包含的‘更好的想法’。它们不对自己的工作负责。 ”\nAll of this means that the creative and analytical thinking – deciding what to build, how to structure it, and why – firmly remains a human domain. In summary, AI is a force multiplier for developers, handling the repetitive 70% and giving us a “turbo boost” in productivity. But it is not a silver bullet that can replace human judgment. The remaining 30% of software engineering – the hard parts – still requires skills that only trained, thoughtful developers can bring. Those are the durable skills to focus on. As one discussion put it: “AI is a powerful tool, but it’s not a magic bullet… human judgment and good software engineering practices are still essential.”\n所有这些都意味着，创造性和分析性思维——决定构建什么、如何构建以及为什么构建——仍然是人类的领域。总而言之，人工智能是开发人员的力量倍增器，处理重复的 70% 工作，并为我们带来生产力的“涡轮增压”。但它并不是可以取代人类判断的灵丹妙药。软件工程的其余 30%——最难的部分——仍然需要只有训练有素、深思熟虑的开发人员才能掌握的技能。这些是需要关注的持久技能。正如一次讨论所说： “人工智能是一种强大的工具，但它不是灵丹妙药……人类的判断力和良好的软件工程实践仍然必不可少。 ”\nTo thrive in an AI-enhanced development world, engineers should double down on the enduring skills and practices that AI cannot (yet) replicate. These capabilities will remain crucial no matter how advanced our tools become. In particular, focus on strengthening the following:\n为了在人工智能增强的开发世界中蓬勃发展，工程师应该加倍努力掌握人工智能无法复制的持久技能和实践。无论我们的工具变得多么先进，这些能力仍然至关重要。特别是要重点加强以下方面：\nSystem design \u0026 architectural thinking: Designing a coherent system requires understanding trade-offs, constraints, and the “big picture” beyond writing a few functions. AI can generate code but won’t automatically choose the best architecture for a complex problem. The overall design – how components interact, how data flows, how to ensure scalability and security – is part of that 30% that demands human insight. Senior developers have long honed this skill, and junior devs should actively cultivate it. Think in terms of patterns and principles (e.g. separation of concerns, modularity) – these guide an AI-generated solution toward maintainability. Remember, solid architecture doesn’t emerge by accident; it needs an experienced human hand on the wheel.\n系统设计和架构思维： 设计一个连贯的系统需要理解权衡、约束和“全局”，而不仅仅是编写几个函数。人工智能可以生成代码，但不会自动为复杂问题选择最佳架构。整体设计——组件如何交互、数据如何流动、如何确保可扩展性和安全性——是需要人类洞察力的 30% 的一部分。高级开发人员长期以来一直在磨练这项技能，初级开发人员应该积极培养它。从模式和原则的角度思考（例如关注点分离、模块化）——这些会引导人工智能生成的解决方案走向可维护性。请记住，坚实的架构不会偶然出现；它需要经验丰富的人手来掌控。 Handling edge cases \u0026 ambiguity: Real-world software lives rife with oddball scenarios and changing requirements. AI tends to solve the general case by default. It’s up to the developer to ask “What if…?” and probe for weaknesses. Durable skill here is critical thinking and foresight – enumerating edge cases, anticipating failures, and addressing them in code or design. This might mean thinking of null input, network outages, unusual user actions, or integration with other systems. Domain knowledge plays a role too: understanding the business context or the user’s environment will reveal edge cases that a generic AI simply doesn’t know about. Experienced engineers habitually consider these scenarios; juniors should practice systematically testing boundaries and questioning assumptions.\n处理极端情况和歧义： 现实世界中的软件充斥着奇怪的场景和不断变化的需求。人工智能倾向于默认解决一般情况。开发人员需要问“如果……会怎样？”并探究弱点。这里持久的技能是批判性思维和远见——列举极端情况，预测故障，并在代码或设计中解决它们。这可能意味着考虑空输入、网络中断、不寻常的用户操作或与其他系统的集成。领域知识也发挥着作用：了解业务背景或用户环境将揭示通用人工智能根本不知道的极端情况。经验丰富的工程师习惯性地考虑这些场景；初级工程师应该系统地练习测试边界和质疑假设。 Code review \u0026 quality assurance: With AI writing lots of code, the ability to rigorously review and test that code becomes even more critical. “Everyone will need to get a lot more serious about testing and reviewing code,” Steve Yegge emphasizes. Treat AI-generated code as you would a human junior developer’s output – you are the code reviewer responsible for catching bugs, security flaws, or sloppy implementations. This means strong skills in unit testing, integration testing, and debugging. Writing good tests is a durable skill that forces you to understand the spec and verify correctness. It’s wise to assume nothing works until proven otherwise. As one developer noted, AI often yields “functional but horribly optimized code” until you guide it through iterative improvement. Cultivate a testing mindset: verify every critical logic path, use static analysis or linters, and don’t shy away from rewriting AI-given code if it doesn’t meet your quality bar. Quality assurance is not an area to outsource to AI – it’s where human diligence shines.\n代码审查和质量保证： 由于人工智能编写了大量代码，严格审查和测试代码的能力变得更加重要。 “每个人都需要更加认真地对待测试和审查代码，” Steve Yegge 强调道。将人工智能生成的代码视为人类初级开发人员的输出——您是负责发现错误、安全漏洞或草率实现的代码审查者。这意味着您需要具备强大的单元测试、集成测试和调试技能。编写良好的测试是一项持久的技能，它迫使您了解规范并验证正确性。在证明其他方法无效之前，最好假设它们都行不通。正如一位开发人员所说，人工智能通常会产生 “功能齐全但优化糟糕的代码”， 除非您指导它进行迭代改进。培养测试思维：验证每一条关键的逻辑路径，使用静态分析或 linters，如果人工智能给出的代码不符合您的质量标准，请不要回避重写它。质量保证不是可以外包给人工智能的领域——这是人类勤奋的闪光点。 Debugging \u0026 problem-solving skills: When software doesn’t work as expected, you need real problem-solving chops to diagnose and fix it. AI can assist with debugging (for example, by suggesting possible causes), but it lacks true understanding of the specific context in which your application runs. Being able to reason through a complex bug – reproducing it, isolating the cause, understanding the underlying systems (OS, databases, libraries) – is a timeless engineering skill. This often requires a strong grasp of fundamentals (how memory and state work, concurrency, etc.) that junior developers must learn through practice. Use AI as a helper (it might explain error messages or suggest fixes), but don’t rely on it blindly. The skill to methodically troubleshoot and apply first principles when debugging sets great developers apart. It’s also a feedback loop: debugging AI-written code will teach you to prompt the AI better next time or avoid certain patterns.\n调试和解决问题的能力： 当软件不能按预期工作时，你需要真正的解决问题的能力来诊断和修复它。人工智能可以协助调试（例如，通过建议可能的原因），但它缺乏对应用程序运行的特定环境的真正理解。能够推理复杂的错误——重现它、隔离原因、理解底层系统（操作系统、数据库、库）——是一项永恒的工程技能。这通常需要牢牢掌握基础知识（内存和状态如何工作、并发性等），初级开发人员必须通过实践来学习。使用人工智能作为助手（它可能会解释错误消息或建议修复），但不要盲目依赖它。在调试时有条不紊地排除故障和应用第一原则的技能让优秀的开发人员脱颖而出。这也是一个反馈循环：调试人工智能编写的代码将教你下次更好地提示人工智能或避免某些模式。 Maintaining context \u0026 Big-Picture understanding: Software projects are not just isolated coding tasks; they exist within a larger context of user needs, timelines, legacy code, and team processes. AI has no innate sense of your project’s history or the rationale behind certain decisions (unless you explicitly feed all that into the prompt, which is often impractical). Humans need to carry that context. A durable skill here is systems thinking – understanding how a change in one part of the system might impact another, how the software serves the business objectives, and how all the moving pieces connect. This holistic perspective lets you use AI outputs appropriately. For example, if an AI suggests a clever shortcut that contradicts a regulatory requirement or company convention, you’ll catch it because you know the context. Junior engineers should make a point to learn the background of their projects and read design docs, so they can develop judgment about what fits and what doesn’t.\n保持背景和全局理解： 软件项目不仅仅是孤立的编码任务；它们存在于更大的用户需求、时间线、遗留代码和团队流程的背景中。人工智能无法天生了解您的项目历史或某些决策背后的理由（除非您将所有这些明确地输入到提示中，但这通常是不切实际的）。人类需要掌握这种背景。这里一个持久的技能是系统思维——了解系统一个部分的变化如何影响另一个部分，软件如何服务于业务目标，以及所有移动部件如何连接。这种整体视角让您可以适当地使用人工智能输出。例如，如果人工智能建议一个巧妙的捷径，与监管要求或公司惯例相矛盾，你会抓住它，因为你知道背景。初级工程师应该注意了解他们项目的背景并阅读设计文档，这样他们就可以判断什么合适，什么不合适。 Communication \u0026 collaboration: Building software is a team sport. AI doesn’t attend meetings (thank goodness) – humans still must talk to other humans to clarify requirements, discuss trade-offs, and coordinate work. Strong communication skills are as valuable as ever. Senior developers should leverage their ability to explain complex ideas, mentor others, and articulate vision. Junior developers should practice asking good questions and describing problems clearly (both to colleagues and to AI). Interestingly, prompting an AI is itself a form of communication; it requires you to precisely express what you want. This overlaps with a core engineering skill: requirements analysis. If you can formulate a clear prompt or spec, it means you’ve thought through the problem. Additionally, sharing knowledge, writing documentation, and reviewing others’ code are collaborative skills that AI cannot replace. In the future, as developers work “with” AI, the human-to-human collaboration in a team – making sure the right problems are being solved – stays vital. One emerging trend is that developers may focus more on high-level design discussions (often with AI as a participant) and on coordinating tasks, essentially taking on more of a conductor role. Communication and leadership skills will serve you well in that conductor’s seat.\n沟通与协作： 开发软件是一项团队运动。人工智能不会参加会议（谢天谢地）——人类仍然必须与其他人交谈以澄清需求、讨论权衡和协调工作。强大的沟通技巧比以往任何时候都更有价值。高级开发人员应该利用他们解释复杂想法、指导他人和表达愿景的能力。初级开发人员应该练习提出好问题并清楚地描述问题（对同事和人工智能）。有趣的是，提示人工智能本身就是一种沟通形式；它要求你准确地表达你想要什么。这与一项核心工程技能重叠：需求分析。如果你能制定明确的提示或规范，这意味着你已经仔细考虑过这个问题。此外，分享知识、编写文档和审查他人的代码是人工智能无法取代的协作技能。在未来，当开发人员“与”人工智能一起工作时，团队中的人与人之间的协作——确保解决正确的问题——仍然至关重要。一个新兴趋势是，开发人员可能会更多地关注高层设计讨论（通常以 AI 作为参与者）和协调任务，本质上更多地承担指挥角色。沟通和领导能力将使您在指挥席上大有裨益。 Adaptability \u0026 continuous learning: Finally, a meta-skill: the ability to learn new tools and adapt to change. The field of AI-assisted development is evolving rapidly. Senior engineers who keep an open mind and learn how to effectively use new AI features will remain ahead of the curve – Tim O’Reilly suggests that developers who are “eager to learn new skills” will see the biggest productivity boosts from AI. Junior developers, in turn, should invest in learning the fundamentals deeply and staying curious about new techniques. This combination enables you to harness AI as a tool without becoming dependent on it. It’s a balancing act: use AI to accelerate your growth, but also occasionally practice without it to ensure you’re not skipping core learning (some developers do an “AI detox” periodically to keep their raw coding skills sharp. In short, be the engineer who learns constantly – that’s a career-proof skill in any era.\n适应性和持续学习： 最后，还有一项元技能：学习新工具和适应变化的能力。人工智能辅助开发领域正在迅速发展。保持开放心态并学习如何有效使用新人工智能功能的高级工程师将保持领先地位——Tim O’Reilly 认为， “渴望学习新技能” 的开发人员将从人工智能中获得最大的生产力提升。初级开发人员则应该投入精力深入学习基础知识​ ，并对新技术保持好奇心。这种结合使你能够利用人工智能作为一种工具，而不会依赖它。这是一种平衡行为：使用人工智能来加速你的成长，但偶尔也要练习不使用人工智能，以确保你没有跳过核心学习（一些开发人员会定期进行“人工智能排毒”，以保持他们原始的编码技能敏锐）。简而言之，做一个不断学习的工程师——这是在任何时代都适合职业发展的技能。 These skills form the human advantage in software engineering. They are durable because they don’t expire with the next framework or tooling change; if anything, AI’s rise makes them more pronounced. Simon Willison has argued that AI assistance actually makes strong programming skills more valuable, not less, because those with expertise can leverage the tools to far greater effect.\n这些技能构成了软件工程中的人类优势。它们之所以经久不衰，是因为它们不会随着下一个框架或工具的改变而过期；如果说有什么不同的话，那就是人工智能的崛起使它们更加突出。西蒙·威利森 (Simon Willison) 认为，人工智能的帮助实际上使强大的编程技能更有价值，而不是更少，因为那些拥有专业知识的人可以充分利用这些工具，发挥更大的作用。\nA powerful machine in unskilled hands can be dangerous or wasted, but in capable hands it’s transformative. In the AI era, an experienced engineer is like a seasoned pilot with a new advanced co-pilot: the journey can go faster and farther, but the pilot must still navigate the storms and ensure a safe landing.\n一台强大的机器落入不熟练的人手中可能会很危险或浪费，但落入熟练的人手中却可以带来变革。在人工智能时代，经验丰富的工程师就像经验丰富的飞行员和新的高级副驾驶：旅程可以更快更远，但飞行员仍必须驾驭风暴，确保安全着陆。\nFor senior engineers, the advent of AI coding tools should be seen as an opportunity to amplify your impact – if you leverage your experience in the right ways. Senior developers typically possess deep domain knowledge, intuition for what could go wrong, and the ability to make high-level technical decisions.\n对于高级工程师来说，AI 编码工具的出现应该被视为扩大影响力的机会——前提是你能以正确的方式利用自己的经验。高级开发人员通常拥有深厚的领域知识、对可能出现的问题的直觉以及做出高级技术决策的能力。\nThese strengths are part of the 30% that AI can’t handle alone. Here’s how seasoned developers can maximize their value:\n这些优势是 AI 无法独自处理的 30% 的一部分。以下是经验丰富的开发人员如何最大限度地发挥其价值的方法：\nBe the architect and the Editor-in-Chief: Let AI handle the first draft of code, while you focus on architecting the solution and then refining the AI’s output. In many organizations, we may see a shift where teams need “only senior associates” who “(a) describe the tasks to be done (i.e. create the prompts), and (b) review the resulting work for accuracy and correctness”. Embrace that model. As a senior dev, you can translate complex requirements into effective prompts or specifications for an AI assistant, then use your critical eye to vet every line produced. You are effectively pair-programming with the AI – it’s the fast typer, but you’re the brain. Maintain high standards during review: ensure the code meets your organization’s quality, security, and performance benchmarks. By acting as architect and editor, you prevent the “high review burden” from overwhelming you. (A cautionary note: if junior staff simply throw raw AI output over the wall to you, push back – instill a process where they must verify AI-generated work first, so you’re not the sole safety net.\n成为架构师和主编： 让 AI 处理代码的初稿，而您则专注于设计解决方案，然后优化AI 的输出。在许多组织中，我们可能会看到一种转变，即团队只需要“高级助理”，他们“（a）描述要完成的任务（即创建提示），（b）审查最终工作的准确性和正确性”。接受这种模式。作为高级开发人员，您可以将复杂的需求转化为有效的提示或 AI 助手规范，然后用您的批判眼光审查生成的每一行代码。您实际上是在与 AI 结对编程——它是快速打字者，但您是大脑。在审查期间保持高标准：确保代码符合组织的质量、安全性和性能基准。通过充当架构师和编辑，您可以避免“高审查负担”压垮您。 （注意事项：如果初级员工只是将原始的人工智能输出扔给你，请反击——灌输一个必须首先验证人工智能生成的工作的流程，这样你就不是唯一的安全网。） Use AI as a force multiplier for big initiatives: Senior engineers often drive large projects or tackle hairy refactors that juniors can’t approach alone. AI can supercharge these efforts by handling a lot of mechanical changes or exploring alternatives under your guidance. Steve Yegge introduced the term Chat-Oriented Programming (​CHOP​ ) for this style of working – “coding via iterative prompt refinement” with the AI as a collaborator. Leverage CHOP to be more ambitious in what you take on. As Simon Willison noted, having AI assistance “lowers the bar for when a project is worth investing time in at all” since what might have taken days could be done in hours. Senior devs can thus attempt those “wouldn’t it be nice if…?” projects that always seemed slightly out of reach. The key is to remain the guiding mind: you decide which tools or approaches to pursue, and you integrate the pieces into a cohesive whole. Your experience allows you to sift the AI’s suggestions – accepting those that fit, rejecting those that don’t.\n使用 AI 作为大计划的力量倍增器： 高级工程师经常推动大型项目或解决初级工程师无法独自完成的棘手重构。AI 可以通过在您的指导下处理大量机械变化或探索替代方案来增强这些努力。Steve Yegge 为这种工作方式引入了聊天导向编程 ( CHOP ) 一词——“通过迭代快速改进进行编码”，AI 作为合作者。利用 CHOP 让您在承担的工作中更具雄心。正如 Simon Willison 所说，拥有 AI 的帮助“降低了项目值得投入时间的门槛”，因为原本可能需要几天才能完成的工作可以在几个小时内完成。因此，高级开发人员可以尝试那些“如果……会不会很好？”的项目，这些项目似乎总是有点遥不可及。关键是要保持指导思想：您决定采用哪些工具或方法，并将各个部分整合成一个有凝聚力的整体。您的经验让您可以筛选 AI 的建议——接受合适的建议，拒绝不合适的建议。 Mentor and set standards in the AI Era: Another crucial role for senior engineers is to coach less experienced team members on effective use of AI and on the timeless best practices. You likely have hard-won knowledge of pitfalls that juniors may not see (memory leaks, off-by-one errors, concurrency hazards, etc.). With juniors now potentially generating code via AI, it’s important to teach them how to self-review and test that code. Set an example by demonstrating thorough testing of AI contributions, and encourage a culture of not blindly trusting machine output. Some organizations (and even law firms) have instituted rules that if someone uses an AI, they must disclose it and verify the results themselves – not just assume a senior will catch mistakes. Seniors should champion such norms on their teams: AI is welcome, but diligence is required. By mentoring juniors in this way, you offload some of the oversight burden and help them grow into that 30% skillset more quickly.\n在人工智能时代指导和制定标准： 高级工程师的另一个关键角色是指导经验不足的团队成员有效使用人工智能和永恒的最佳实践。您可能已经掌握了初级工程师可能看不到的陷阱（内存泄漏、差一错误、并发风险等）的来之不易的知识。由于初级工程师现在可能通过人工智能生成代码，因此教会他们如何自我审查和测试代码非常重要。通过展示对人工智能贡献的全面测试来树立榜样，并鼓励一种不盲目信任机器输出的文化。一些组织（甚至律师事务所）已经制定了规则，如果有人使用人工智能，他们必须披露并亲自验证结果——而不仅仅是假设高级工程师会发现错误。高级工程师应该在他们的团队中倡导这样的规范：欢迎人工智能，但需要勤奋。通过以这种方式指导初级工程师，您可以减轻一些监督负担，并帮助他们更快地掌握那 30% 的技能。 Continue to cultivate domain mastery and foresight: Your broad experience and context are more important than ever. Senior developers often have historical knowledge of why things are built a certain way or how an industry operates. This domain mastery lets you catch AI’s missteps that a newcomer wouldn’t. Continue investing in understanding the problem domain deeply – that might mean staying up to date with the business’s needs, user feedback, or new regulations that affect the software. AI won’t automatically incorporate these considerations unless told. When you combine domain insight with AI’s speed, you get the best outcomes. Also, use your foresight to steer AI. For instance, if you know that a quick fix will create maintenance pain down the line, you can instruct the AI to implement a more sustainable solution. Seniors should trust their instincts honed over years – if a code snippet “looks off” or too good to be true, dig in. Nine times out of ten there’s something your intuition spotted that the AI didn’t account for. Being able to foresee the second- and third-order effects of code is a hallmark of senior engineers; don’t let the convenience of AI blunt that habit. Instead, apply it to whatever the AI produces.\n继续培养领域精通和远见： 你的广泛经验和背景比以往任何时候都重要。高级开发人员通常具有历史知识，了解事物以某种方式构建的原因或行业如何运作。这种领域精通让你能够发现新手无法发现的人工智能的失误。继续投资深入了解问题领域——这可能意味着要随时了解业务需求、用户反馈或影响软件的新法规。除非得到告知，否则人工智能不会自动纳入这些考虑因素。当你将领域洞察力与人工智能的速度结合起来时，你会得到最好的结果。此外，利用你的远见来引导人工智能。例如，如果你知道快速修复会在后期造成维护麻烦，你可以指示人工智能实施更可持续的解决方案。资深开发人员应该相信他们多年磨练出来的直觉——如果一个代码片段“看起来不对劲”或好得令人难以置信，那就深入研究。十有八九，你的直觉会发现人工智能没有考虑到的东西。能够预见代码的二阶和三阶效应是高级工程师的标志；不要让人工智能的便利削弱这一习惯。相反，将其应用于人工智能产生的任何东西。 Leverage soft skills and leadership: With AI shouldering some coding, senior developers can spend more energy on the human side of engineering. This includes communicating with stakeholders, leading design meetings, and making judgment calls that align technology with business strategy. Tim O’Reilly and others suggest that as rote coding becomes easier, the value shifts to deciding what to build and how to orchestrate complex systems. Senior engineers are often the ones orchestrating and seeing the big picture. Step up to that role. Volunteer to write that architecture roadmap, to evaluate which tools (AI or otherwise) to adopt, or to define coding guidelines for AI usage in your org. These are tasks AI can’t do – they require experience, human discretion and often cross-team consensus-building. By amplifying your leadership presence, you ensure that you’re not just a code generator (replaceable by another tool), but an indispensable technical leader guiding the team in this new era.\n利用软技能和领导力： AI 承担了一些编码工作，高级开发人员可以将更多精力投入到工程的人性化方面。这包括与利益相关者沟通、主持设计会议以及做出将技术与业务战略相结合的判断。Tim O’Reilly 和其他人认为，随着死记硬背的编码变得越来越容易，价值将转移到决定构建什么以及如何协调复杂系统。高级工程师通常是协调和看清大局的人。承担起这个角色。自愿编写架构路线图，评估采用哪些工具（AI 或其他），或定义组织中 AI 使用的编码指南。这些是 AI 无法完成的任务——它们需要经验、人类的判断力，并且通常需要跨团队达成共识。通过扩大你的领导力，你可以确保你不仅仅是一个代码生成器（可以被其他工具替代），而是一个在这个新时代指导团队不可或缺的技术领导者。 In short, continue doing what seasoned developers do best: see the forest for the trees.\n简而言之，继续做经验丰富的开发人员最擅长的事情：只见树木，不见森林。\nAI will help you chop a lot more trees, but someone still needs to decide which trees to cut and how to build a stable house from the lumber. Your judgment, strategic thinking, and mentorship are now even more critical. A senior developer who harnesses AI effectively can be dramatically more productive than one who doesn’t – but the ones who truly excel will be those who apply their human strengths to amplify the AI’s output, not just let the AI run wild.\n人工智能将帮助你砍伐更多的树木，但仍然需要有人决定砍伐哪些树木以及如何用木材建造坚固的房屋。你的判断力、战略思维和指导现在变得更加重要。有效利用人工智能的高级开发人员的生产力可能比没有利用人工智能的高级开发人员高得多——但真正出类拔萃的人将是那些利用人类优势来扩大人工智能产出的人，而不是让人工智能肆意妄为。\nAs one Redditor quipped, “AI is a programming force multiplier” that “greatly increases the productivity of senior programmers” . The multiplier effect is real, but it’s your expertise that’s being multiplied. Keep that expertise sharp and at the center of the development process.\n正如一位 Reddit 用户所说， “人工智能是一种编程力量倍增器” ，它 “极大地提高了高级程序员的生产力” 。倍增效应是真实存在的，但倍增的是你的专业知识。保持专业知识的敏锐性，并将其置于开发过程的中心。\nIf you’re a junior or less-experienced developer, you might feel a mix of excitement and anxiety about AI. On one hand, AI assistants can write code that you might not know how to write yourself, potentially accelerating your learning. On the other hand, there are headlines like “death of the junior developer” suggesting entry-level coding jobs are at risk.\n如果你是初级或经验不足的开发人员，你可能会对人工智能感到兴奋和焦虑。一方面，人工智能助手可以编写你自己可能不知道如何编写的代码，这可能会加速你的学习。另一方面，有“初级开发人员的死亡”之类的标题暗示入门级编码工作面临风险。\nThe truth is somewhere in between: AI is changing the early-career experience, but junior developers are not obsolete. You do, however, need to be proactive in developing skills that ensure you’re contributing value beyond what an AI can churn out. Here’s how to invest in yourself to handle that 30% gap effectively:\n事实介于两者之间：人工智能正在改变早期的职业体验，但初级开发人员并没有过时。然而，你确实需要积极主动地发展技能，以确保你贡献的价值超出人工智能所能创造的价值。以下是如何投资自己以有效弥补这 30% 的差距：\nLearn the fundamentals – don’t skip the “why”: It’s tempting to lean on AI for answers to every question (“How do I do X in Python?”) and never truly absorb the underlying concepts. Resist that urge. Use AI as a tutor, not just an answer vending machine. For example, when AI gives you a piece of code, ask why it chose that approach, or have it explain the code line by line. Make sure you understand concepts like data structures, algorithms, memory management, and concurrency without always deferring to AI. The reason is simple: when the AI’s output is wrong or incomplete, you need your own mental model to recognize and fix it. As one engineer noted, if you’re “not actively engaging with why the AI is generating certain code, you might actually learn less”, hindering your growth. So take time to read documentation, write small programs from scratch, and solidify your core knowledge. These fundamentals are durable; they’ll serve you even as the tools around you change.\n学习基础知识——不要跳过“为什么”： 人们很容易依赖人工智能来回答每个问题（“我如何用 Python 做 X？”），而从不真正吸收底层概念。抵制这种冲动。将人工智能用作导师，而不仅仅是答案自动售货机。例如，当人工智能给你一段代码时，问问它为什么选择这种方法，或者让它逐行解释代码。确保你理解数据结构、算法、内存管理和并发等概念，而不要总是听从人工智能。原因很简单：当人工智能的输出错误或不完整时，你需要自己的心理模型来识别和修复它。正如一位工程师所说，如果你“不积极参与人工智能生成某些代码的原因，你实际上可能会学到更少”，从而阻碍你的成长。因此，花点时间阅读文档，从头开始编写小程序，巩固你的核心知识。这些基础知识是持久的；即使你周围的工具发生变化，它们也会为你服务。 Practice problem solving \u0026 debugging without the AI safety net: To build real confidence, sometimes you have to fly solo. Many developers advocate doing an “AI-free day” or otherwise limiting AI assistance periodically. This ensures you can still solve problems with just your own skills, which is important for avoiding skill atrophy. You’ll find it forces you to truly think through a problem’s logic, which in turn makes you better at using AI (since you can direct it more intelligently). Additionally, whenever you encounter a bug or error in AI-generated code, jump in and debug it yourself before asking the AI to fix it. You’ll learn much more by stepping through a debugger or adding print statements to see what’s going wrong. Consider AI suggestions as hints, not final answers. Over time, tackling those last tricky bits of a task will build your skill in the very areas AI struggles – exactly what makes you valuable.\n在没有人工智能安全网的情况下练习解决问题和调试： 要建立真正的信心，有时你必须独自行动。许多开发人员主张进行“无人工智能日”或定期限制人工智能的协助。这可以确保你仍然可以仅凭自己的技能解决问题，这对于避免技能萎缩非常重要。你会发现它迫使你真正思考问题的逻辑，这反过来会让你更好地使用人工智能（因为你可以更智能地指导它）。此外，每当你遇到人工智能生成的代码中的错误或错误时，在要求人工智能修复它之前，请先自己调试它。通过逐步执行调试器或添加打印语句来查看出了什么问题，你将学到更多。将人工智能的建议视为提示，而不是最终答案。随着时间的推移，解决任务的最后棘手部分将培养你在人工智能困难领域的技能——这正是你的价值所在。 Focus on testing and verification: As a junior dev, one of the best habits you can develop is writing tests for your code. This is doubly true if you use AI to generate code. When you get a chunk of code from an LLM, don’t assume it’s correct – challenge it. Write unit tests (or use manual tests) to see if it truly handles the requirements and edge cases. This accomplishes two things: (1) it catches issues in the AI’s output, and (2) it trains you to think about expected behavior before trusting an implementation. You might even use the AI to help write tests, but you define what to test. Steve Yegge’s advice about taking testing and code review seriously applies at all levels. If you cultivate a reputation for carefully verifying your work (AI-assisted or not), senior colleagues will trust you more and you’ll avoid the scenario where they feel you’re just “dumping” questionable code on them. In practical terms, start treating testing as an integral part of development, not an afterthought. Learn how to use testing frameworks, how to do exploratory manual testing, and how to systematically reproduce bugs. These skills not only make you better at the 30% work, they also accelerate your understanding of how the code really works. Remember: if you catch a bug that the AI introduced, you just did something the AI couldn’t – that’s added value.\n专注于测试和验证： 作为初级开发人员，您可以养成的最佳习惯之一就是为您的代码编写测试。如果您使用 AI 生成代码，则更是如此。当您从 LLM 获得一段代码时，不要假设它是正确的 - 挑战它。编写单元测试（或使用手动测试）以查看它是否真正处理了需求和边缘情况。这可以实现两件事：（1）它捕获 AI 输出中的问题，（2）它训练您在信任实现之前考虑预期的行为。您甚至可以使用 AI 来帮助编写测试，但您定义要测试的内容。Steve Yegge 关于认真对待测试和代码审查的建议适用于所有级别。如果您培养了仔细验证工作（无论是否由 AI 辅助）的声誉，高级同事会更加信任您，并且您将避免他们认为您只是在“倾倒”可疑代码的情况。实际上，开始将测试视为开发的一个组成部分，而不是事后的想法。学习如何使用测试框架、如何进行探索性手动测试以及如何系统地重现错误。这些技能不仅能让你更好地完成 30% 的工作，还能加速你对代码实际工作原理的理解。请记住：如果你发现了 AI 引入的错误，你就做了 AI 无法做到的事情——这就是附加值。 Build an eye for maintainability: Junior devs often focus on “getting it to work.” But in the AI era, getting a basic working version is easy – the AI can do that. The harder part (and what you should focus on) is making code that’s readable, maintainable, and clean. Start developing an eye for good code structure and style. Compare the AI’s output with best practices you know of; if the AI code is messy or overly complex, take the initiative to refactor it. For instance, if an LLM gives you a 50-line function that does too many things, you can split it into smaller functions. If variable names are unclear, rename them. Essentially, pretend you’re a human code reviewer (even if you’re junior) and improve the AI’s code as if a peer wrote it. This will help you internalize good design principles. Over time, you’ll start prompting the AI in ways that yield cleaner code to begin with (because you’ll specify the style you want). Maintainers of software (often teams working months or years later) will thank you, and you’ll prove that you’re thinking beyond just “make it run” – you’re thinking like an engineer. Keeping things maintainable is exactly in that human-driven 30%, so make it your concern from the start of your career.\n培养对可维护性的洞察力： 初级开发人员通常专注于“让代码运行”。但在人工智能时代，获得一个基本的可运行版本很容易——人工智能可以做到这一点。更难的部分（也是你应该关注的）是编写可读、可维护和干净的代码。开始培养对良好代码结构和风格的洞察力。将人工智能的输出与你所知道的最佳实践进行比较；如果人工智能代码混乱或过于复杂，请主动重构它。例如，如果LLM给你一个 50 行的函数，它做了太多的事情，你可以将它拆分成更小的函数。如果变量名不清楚，请重命名它们。本质上，假装你是一个人类代码审查者（即使你是初级的），并改进人工智能的代码，就像同行编写的一样。这将帮助你内化好的设计原则。随着时间的推移，你将开始以产生更干净的代码的方式提示人工智能（因为你会指定你想要的风格）。软件维护人员（通常是数月或数年后工作的团队）会感谢你，而你将证明你的想法不仅仅是“让它运行”——你像工程师一样思考。保持事物可维护性正是人为驱动的 30%，所以从你的职业生涯一开始就把它作为你的关注点。 Develop your prompting and tooling skills (wisely): There’s no denying that “prompt engineering” – the skill of interacting with AI tools effectively – is useful. As a junior dev, you should absolutely learn how to phrase questions to AI, how to give it proper context, and how to iterate on prompts to improve the output. These are new skills that can set you apart (many experienced devs are still figuring this out too!). However, remember that prompting well is often a proxy for understanding the problem well. If you find you can’t get the AI to do what you want, it might be because you need to clarify your own understanding first. Use that as a signal. One strategy is to outline a solution in plain English yourself before asking the AI to implement it. Also, experiment with different AI tools (Copilot, Claude, etc.) to see their strengths and weaknesses. The more fluent you are with these assistants, the more productive you can be – but never treat their output as infallible. Think of AI like a super-charged Stack Overflow: an aid, not an authority. You might even build small personal projects using AI to push your limits (e.g. “Can I build a simple web app with AI’s help?”). Doing so will teach you how to integrate AI into a development workflow, which is a great skill to bring into a team. Just balance it with periods of working without the net, as mentioned earlier.\n明智地发展你的提示和工具技能： 不可否认，“提示工程”——与人工智能工具有效交互的技能——是有用的。作为一名初级开发人员，你绝对应该学习如何向人工智能提出问题，如何给它适当的背景，以及如何迭代提示以改进输出。这些是可以让你脱颖而出的新技能（许多经验丰富的开发人员也仍在弄清楚这一点！）。但是，请记住，良好的提示通常是理解问题的一种方式。如果你发现你无法让人工智能做你想做的事情，那可能是因为你需要先澄清自己的理解。把它当作一个信号。一种策略是在要求人工智能实施之前，自己用简单的英语概述解决方案。此外，尝试不同的人工智能工具（Copilot、Claude 等）以了解它们的优缺点。你对这些助手的熟练程度越高，你的工作效率就越高——但永远不要把它们的输出视为万无一失。把人工智能想象成一个超级强大的 Stack Overflow：一种辅助工具，而不是权威。你甚至可以使用人工智能来构建小型个人项目，以突破自己的极限（例如，“我可以在人工智能的帮助下构建一个简单的 Web 应用程序吗？”）。这样做将教会你如何将人工智能集成到开发工作流程中，这是一项非常适合团队使用的技能。只需平衡好它与没有网络的工作时间，如前所述。 Seek feedback and mentorship: Lastly, one durable skill that will accelerate your growth is the ability to seek out feedback and learn from others. AI won’t get offended if you ignore its advice, but your human teammates and mentors are invaluable for your development. Don’t hesitate to ask a senior developer why they prefer one solution over another, especially if it differs from what an AI suggested. Discuss design decisions and trade-offs with more experienced colleagues – these conversations reveal how seasoned engineers think, and that’s gold for you. In code reviews, be extra receptive to comments about your AI-written code. If a reviewer points out that “this function isn’t thread-safe” or “this approach will have scaling issues,” take the time to understand the root issue. These are exactly the kind of things an AI might miss and you want to learn to catch. Over time, you’ll build a mental checklist of considerations. Additionally, find opportunities to pair program (even if remotely). Perhaps you can “pair” with a senior who uses AI in their workflow – you’ll observe how they prompt the AI and how they correct it. Being open to feedback and actively asking for guidance will help you mature from doing tasks that an AI could do to doing the high-value tasks that only humans can do. In a sense, you’re trying to acquire the wisdom that usually comes with experience, as efficiently as you can. That makes you more than just another coder in the room – it makes you the kind of engineer teams are eager to keep and promote.\n寻求反馈和指导： 最后，一项可以加速您成长的持久技能是寻求反馈和向他人学习的能力。如果您忽略了人工智能的建议，它不会生气，但您的人类队友和导师对您的发展来说是无价的。不要犹豫，向高级开发人员询问为什么他们更喜欢一种解决方案而不是另一种解决方案，特别是当它与人工智能建议的不同时。与更有经验的同事讨论设计决策和权衡——这些对话揭示了经验丰富的工程师的想法，这对您来说是宝贵的。在代码审查中，要特别接受有关您的人工智能编写的代码的评论。如果审阅者指出“此功能不是线程安全的”或“这种方法会有扩展问题”，请花时间了解根本问题。这些正是人工智能可能会错过的东西，而您想要学会捕捉到。随着时间的推移，您将在脑海中建立一个考虑事项清单。此外，寻找配对编程的机会（即使是远程的）。也许你可以与一位在工作流程中使用人工智能的资深人士“结对”——你会观察他们如何提示人工智能以及如何纠正它。乐于接受反馈并积极寻求指导将帮助你从完成人工智能可以完成的任务成长为完成只有人类才能完成的高价值任务。从某种意义上说，你正在尽可能高效地尝试获取通常来自经验的智慧。这让你不仅仅是房间里的另一位程序员——它让你成为团队渴望留住和提拔的那种工程师。 It’s worth noting a mindset shift for juniors in the AI era: move from just consuming solutions to creating understanding. In the past, a junior might struggle through documentation and eventually write a feature; now an AI can hand you a solution on a platter. If you simply consume it (copy-paste and move on), you haven’t grown much.\n值得注意的是，人工智能时代的初级员工的思维模式发生了转变：从仅仅使用解决方案转变为创造理解。过去，初级员工可能会费力地阅读文档，最终编写出一个功能；现在，人工智能可以为你提供解决方案。如果你只是使用它（复制粘贴然后继续），那么你并没有成长多少。\nInstead, use each AI-given solution as a learning case. Dissect it, experiment with it, and consider how you might have arrived at it yourself. By treating AI outputs not as answers to end all questions but as interactive learning material, you ensure that you – the human – are continuously leveling up. This way, rather than AI replacing your growth, it accelerates it. Many experts believe that while AI might reduce the need for large teams of junior “coder-grinders,” it also raises the bar for what it means to be a junior developer. The role is shifting to someone who can work effectively with AI and quickly climb the value chain. If you adopt the habits above, you’ll distinguish yourself as a junior developer who doesn’t just bring what an AI could bring (any company can get that via a subscription), but who brings insight, reliability, and continuous improvement – traits of a future senior developer.\n相反，将每个 AI 给出的解决方案作为一个学习案例。分析它，试验它，并思考你自己是如何得出这个结论的。通过将 AI 输出视为交互式学习材料而不是所有问题的答案，你可以确保你——人类——不断升级。这样，AI 不会取代你的成长，而是会加速你的成长。许多专家认为，虽然 AI 可能会减少对大型初级“编码员”团队的需求，但它也提高了初级开发人员的标准。这个角色正在转移到能够有效使用 AI 并快速攀登价值链的人身上。如果你养成上述习惯，你将成为一名初级开发人员，你不仅能带来 AI 可以带来的东西（任何公司都可以通过订阅获得），还能带来洞察力、可靠性和持续改进——这些都是未来高级开发人员的特质。\nSoftware engineering has always been a field of continuous change – from assembly language to high-level programming, from on-prem servers to the cloud, and now from manual coding to AI-assisted development. Each leap has automated some aspect of programming, yet each time developers have adapted and found even more to do. As Tim O’Reilly notes, past innovations “almost always resulted in more work, more growth, more opportunities” for developers. The rise of AI is no different. Rather than making developers irrelevant, it is reshaping the skillset needed to succeed. The mundane 70% of coding is getting easier; the challenging 30% becomes an even larger part of our value.\n软件工程一直是一个不断变化的领域——从汇编语言到高级编程，从本地服务器到云，现在又从手动编码到人工智能辅助开发。每一次飞跃都使编程的某些方面实现了自动化，但每次开发人员都会适应并发现更多事情要做。正如 Tim O’Reilly 所说，过去的创新“几乎总是为开发人员带来更多工作、更多成长和更多机会”。人工智能的兴起也不例外。它并没有让开发人员变得无关紧要，而是重塑了成功所需的技能。70% 的平凡编码变得越来越容易；具有挑战性的 30% 成为我们价值的重要组成部分。\nTo maximize that human 30%, focus on the timeless engineering skills: understanding problems deeply, designing clean solutions, scrutinizing code for quality, and considering the users and context. Those who combine these skills with AI tools will outperform those who have only one or the other. In fact, the consensus emerging among experts is that AI is a tool for the skilled. Experienced programmers are gaining more from AI because they know how to guide it and what to do when it falters. It’s been said that “LLMs are power tools meant for power users.” . This means the onus is on each of us to become that “power user” – to cultivate the expertise that lets us wield these new tools effectively.\n为了最大限度地发挥那 30% 的人力，需要专注于永恒的工程技能：深入理解问题、设计清晰的解决方案、仔细检查代码质量以及考虑用户和上下文。将这些技能与 AI 工具相结合的人将比只拥有其中一种技能的人表现更好。事实上，专家们正在达成的共识是， AI 是技术娴熟的人的工具。经验丰富的程序员从 AI 中获益更多，因为他们知道如何引导它，以及当它出现问题时该怎么做。有人说， “LLMs 是为高级用户设计的强大工具” 。这意味着我们每个人都有责任成为那个“高级用户”——培养让我们有效使用这些新工具的专业知识。\nUltimately, the craft of software engineering is more than writing code that works. It’s about writing code that works well – in a real-world environment, over time, and under evolving requirements. Today’s AI can assist with writing code, but it cannot yet ensure the code works well in all those dimensions. That’s the developer’s job.\n归根结底，软件工程的技艺不只是编写能运行的代码。它还涉及编写运行良好的代码——在现实环境中、随着时间的推移和不断变化的需求下。当今的人工智能可以协助编写代码，但它还不能确保代码在所有这些方面都能很好地运行。这是开发人员的工作。\nBy doubling down on the skills outlined above, senior developers can continue to lead and innovate, and junior developers can accelerate their journey to mastery. AI will handle more and more of the routine, but your creativity, intuition, and thoughtful engineering will turn that raw output into something truly valuable. AI is a powerful tool, but it’s all about how we use it. Good engineering practices, human judgment, and a willingness to learn will remain essential.\n通过加倍培养上述技能，高级开发人员可以继续领导和创新，初级开发人员可以加速他们的精通之旅。人工智能将处理越来越多的日常工作，但你的创造力、直觉和深思熟虑的工程将把这些原始输出变成真正有价值的东西。人工智能是一个强大的工具，但关键在于我们如何使用它。 良好的工程实践、人类判断力和学习意愿仍将至关重要。\nIn practical terms, whether you are pair-programming with an “eager junior” AI that writes your functions, or reviewing a diff full of AI-generated code, never forget to apply your uniquely human lens. Ask: Does this solve the right problem? Will others be able to understand and maintain this? What are the risks and edge cases? Those questions are your responsibility. The future of programming will indeed involve less typing every semicolon by hand and more directing and curating – but it will still require developers at the helm who have the wisdom to do it right.\n从实际角度来看，无论是与编写函数的“热切初级”AI 结对编程，还是审查充满 AI 生成代码的差异，都不要忘记运用您独特的人类视角。问问自己：这解决了正确的问题吗？其他人能够理解和维护这一点吗？风险和极端情况是什么？这些问题是您的责任。编程的未来确实将减少手动输入每个分号，而增加指导和策划——但它仍然需要有智慧的开发人员掌舵，以正确行事。\nActionable takeaways:可操作的建议：\nAdopt a growth mindset with AI: Use it to amplify productivity, but commit to learning why solutions work. Treat AI as a partner, not a crutch, and regularly challenge yourself to work through problems without it to build your skills.\n以成长心态对待人工智能： 利用人工智能来提高生产力，但要致力于了解解决方案为何有效。将人工智能视为合作伙伴，而不是拐杖，并定期挑战自己，在不使用人工智能的情况下解决问题，以培养自己的技能。 Invest in core skills: Sharpen your ability to design systems, think through edge cases, write tests, and debug deeply. These are long-term career skills that AI can’t substitute. Make code quality and clarity your personal mission on every task.\n投资核心技能： 提高设计系统、思考极端情况、编写测试和深入调试的能力。这些是人工智能无法替代的长期职业技能。让代码质量和清晰度成为您每项任务的个人使命。 For senior devs: Leverage your experience to guide AI (through good prompts) and to vet its outputs. Take the lead in integrating AI into your team’s workflow responsibly – set standards for usage and ensure knowledge is shared. Use the time saved by AI to tackle more ambitious projects and to mentor others.\n对于高级开发人员： 利用您的经验来指导 AI（通过良好的提示）并审查其输出。带头负责任地将 AI 集成到团队的工作流程中 - 设定使用标准并确保知识共享。利用 AI 节省的时间来处理更雄心勃勃的项目并指导他人。 For junior devs: Focus on becoming the kind of engineer who understands and can improve the code that AI generates. Build a reputation for thoroughness – always test and double-check your work. Learn from every bug and feedback. By doing so, you’ll quickly move into work that AI alone can’t do, increasing your value.\n对于初级开发人员： 专注于成为能够理解并改进 AI 生成的代码的工程师。树立严谨的声誉——始终测试并仔细检查您的工作。从每个错误和反馈中学习。通过这样做，您将很快从事 AI 无法独自完成的工作，从而提高您的价值。 Stay adaptive: The tools will keep evolving. Continuously update your toolset and skills. But if you have solid fundamentals and a collaborative attitude, you’ll be able to ride any wave of technology.\n保持适应性： 工具会不断发展。不断更新您的工具集和技能。但如果您拥有扎实的基础和协作态度，您将能够驾驭任何技术浪潮。 The era of AI-assisted coding is here, and it’s making routine coding faster. This frees us, as developers, to concentrate on the harder and more meaningful aspects of software creation. By maximizing our focus on that “last 30%” – the critical thinking, the design finesse, the quality checks – we ensure not only our relevance, but also that we deliver better software.\n人工智能辅助编码的时代已经到来，它让日常编码变得更快。这让我们这些开发人员可以专注于软件开发中更难、更有意义的方面。通过最大限度地关注“最后 30%”——批判性思维、设计技巧、质量检查——我们不仅可以确保我们的相关性，还可以提供更好的软件。\nIn the end, great software engineering has always been about problem-solving, not just code-slinging. AI doesn’t change that - it simply challenges us to elevate our problem-solving to the next level. Embrace that challenge, and you’ll thrive in this new chapter of our industry.归根结底，伟大的软件工程始终是解决问题，而不仅仅是编写代码。人工智能不会改变这一点 - 它只是挑战我们将解决问题的能力提升到一个新的水平。接受这一挑战，您将在我们行业的新篇章中茁壮成长。\n","date":"2025-03-16","permalink":"https://22cs.github.io/post/beyond-the-70-maximizing-the-human-30-of-aiassisted-coding-zuyie4.html","title":"Beyond the 70%: Maximizing the human 30% of AI-assisted coding"}]